%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: FR-ABSTRACT PSYCHOLOGY LOGO-3 up-02.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 12/21/16
%%BoundingBox: 0 0 801 801
%%HiResBoundingBox: 0 0 800.3789 800.3693
%%CropBox: 0 0 800.3789 800.3693
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font CooperHewitt-Light
%%+ font CooperHewitt-Medium
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: CooperHewitt-Light
%%+ CooperHewitt-Medium
%%DocumentNeededFonts: CooperHewitt-Light
%%+ CooperHewitt-Medium
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                      
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">FR-ABSTRACT PSYCHOLOGY LOGO-3 up-02</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-12-21T15:24:25+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-12-21T15:24:25+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-12-21T15:24:25+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEAlgCWAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAlgAAAAEA&#xA;AQCWAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Q4UOxV2KuxV2KuxV2Ku&#xA;xV2KrZJEjXk5oOlfniqz61b/AM34H+mKu+tW/wDN+B/pirvrVv8Azfgf6Yq761b/AM34H+mKu+tW&#xA;/wDN+B/pirvrVv8Azfgf6Yq761b/AM34H+mKu+tW/wDN+B/pirvrVv8Azfgf6Yq761b/AM34H+mK&#xA;u+tW/wDN+B/pirvrVv8Azfgf6YqvjkSReSGo6V+WKrsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqlcf7r/wCMi4qllzqdwLt4kYrGzlYmoF/u1PP43HH7dMCroL64lSSs1HMTyDiFopQj&#xA;oGHIdd+QNe2KqX6RvljIDM0r8liLIrVKycaoEFTRVPKo/DFVeK+kuInkSfiWSR1iAHJAhHE7g9R1&#xA;5eO2KtNcXwLlZDwjKK0jBAtGRTtQV58m7jjirUl/dLDCVaqykq0pC1QJJxZjSqnY9tu+KrLvUr2G&#xA;3naClwY1Qo4A3JldNxQVqFptiqp+kJI2kAmWZVjkaNzxHJ1WMhfhp/McVW/pCZZnQT+pHG0XpuAn&#xA;7z1COYPT7P8Ak774qrx3lwGT1mVE9YwsTQA8Eclq9uTAbYVUZL+YXCIJuKyPIsijhWNUPwMOQ/b2&#xA;+1tvgVda308rwlpKFiq+jRRyVo+Rfap+14Gm2Ko+3/3Z/wAZGwqq4q7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FVOaNnUcWCsrBgSKjb2qMVWmO5IoXjI94z/zXirvTuak846nqfTP/ADXi&#xA;ruF1/vyP/kWf+a8Vd6dzUnnHU9f3Z/5rxV3C6O3qR79f3Z/5rxV3p3NKepHTpT0z/wA14q707mlP&#xA;UjoOg9M9v9nirXpXGw5Rbbj92f8AmvFXelcbfHHtuP3Z2/4fFWzHcsKM8ZHgYz/zXirRiuDWrx79&#xA;f3Z3/wCHxVv07mtecdelfTPT/g8VXQxsinkwZmYsSBQb+1TiqpirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVWTzwwQyTzOI4YlLySMaKqqKkk+AGGMTIgDmVeXax5u17UNZf1dKv18uRW0VxHHa3&#xA;D207R3DOEuLgQA3ARvSNEUjj+31AHS4NDihj2nDxTIjePELFemN+m9+fX+FlSjL5h1GCGSPSXvob&#xA;K+t4TaQm7TUZJXN5BBMLO4Mk5RxHNxIkagJU0FCckNLCRBycBlEm/SYAemRHHGhYsdB3haQOk+Z9&#xA;Oht79rTW72LVbKOa7sZ764uH+sLArM9re2tw7IsqiMpyjAqN0NVYC/Po5kx4scTCVRIjGPpv+KEo&#xA;i63ve+48wU09T8va6urW0nqQNZ39q4ivrJyC0TlQ4ow+0jKwZW7j3qM5nVabwiKPFE7g9/7e9iU1&#xA;zGQ7FXYq7FWO+bvOdj5eW2gcGW/v3EdrCOgqQvqP/kqT9P4gEuw0Oglns8ox5/qeO/4/84x236TO&#xA;sSNNcTBY4zT019OrSqYqcR9qPoOh+eQt6v8AkzTk8HAKA/s3+bIPP/mXzcfMb22m6n6OnQQxyk2b&#xA;fYBhEjtLx+Pevw12IpTfCS4PZmkweDc43Mk/V7626Jz+Wv5i3t8sena+1biZuNhevxT1u3Aj4eRB&#xA;H2lHsd+pBcTtbsqMLni5D6h3eb0vJPOuxV2KuxVKPNPmbTvLWizatf8AIwxUCxJQvI56IoJAr3+W&#xA;ZWi0c9RkGOHM/YkB85335s+eNX1z6wmpTWNuXLQ2ds3CNEG4U0+303LZ6Bj7E02LFXCJHvP42Z09&#xA;bi81a3deWNFna9U3N5DKZ5IhwZnjkKAnYUpShp3r7Z5J7VZJafUeHiPDH7enXudr2bp4TEpSF0Qr&#xA;+WfOl5Fci31KRp7eTZZW3dD416kZouzu2Jxlw5TxRPXqHM13ZkTHixipD7XoIIIBBqDuCM60F5t2&#xA;FDsVdirsVdirsVdirsVdirsVYv55mubu1j8u2CRyXuqKzTesxSJLOFlM7SsochZAwiG3VvY5suzo&#xA;xhLxpfTDu58R+mvd9XwSGOt51uzqemeYBolyLedJtNMsLxPaz+rIn1d0mdoeK+shVWkRQQ9RXM8d&#xA;nx4J4vEjYqe98QoHi2F710BPLdNIHWNIvbbzlp1/eQ2dneal6LGGzBpFw1Sxq0shCiaSQPx5cR07&#xA;9cvwZ4y08oRMpRhf1df3eTkP4QO6yqd+evK+gxetrGoWUd1ospDa1at8LRk0UXluylWWQbCQKfjX&#xA;/KFDh9m6zKaxwkY5B9B7/wCjLy7v5p8uSClXlXXb6Lzfe3pNzceW5fq2lDUL1Fjn+sEtJbmQALyX&#xA;97w5Oof405Zk63TROnjH0jMOKfDHcVylXyuht6TSl6lnNMXYq7FXEgCp2A6nFXg3mzXNN8web/0x&#xA;HeBbDTZIY/TkV+Rhjkqzx+msgKsx6mnUZAvb6LTzwYPDMfVO/nXI3TEYhDcaW8Yr9YtQzpCOjBmU&#xA;vL78VWjAdqHoGyLtJXGd9D+K/Hu6hk/na0gPnOWeAGKK3itpbqIEo6KlrG9VIP7S/DX+br1FSebr&#xA;uz5n8uAdyTID/TH+33JQ0puJh5gMhkuLdFnuVSq8blZFWPfsrVVtvBgKbYuUBwjwq2Ow91b/AKvk&#xA;Tb6F8t65b67olrqtupRLlKlD1V1JV196MCK5MF4TV6c4chgeiZYXGdirsVeH/nh5ih1G/TQ7Y1XT&#xA;1c3D/smaRRQf7BfxJ8M7P2d0pxx8U/xcvcP1s4h45pilr2On7NSflTOtzH0snuGllP8ACnlqicP3&#xA;VzWpO5+sP4+J3+nPC/bf/Hvh+gO87J+ifvCmR6V57cvwb/bzi+U3cc4vTvKupJeaYkRP762AjcHw&#xA;/ZP3DO27L1IyYgOsdv1PKa/AYZL6S3TnNk4LsVdirsVdirsVdirsVdirsVeS/mlf6sNauP0cIns4&#xA;4Le11NJhIfVCie8khHplX9MQLzlowqKL3OdT2Njx+GOO+KyY1W30xB32vi2j8SyCO12w80rpbv5k&#xA;vbK50R1VDaW92bCF1Y/CiKlpLK5YU4qJt+2UabLgM/3MZDJ3mPEf92APfwqkui31/q3l3zheaoXS&#xA;40nT0gsJp+RlVbR55o3YkI3qerEoY0DckqQDtmZqMccWbDGHKc7lXL1cII91E10opTXWfMM9lZT6&#xA;15vsbmPVLWraVprwtJpsMpPGN/Vg9ZJHFeReQhgK8FB642DSichj08o8B+qV+sjqKNEDyG3eUUs1&#xA;HXfq3kWGHT9LuLqxuJY3l1SZoke4mMv1maaOEM8jOeDP8QWn0YcWm4tSTOYjIA+kXsK4QCeVchta&#xA;vUYZo5oUmiblHIodGHQqwqDnNSiQaPNivwK7FUu8x3kNloGo3UzlI4reQllHJh8JAoDsTXAXI0uM&#xA;zyxiOZIfOpjiFomoWyRi9qWubVJEZWhKHmVjRiwUivNaDj22+zB72zxcEr4eh8/f9x6/eK8uQRah&#xA;fac5WG0htr+GORqU5JOwond5D+7Pj9rsvRDXqpGEZc5EwP2fYOf2d7Kfzeht4POdpcAUSWyUXwUb&#xA;iJneFn+fBqD5YZOt7DkZacjult76BphqRy6bNJoxgSa9u2SK59VnEa1YNGi8GSvxUYsfo71DtiRk&#xA;HiXUY7ivt/H4HW/ybvYJdDvbYXa3VxFc+pJwDqiI8apGqh1Tb90e2Si8v29jIyxNUDH9O/3s/wAk&#xA;6J2KuxV8s+Y7+2v9d1O/tWMltdXM08LEUJSRyy7fI56XpMUoYowlzjED7G0MW0b/AHqO37B/WM2e&#xA;f6VfR2tWNrb+T/Lvo0/dRwojAUqHiDM3bqy1zwr2s9U+M/V4h/H2O17HkeOQ6Ux29BV45B22+7cZ&#xA;yGXYgu9x8iGX+RpkW+njJIaSMFR2PE7/AK86DsSYGSQ7w6XtWJ4Ae4s0zpnROxV2KuxV2KuxV2Ku&#xA;xV2KuxV5na3VvJ5i8zaxfgzWukrdGWH9lpH/ANFjjAH7XoWf/JXOinAjFixw2lPh3/2RPu4pf7Fk&#xA;h9IE2i+XpxfRSX/nnTxHp2npM3q0adP9FNsp+BE9MEuQOR4PyJplmes2UcJ4dNK5SrbkfVxd5vl0&#xA;9QpW723tIrTTdM0qRm03zZpsFm0rAFwI7iMTSNWv7ySG9lJr+0PHBjlIylPIPXgmZf7E0PcDCPwV&#xA;RN3DYao3lW6lvbnXY2CR6jcazf21nLG4DRvJxuCyzEHeJE3PQgHafAZw8eIiMX80YoGQPWvT9P8A&#xA;SJ96pdpvka2svOcV2tw9xaLeHT9RZTKInubqznRxF6kk8n7kOi82cnkxG1MyM3aJnpzGqlw8UeV8&#xA;MZR50APVvsByHW029Q8l3E0/lTS3mYPItusbSDo/pfu+f+y41zm+0IiOeYHf9+7Ep1mGh2KsR/NS&#xA;7W38mXau7Rx3DRwu6IJGCswJorMg3Ap1wF2vY0OLUDysvDLiaCwgWOwklWWVY5freyGRGFStASUC&#xA;OKUDGpBJ7AVvZxiZm5VQvbu/Xf46ou//AExBcwXMdp6UVi4uLR/TEaGgRzxUBQ4BHI0+nC1Y/DII&#xA;Jsy2O/vDI/Oeqy6t5yuL2KSKEafZRC3MjKoPrID8THqFa4P6u+EuBoMIxacRNnikb+H/AEixgx6h&#xA;p00KtJDeWjlvq0xdWQFiy8lkr+6JIJ327kGmB2NwyA7GMuv9nX8U9A/JqM2Ws6jZo9FntkmmtZFp&#xA;NE6PRFY04n4ZT0+kDDF0Xbx48cZd0qvofxX7S9ayby7sVS3zLfz6f5c1W/txWezs7ieIf5cUTOv4&#xA;jMjSYxkzQgeUpAfMpD5Q0uX1LRQTUoeJ+jp+Gen5o1JsQ+kxKlxcdynwA+1T/TLM8rAV7Y2vzaj5&#xA;O8vxvTlHCwloO8LmBD/wKV+nPDfbb93qfDHL6vn+C7zsbF9Uvg1coXgbxHxfd/ZnJ5BcXaQNFOPK&#xA;c8iavaEbmSqMPZlzY9lTIzR83B7QgDil5PRs7J5h2KuxV2KuxV2KuxV2KuxV2KvLdT1Systdu9Dm&#xA;hkkur3Wv0hcWluhklnggt4ZIFRRQUeYICSQo4vXvnS4cMp4hlB9McXCCeQJlIH5C/PeNMmtQutZh&#xA;84/4o1hLeG20KKBLy2j+L0Ir1pI95tvUlgVhI1BTi5VRvVnFDGdP4GOychNHvMaPLpGXL3iz5Kjr&#xA;iJpmtNdidDpGlGPVtLdWqrxahqFsbhFYHieLRycfaRcnpj4mPhr95O4S98IS4T9ov+qVR95b2Fjo&#xA;2n+Z9aWFZr+5afVra64UktNQKIYSj/aNuiwNTf8Auz45RjlOeSWHHdRjUSOkoXv/AJx4v9MqzzEs&#xA;PkyytrRwV8tjUbW60+4XkTbFrlWuYJGB5FTG7yRufdSfs1lpSdXIyH99wSEh/O9PpI+NAj3HvUbs&#xA;08l2txa+UNEtrlPTuIbG3SVKUIZYlBB9/H3zT9oTEtRkI5GcvvQU5zEQ7FWK/mdY3F75Kv4YONR6&#xA;Ujs/RY45VZ26H7Kgk03pgPJ2fZGQQ1ESfP7nhdzc6c2nWoW19WOFpLcylnWbiKSK2xMa8mkeg4nY&#xA;U365B7SEJ8Z3omj5d3v6DqvujePqCC0QBI7gmMkhiDJGm0n+Txj8KHfFjDhEPV/N+4nl8/uZL570&#xA;SK0853cIkC297bRRQRipLymJUjQbnYSRqxJOwwl1/ZuoMtODW8ZEn3Xv9hIYtCbxbXT3ihEqS8rZ&#xA;onr6coMpZUfcdWJoag7bGowOylw8UgTVb+Y25vR/yUgM1/q2pxljFKqJJ6g+ISli5AcAKwp4U9x0&#xA;qYug9oJVGEDzH3PWMm8u7FUFrdvNc6Nf28IDTTW0scStuCzoQoP0nLtPIRyRJ5CQ+9L5C0hnjnlt&#xA;5AyuOqEUoymhBB6HPVs9EAhsVtNQ+vdSHvIR9IJJ/XkMp2AV7CmnxW3k7y5IjhmlhlZ6datKZPw5&#xA;0zw/259Wr4vh8qd72LLaQ9yIiPKJeW9VFfuzlY7h2Mtim3kuKQ6xb7chF6nMjsArKD95GbDseJ8e&#xA;Plf3Fwu05Dwj509FzsXmXYq7FXYq7FXYq7FXYq7FXYqkWu6TffpG213SUjk1O0je3lt5TwW5tnIY&#xA;xepRuDK6hkalK1B2NRm6bPHgOLJfBI3f82XfXUdD+xLzx7Y6npfmS71u4jivmu5TFoDsOcDyMtvH&#xA;NcCv71xCFERHwUFV3NRvxPw54o4wTHhHr769REe4XfF16HZkjPPflzRotbh0+BTBpuqRJ+mIomKx&#xA;26NqNoVlRd1j9Zgwagp8PLscp7N1eQ4zM7zgfT3y9E9j31+mkApp5m8u+ULa70/TZ4oY1una71XU&#xA;LyQyTfVLSjFWuJ2MgEkzRrTlQjlmNpNVqJRlME+naMYihxS/ojbaN/YoKp5ftNb8waVplrfoE8v2&#xA;Mgb15qmfUUtZP9EcxsB6cbcEkfnux7cdzHVTx4JylD+9l0HKHEPVv1O5ArYe9SzzNIxdirsVadEd&#xA;GRwGRgQyncEHYg4pBrd4X5y8gav5ZS6urCJL3RpZVkVipkktyvLjzT7JADleRBHyNMgRT2mg7Tx6&#xA;ioyPDkA+B5fimO3d9c3Vxe2oJN7OqKkw+3KgAYwt/MW2Kn7W3HcEABz4YxERl/CPs8/xt1TLz9eX&#xA;0Pntri4tQJ4ktWht25BaiFCKBSD9uuwOJ5uP2bCJ01A7Hi3+Ja0bQdZ1fzLJbeXR/odifRE81fQE&#xA;aNWrn4q8pKuBue46Y0uo1OPFhBzfVLehz/FbPcfLHl6z8v6PDptqPhSryv3eR92b+A9qZMB43Waq&#xA;WfIZy/ATXC4rsVdirxb8zvyi1CTWZ/M2gKJklrLf2A2k50+N4gB8XL7RXrXpWtM7DsftyAxjDl2r&#xA;aMv0FmC8st4mimuUZSpEpqDsQSASDnSyNgHyZPV4Tcnyd5cEsXpqIZ+BoRUeu1Ov+TxP054l7df4&#xA;5ty/TQv5O+7Gqpd9hHaXbXF76UECF5W2AHanc+2czpsUslRiLLnZ8kYWTyegeXdC/RUEnNg9xOQZ&#xA;CvQACgUZ1vZ+h8CJs3KXN5vW6vxiK+kJvmxcJ2KuxV2KuxV2KuxV2KuxV2KqF7fWljbm5u5BDAGR&#xA;DI1aBpHEa1p4swGTx45TNRFn9W6se1TVPy81Vp4dTNleNZrP6xniD+mLX++o7LsU/wAk/LM/Dh1e&#xA;KjDijxVyPPi5fNO6lp035eL9Z022lhkbUHks7qOZ5JWka2i5vE7zFjSON60rQVNN65LLHVmpkH01&#xA;IVQqzsdu8hd1PTR+WXEanbi1nIKcb65DzyLWNplAluObqPTQt1pks3536DxDyGw51yjtz2TuyTSd&#xA;a0zVrd59PnE8cb+nJsylW4hqMrhWHwsCKjoa5r8+nniNTFFCNylDsVdirsVS7VfMOiaUypqN2luX&#xA;Uv8AFUgLWlWIBCgnYV6nbBbkYdLky/QLSrUF8gG8jvb2G0+tw0kSZovjqFSRTsvxGkilfntvjs5W&#xA;I6rhMYmXCfP3j9BUr7U/y8vb+1vb1raa8jKrbTSIxZW5kKhJXZw4NEbcb7Y7Jx4dXCJjHiEev6/d&#xA;5pqmveX7e6i06KZUndikcEUb0DCQxmvBeK/GKb424x02WUTMjbvvyv7k2wuK7FXYq7FUJd6rp9pK&#xA;IrmYROy8gCD0rTrSnXMfLqseM1I0W7Hp5zFxFpfqOn+UdTMy31rbXLwoLiYvGC6qQG5cgOW4zJw9&#xA;qHGTwTI4RZ9y+DPbbma+KrcN5amSLT5hAyQmOOGDj8KFlHpqtBQfCRTMHUZcGY8OQiRvr3n9bbih&#xA;mh6o2P2KtvqWhxQSm3kjjigVGlEa0Ch9k2A74ceowRieEgCNXXnyRPBlJHEDZRtvcQ3EKzQOHiev&#xA;Fh7Gh+45k48kZjiibDROBiaPNUybB2KuxV2KuxV2KuxV2KuxV2KoDXtJj1fRb3TJHMQvIXiEy7mN&#xA;mHwuNxujUYb5dps5xZIzG/Cb9/l8UsMH5Rwm0igfVGLi4huLmYQgGVREY7qNhzpS4LFv8n3zcfy4&#xA;eIng/hIG/Le4nl/Dy802gLr8kXnl9X/EEyyvyllcW6BvrMrsZpEKOlA6OVo3I/5XbL4e0PCK8MVy&#xA;5/wjkOXQ77UPJeJNLD8r5rK3S0i1VPqi8WZDah2Lx2slsm7yOnCkoYqyGtKVocxcnbAmeIw9X9b+&#xA;kJdBd7c7W2Q+U/Lcug21zDJdC5NxKJQFR40jCxJFxUSSTvT93Xd6CtAANswdbqxnkCBVD9JPQAde&#xA;73oJTzMJDsVdirsVYr5u8m3euTl7e+FrDcxR2moRmMOXgjkaUemxPwsGbw323wEOz0OvjhG8bIJM&#xA;d+tVuoy+QrmcF5tRjeanH/eb93xEUMSjg0rH/dFSeVd9uJAOCmce0gOUTX9bfnI93n+u0uk/LDUC&#xA;/ppq6m1mufr1yjQkt9YSvpFWaR3ZFFAVZ69TyJOzTeO14czD1CPCN+nXpV/D4J1Z+Ub+11ePUxqK&#xA;NITIbqP0ZUVxJcPMQgS4UCgfiOYfxw04mTXRljMOHurcdIgfzfLpTJ8LrXYq7FXYqlmo6Fb39y00&#xA;7Ghh9JEBYAMGLBzRgGoTsCMwtRoo5ZXL+bX7fNy8OrljjQ77/YoWmgXMF9JdPdRyieNIZ4jCQDGi&#xA;haKfU2Jp1NcqxaGUZmRkDxAAjh6D/O/W2ZNXGUBERIokjfqfghY/JkYjRJbtpaU9RuFGbjy4mobY&#xA;hSBX2yiPY4oAyv4e/wA/d8m09pm7EadbeTmhidDfM7TKEmb0woIVkZCvEhgQI6faP0Y4+yOEEcd3&#xA;z28xXn071n2lxEHh5ct/f+tO9NsvqVnHbc/U4FjzIoTyYtU1J333PfNlp8PhwEbuv1uBny+JIy5I&#xA;nL2p2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5t5p/NF47s2uiUaOPaS7IB5MDSiBgw4+/f9cSXotF2N&#xA;ceLL16frVPL/AJ91e60bWLm4aJpbCJZIS9FJLEilFCg+3viCx1XZmOOSERdSKT2f5qa5Fcq9xS4h&#xA;r8cRVF270Kqprgty8nY2Iihsfi9R0jV7HVrCO+sn5wSeIoysOqsOxGSeaz4JYpGMuaMwtLsVdirs&#xA;VSnWtYntnTT9Oh+s6vcozQRH+7jQEAzTtUUjUntux2GBytPgEhxzNYxz7z5Dz+7qkkCanJ5YfW/0&#xA;pfHUYopZZI19F4zLDyV41iCcWTkhA/aI71wOZIwGbw+CHASO/ket3z+xW0iW98wTXsk2ozQR2zxx&#xA;RR2JVIfjt45Wb1CrO7cpDtWg8O+FjnEcAiBEG7Pq5/URy+C7TvM0NpqEOm3moR6hb3khi03UlaIs&#xA;0q15QTLHxHMfssFo1abHq2jLpDKBnGJiYi5R35d4vp5Xt7mU4XWOxV2KuxVAa3renaJpsuo6hJ6d&#xA;tFStBVmY7BVHcnA36fTzzTEIDcvEdV/OLzhcX8kthcLZWnI+jbrFE5C125NIrktTrQ5Diexw9hae&#xA;MQJDil32f0Mi8w/mR5oh8s6Dd20kFvdajFLJcSxhJDWKTgKK4ZV5Dc7ddu2a7tHVzx0I7W6M6DHH&#xA;NOO5ETs35K/Nu7N2LPzJKrwymkV6EVCjE9JAgVePuBtmPpO0zdZPm1anQCrh8nrWb11DsVdirsVd&#xA;irsVdirsVdirsVdirFPzL8yQaJ5Wuaycbu+Rra0UGjcnWjN/sFNa+NMztBoJ6mfDHYDmW/TzEcgk&#xA;RYBt85cl/mH35tv9C8v5/wBn7Xp/9EUf5n2/sZN5YS2fy35pLjk62kHAg9P9JQ9N/wBpVyjL2BKE&#xA;4x4/rNcvK+9xs3bnFOEhGuEk8/Kv0sbpl/8AoYl/PHy/a5P+iKP8z7f2PTvyS8xw2l/daJcycVvi&#xA;stpX7PqoCHX5utP+BzE1nYc8GPjEuIDns6ftTXR1JjIR4SHtGaZ1LsVdirTMqqWYhVUVZjsAB3OK&#xA;QLYVbatc3lp5p1SzjkjvmgV9OJALm1WBvq8ijr8cgldQfEZF3E8IhLFCR9N+r+tfqHwFBXsF1a80&#xA;BpNJuItP0eKB49MQxerLLHGpVZZGZgFD8agBa03Jrtha8hxwy1kBlkJ9W9AE9B7kg0zR4ZPJ+q6l&#xA;bNPHOsZUJBIyepGltGeMyofjoxc7UbiaVwOdlzkaiEDVX1HI8R5d3TytHP5b0vTh6FvKslvr1mkF&#xA;vqkhDcb2Gr27B6UVZARwVfhHAADGmkaueTcjfHKzH+ifq+XXruzLRdTGpaek5QxTqWiuoG+1HNGe&#xA;MiH5Hp4ihwup1GHw5VzHMHvHRHYWh2KuxV5Z+cksupJb6daPyayYzTxdmdlooHuqk/fkZPTdgxGO&#xA;5y/i2DxsggkEUI2IOQesZZrphPlTyt6YIP1e65V/5inr/wANXNL2t9Ufc8zmv8xkvvj/ALkJJZ2c&#xA;93OIohUnck9APE5pZzERZTGJJoPofyRqK3Xl+2hMhkuLNFgmJ6ngKK3+yUZ0/ZerGbEP50di6DtD&#xA;THFkPcdwn+bJwXYq7FXYq7FXYq7FXYq7FXYq8v8Azf8AJi+Zr/TuWpi0FpFIPRMXqbyMPirzSleH&#xA;4ZD/AEax7IJxjF4sp7n1cNd38MvNBycLz/8A5UxF/wBXxf8ApHH/AFWw/wDJ3D/yi/8AS3/q2jx/&#xA;JnnkP8tNO0/yt5hsZrtLw6rGYXnMXAxqsbcTTm/Rm5dR0y+HtpLXgagY/C8An08fFfXc8IoHlyPV&#xA;kMl7sJ/5Upb/APV2f/kQP+a8wf8Ak7mX/lHj/pz/AMSx8byR+gflLBpuu6dqI1dwbO5in/uQP7tw&#xA;1PtnwyMv+CpLMPDngjGM/STxnYHa/p6L43k97zLZOxV2KpR5vk4eV9UAJDy20kEPGvIyzKYowKdy&#xA;7gDAXL0IvNDykD8BufsYmFm+v6gup6t6Nn6VrpzQ2UHGaZoVkle3i4mZzwE9GMYrvTamB2djhjwQ&#xA;uVyl6jsLocR5Detr+1UvVfSvLmr8EbSrHU5YoNLsJXUSR+sRHM6IpPAMGL8AaihO2LHHWTNC/XKA&#xA;JkR1rce/utMYtP1mPzNqdlpV5HY2Agtrko0PrD1HRoQoq68fhtwTTr7YWiWXGcMZTiZSuQ51tz7v&#xA;6Sh5X9Ge81DQri2iezRWa/08r6lvBc+pQiLkD+6nX96iH7O+AM9ZcYxygni6S6kV1848ieqM8nS6&#xA;Smp69ZacQIIrmOREVmdCrQrGzqzE1/eROpoduOENWvjMwxynzMT99/cQfiynC6x2KuxV45rMyTav&#xA;eyo3OOSeRkbxUuafhkHr9PEjHEHuDF9e0EXIa5tlpcDd0H7f/N2Ah2On1HDseTMPO/luMeSvK6Wo&#xA;T1YESIuKioli9SR/lzWv05qO2eGOOMj3vPYMksmpyeZP2FI7CwgsoBHGKk7u56sc5HJkMi7yEBEM&#xA;4/LiZFv7uIvRpI1Kp48Tuform99npgZJC+YdP21EmET3Fn+dY847FXYq7FXYq7FXYq7FXYq7FXmH&#xA;nfT/ANIeYZ5HcqIlSJAB2UV/Wxzje1vXnPls7LD2YMkRLiq/L9qQf4cj/wB+v9wzXeC2fyOP5/2f&#xA;tZR5Y/3HaHrFqDzEkYZSV3q/7o/P7QzbaDN4eHJHy+/ZhLszhlEcV8RY1/h23/nk/D+manwR5t38&#xA;jw/nF3+Hbf8Ank/D+mPgjzX+R4fzi9ksJnnsbeZ/tyxI7fNlBOd9gmZQjI9QC6rJDhkY9xV8ta3Y&#xA;qx3zryls9PsvrQskvL+FZLv4QYxAHugVLHiG5W4Ar92Auf2ftKUq4uGB277qP++b/QNqIbOfQLmO&#xA;K409ZI4HY+vFIszK0qzb8iXdAS4PKvj0xpfzMrkMosSq+hFcq93dySNx/iC+1201BUt9ds7cW9lZ&#xA;19VUHprM0sRKgOJXdQ1Pi40BpXA5g/cRxyhvjkbJ5dao+7eul3zVdFu082Wmtz2l61lc3YtoowlQ&#xA;8cUaBwx4lHKyO8iEhhtsCDjzY6iH5WUBKPEI8XxJP6BRSqBtUs7O/gs9PjTT9QvorD1tPlEfL06R&#xA;zmITFKNLRk5l/td+5XKkITlEykeKMDL1D4i6vlzquTI9MulTzRawxWE+nwS6e8H1eZEVVFrIjR+m&#xA;Y2kU7TsG38MLr80LwkmQkRO7F/xA3d13BlWF1jsVQWt3z6fo1/foAz2ltNOqnoTHGXA/DLtPj48k&#xA;Yn+KQHzKXzV/iTV/9+j/AIBf6Z2n8g6X+afmXZfyhl7/ALFsvmnU4oy7zKFH+Qv9MlHsDTE0In5l&#xA;f5Qy9/2PTrXzhY635V8vLfLwaeJzI4NArwOYFrTpy4E55N7d4pafN4MOQ9XwI2/S4UdXkxTMonco&#xA;r9DWH8h/4I551+an3tv8sajv+wJp5bsrW01eGSJCGaqHcnZhm37C1kxq4A8pbfY15e0c2UcMjt7m&#xA;cZ6W0OxV2KuxV2KuxV2KuxV2KuxV4r+ZXmBtO84XkD2tQVieN+fHkpiUVpxP7QIyyHsXHXDx/F4e&#xA;Lpw3Vbc+IO30vaZxYxGrrzYv/jNP+WX/AJK/82ZP/k28f9WP+k/485H8sn+b9rJfLGq/pDy95kvF&#xA;iWMWVtExQyirfvPU/lFP7qmY+X2JhgkMXik+NtfDyog9+7Vk7VJlE8P0n9FMa/xmn/LL/wAlf+bM&#xA;yP8Ak28f9WP+k/482/yyf5v2u/xkn/LJ/wAlf+bMH/Jt4/6sf9J/x5f5ZP8AN+19EaUJBpdmJY/S&#xA;lEEYeL+VuAqv0HKBjGP0A2I7X7nR5JcUie8orCwdirHvOjW8dlYXFzGZLaC/geYBDIaGqCiKGryZ&#xA;wtPfAXP7PBMpAHcwPl+O9Lr7/DhImW1m8v6gdrXVGtzbqJD9lZZEHAqT1SU0PzwORj8blYyx6x4r&#xA;+Q5/EJa1013Y6vqhH1bU4LeHWbaRRyMc8cLW08Y8UJs+DjwOLkCHDKEOcCTA+YJ4gff6rCI8t+V4&#xA;TpVzpwdodT0oiK01C3coyia2im4+oteS83NVNR3p0xAa9XrDxifOE9zE+UiOXw5qUC3MXlBY3uI7&#xA;mysVigv9Lmi9K6hdXUEJLCy8ZFb4kbgeWxrvXFlLhOe6qUrMZA3E/A9Oh32TnT7XUYPOUUNze/pC&#xA;K306X03eMJNGJZ4gokZTwYv6R3Cr9nC4mWcJackR4SZj3GgeXXa+882UYXWuxVB6zC82j30KJ6jy&#xA;W8qKh6MWQgDbxy3TyrJEnvH3pfKcsqRIXkPFV656dEEnZsSG8vJLmSp2QfZXM7HjEQr1qPSBY+Rf&#xA;K03JWa5t53ahr9uYyjv2WWn0Z4Z7fHi1pl/m/wClpoyc018veYfT42d437vpDMf2f8lvbwPbPONT&#xA;pr9UWohnOgqTqsO1QORP/AnMr2djeth5cX+5Kw5suz09vdirsVdirsVdirsVdirsVdirBvzS/LiH&#xA;zfY28sJEep2Rb0m2HqRt9qMsffda/wAc2vZna+TSXwjiEuhbsPDxVM1F4ZeeQ0srmS1ummiuIjxk&#xA;jbjUH7s2v+i3L/Mj8y77H2PjnESjOwfJkflbRYbLyz5qtkMjpd2sCyMafDSdV2oPCQn6Mw9R7Qzy&#xA;5ITMQPDN++2vL2TGM4ji+o/oJYr/AISsP+WiT/hf6Zmf6Lsv8yPzLkfyHH+cfk9D/Lb8nKapZa9q&#xA;HIWVuRPbQScSZWG8bFR0UH4t+vyynU+02XLjMOER4hVun1uHFiPDGXFLr5PcM5t17sVdiqhfWVtf&#xA;Wc1ncoJLe4Qxyoe6sKYs8eQwkJR5hJbLUJbRYdF8wR1Mg+rwX7hTb3YpRVap+GVl+0jChNeNcDmZ&#xA;MQleTEfMx6x/Z5/NKvL3l+1t9E1K9juZI4ZE1C3toXKmK3g+szEFdqnYA/Ex7+OABytVqZSyRiQL&#xA;9BPeTwxSbyzFfapDctY2s0WolopZbg3ktpFbn6vEiIAizrK7BOZDR0od+2IcvVmOMjiIMNxXCJE+&#xA;o33UOnNdeLfalqCLqfGLX7BvQW10sK09zLCEmSaYzBYxbqSrgMtKnrXbFEDHHD0b4pb3PlEGxQrf&#xA;i5jb9rNvLelXdlbS3GpOk2r3ziW/mjFF5BQqRp34RqKD6T3wh0+rzRmQIbY47R/X7ym+FxHYq7FX&#xA;gf5xfldrKahc6/o8IuNKcGa6t46B4H/3YwTbkp+18O432pncdg9sYzAYshqfIHv7viziXjudazev&#xA;wTSSeQ/KitF6YW3uaNvvS5de/sob6c8I9v8AbXkfjkPucfLzUbW1uLu4jtraMyzysFjjXqSc4nHj&#xA;lOQjEWS1vZPJehX2laYF1Bw922wAPL00HROXfOu7I7LGmBlL+8l9g/HNsjGmQ5umTsVdirsVdirs&#xA;VdirsVdirsVdiqU6jpvlfWZPRvoLS9mUtEA4R5VKAFlB+2pUMCQOlckcUqsg05GHU5cX0SMUDpGj&#xA;+RNOs73T9O+qrb3Kj6/D6/qlkccF5l3dgp5UHzyR08x/Cd/ItmbXZskhKUrlHl+AhrXy9+WmhSik&#xA;Wn281SUNzKsjgoaHiZ2ZhxIpthhpckvpjI/AssvaWoyfVM/Db7mU29zb3MKT20qTQSCqSxsHRh02&#xA;YVByEoGJoii4KpkVdirsVUrq7tLSL1bqaO3irT1JWCLU9qsQMWcISkaiLKCuNR8t3sbWlxdWdzHI&#xA;RG9u8kTqzHopUk1O3TA3RxZoHiAkD30Uql8u+UI7YKtz9V0+YEyWyXbJbSqjDlVC/GlTRuNPA405&#xA;I1WoJ5XIdeHcfZ8le5sPLN7LLfi/9OOUKt0ba7MUUoQHj6npsNwoPQjYb7DFhDLmgBDh5crjZHut&#xA;E6Unlazjll01rSNXo088ToS29AXkqSdzTc4tWY55kCfF5c/sCZx3NtI4SOVHcoJQqsCSjfZeg/ZP&#xA;Y4XHMCOYVMWLsVdiqBl1zRIjKsuoW0ZgYJOGmjBRj0V6n4SadDlw02Q1UZb8tilj+t+R/wAtNS9a&#xA;XUtPsVaHjLczRsLZlD14tK8LRtRu3I75naftHWY6EJT32H8Xyu1som5t/IN1ptpYyz2TWNnEDaIt&#xA;wqhIk/d1VlcHiKUO/XNbrOzpak3lhKRvuPM+5BFomyn8l6dam7s59PtrcFY2ukkhVasaKrSV3LEb&#xA;VO+Rw9mHGeGGMiX9Xf8AWoCcW9zb3MKT20qTQSCqSxsHRh02YVByUoGJoiiqpkVdirsVdirsVdir&#xA;sVdirsVdirsVea6D5D856N5iXV/VsL5ZnnubuEyz25W4u2PqlW9K49QBQlDRK0pxHXOh1PaWny4v&#xA;DqcaoDYHaPLrGuvf72Vpbp/5XeabZBYt9Q9G3SWeC8jZw0s09xFK0MxK8lVfS+EhT4+wyMvbOCXq&#xA;9dmgRtsBEix8+8LaaXnkHzPPd3VyVsXN9DdxTRGY8Yzc3EsqlS9pKz8VlH2fTNfbMfH2nhjED1+k&#xA;xPLnwxA/niuX9JbZ9pVmLLTLWzCqvoRJGRGKLVVANNh3zRZsnHMy7yhFZWh2KuxVKfMejS6rFZRJ&#xA;IsawXSTysQpPBFYHiHSRSfi/aFMBcrS6gYjInrGvxuGGH8uddk022sXe0jW1SVOaureqslBwNLWM&#xA;oOIPxVZhXY9sFO3/AJVxCZkOL1V8K/zzf2BDxflf5ljBVr22lijRltYS7gKZZVmkqTE3Vwex+WNN&#xA;h7Ywn+GQPX4Ch17k2h8i6wdbh1OaS3jjM8TXlkr+pG8UUTIDtBAvPkx/YAoxxpxZdo4/DMADyNHz&#xA;J/rHb4nkpX3kDWX0U6dataK09klncSM8ihWS5MxdQsZ51U03pjTLH2njGTjlxbS4hy/m137fajvJ&#xA;Hk3WNC1Ce41C7juYzbx2lsELErFC37sEFV/Z674gNPaGvx5ogQBG9n3nmzLJOodirsVebat+VN5e&#xA;3NzfxXqxahLfXE8JIjaKO3mJcfC0JLuWCVDkgCvEjOhwdtRgBAxuAgB1skf52w58q82VoS3/ACv8&#xA;0wW1+q3NkTf20Ns1vzmogsmgFr+9dJA4EULg1iFCf2stl2xgkY7S9Mib2/i4uLaxW5H8XTott63+&#xA;WnmjUWEsKafayGSKWQesXVjFGY9wLNFDmv20VVpsY2PxF0/a+HHseM7Ecu83/PO3kST3SHJbdqH5&#xA;XeZL27mvBPa2zXNEuLMSs8LIls8SOSlvAvMO5O0YFGb6XF2xhhERqRrka3+oH+dLavPoFt6TpVmL&#xA;LTLWzCqvoRJGRGKLVVANNh3znc2TjmZd5QisrQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWmZVUsxAVRUk&#xA;9ABgJrcpAt515g83Xd9Nxs5JLeyQlVCEq8pr1JG4HtnH6/tWeWVQJjD7ZPTaPs6OMeoAy+5Rj8w6&#xA;lB5a1x21JobmCBHgkkq4jLOEop+I1NQo9zm89k8ss2o8PJc/6P47uridqYIxETEAPP8ATPO/mewv&#xA;IbuK/uZhy+C1mkeX6wSaEyKxbY9Nt/5d6nPVM3Z2GcTExiPMCq9349/c6enuvlfzNYeYdMF7afCV&#xA;b07iGoYxyAAleQ2Yb7MNjnFazSSwT4ZfDzDAhN8xUOxV2KuxVjXnTzfHoFqscS+pqFwreip+ygG3&#xA;Nvp6DvlmPHxOs7S7QGnjQ3meX63lY80eYvrX1n9JXHq8uVfUbj1/lrxp7UpmXwDueV/O5uLi45X7&#xA;2Yebdb1A6s0cF64gRIyixMyLVkDHpSp3zz/tjV5BnMRIgCtht0fY+ysGOWASMQTLqmPlHzhK8yad&#xA;qLtI0jcYLhjU1OwRvGp6HMrsrtYkjHkN3yP6C0do9mgAzhtXMM4zp3QOxV2KuxVIfO3nDT/KehSa&#xA;reKZTyEVvbKQGllapCgnpsCSfAZndn6CeqyjHHbvPcEgW+Zdb/Mjznq2pSX0mq3NsWYtFBbTSRRR&#xA;CuyoqEdPHrnoun7J0+KAiIRPmQCS2Uyrzr5580P5L8ptHrU4lvLe4e9aHlC8jRTGJebqQWpxK+5F&#xA;e+azs/s7CNTmuAqJFXvVi9h+O5ACz8tfzc1vRr76vrVzLqGjzEKzTyhpIGqPjRpDVlA6pX5e8u1+&#xA;w8eWN4wI5B3DY++vvUh9HRSxTRJNEweKRQ8bqahlYVBB9xnn0okGjza1+BXYq7FXYq7FXYq7FXYq&#xA;7FXYqkPnLVobHSngJJnvAY4kHUjYOfuNM1Xa+qGLEY/xT2H6XY9m6c5Ml9I7/qebfFyO4DgfE37K&#xA;L4DON+/7nqPx70S6g+U9fUW4mQwQ+nGQSzN660YgHx3+j552HsV/jfcP7XT9sco+95tvWQmQcqUu&#xA;bkUIUEU9OOlASQKbdegooJPsf4A/Sfx9ro2eflH5kj03WTpc4McOq8BbRjfg6BirP7ycqe+3ReOa&#xA;PtzSHJj4xzhz/Hl+N7YyD2vOPYOxV2KtEhQWY0A3JPQDFXi+vXlx5r8zyfUVBqpjtEdgtUiBbqxA&#xA;Fd2zNiOCO7xWqyS1ec8Hw9w/FscYFWKmlQaGhBH3jLHWlmnmoAa3LSP0x6cHwDt+5T9XTPNe2v8A&#xA;GpfD7g+5dj/4tD8dUFJZ3dpDbXjURZyWt2VlYngRU0BNKHxzClinjEZ/zuXwc0ZIzMo93P4vV9F1&#xA;SPVNNivEHEuKSJ/K42YZ3mj1Iz4xMfgvH6rAcUzEo7Mpx3Yq7FXzr+fvm6LVPMEOiW28Gj8xPJXZ&#xA;55AvIU/4rC0+dc7/ANmdCcWI5Zc8nL3D9f6myIedalf3N1backxQrbW/pQ8I0QhBK5oSiqWNT1ap&#xA;zf4cYiZEdZXzPcEsh82/8oX5KrD6Q+q3nxb/ABf6Y/j/AMF9OYGh/wAYz736o/7kIDHdW/RqT+hp&#xA;k0k9kgV0mnQRyF3jT1QUDOBR1IG5+ZzPwcZFzAEvLcczX2JfRf5Ieb49b8qJpslRfaKqW8gJryhI&#xA;Ihcf7FeNPb3zgPaLQnDn4x9OTf49f1sJB6LmgYuxV2KuxV2KuxV2KuxV2KuxVgX5gXCPqUEEe0sU&#xA;RMkh+yqudqe+2cp29kByRiOYG/xei7HgRjJPIliu1FAUlSf3cfdz0qaf5/ic0X497t/x7mV+XILS&#xA;Tyrrv1h+QkikS5ZVBoghP2f5qVPtnYey+0rG8+OP7Hn+2CeOI6U8U3rGBGOVK21saEKCK+pJWgJI&#xA;Fd+vU0UAH2T8E/oH4+11aL0W8gs9WtL2d2NvBcxTXM619SUo4cqld6bV/E9hlWoxmeOURzMSAO7b&#xA;8fi1fTgIIqNwehzzhqdirsVQGv3MNtol9PNX00gk5cftbqQKffkoiyGjVTEcUieVF4HSRVD0IVqg&#xA;NuAdtxX6cz3z/cbo/REhudZsEmp8VxEslRUMpcA1B7/r+fWMtgXI0wEssQf5w+9nX5hxwrq8Em3q&#xA;NAOSeNGahOcF2/GIzA9eH9JfZOxiTiI6cTFaySGgqx3NBv0FSafIZoty7fYM/wDy5uI20u5txX1I&#xA;5ub16UdQBT/gDnWez+QHFKPUSv5/2POdtQIyCXQj7v7WW5v3TOxV2KvkHzL5m+v+YtTvbOOEWt1d&#xA;TTQ+pbW7PxkkLAsTHUnfvnq2k0nBhhGRPEIgfVLu97aAkLuzsWbqfAAD7hmcBSva/wA3NKs1/LLy&#xA;k1uVDW6wRQluEdY5LXk5qSKElFJA65x3YeaX53NfW/sl+1iObyOxun0i8t76CSKW8hYOkZUSohH8&#xA;4YcG27CozqskPFiYmxE/D5dWT0v/AJx41OEea9Tt5yxu7629SN9uJMb8nB9zyqPkc532pwnwIEfT&#xA;GX6NmMn0FnCMHYq7FXYq7FXYq7FXYq7FXYq8y84SyyeYLgSCoQokMQ6tRRQn23/z3zie1pE6iV+V&#xA;D4PV9mxAwivik38xLb9JZRuADtwSn+f0VOa78E/oH4+xzvwB+k/j7UfHq95YeVtdW2UBmt09KMgH&#xA;iJZFhZ2rtustd/DsM6/2NqeqGOW0fq+X6/x0dL2vjFRl1unlpK8XJcmMn99N+1K3Xite3ff5nsM9&#xA;l/AHc6Vv4+YJAEoH7uP9iJOtTXv/ALZ3wbV5fer6Y8vXM1zoGmXMzc5p7SCSRyKVZ41Ymh8Sc861&#xA;UBHLIDkJH72sphlCHYqxj8x7iaHypc+maeq0cbn/ACSwr99KZbhHqdX2xMjTmutPJZtW1Ga2t7aS&#xA;djDahlgUbcQ1Kio69O+ZYiHkZaiZiIk7R5NW95dW8kdwJX5oweIcjuVNQT7VxIWGSUSDbMvNWqTX&#xA;+q8kYoFii9NAdiGQOenerH55532zmlLUGN/Ts+09kQH5eMq+rdKrTUr60uFuIJmWVAwVj8VOSlTs&#xA;ajoc1mLUTxy4ond2OTBCceEjZk35c3Ex1K8iJJSSL1HP+UrAD/iZzd+z+SXiSHQi/t/a6rtqA8OJ&#xA;7iz/ADrHnHYqlnmi8ubLy1q15a1+s21lcTQU3POOJmX8RmRo8YnmhGXIyiD80h8efXb+hPry0HU8&#xA;2/rnrPhx7g2NXIBEMnRpU5PTpUMy1+njhh1HcrNPO/mu81XyT5QsJW2gt5Wm/wApoZWtoifcRxfj&#xA;mn7O0UcWpzTHWQ+0cR+0/YgBiWmaYl9M8T3kFkUjeQPcsyKeC8qAhW3bovic2mbNwC+Ey36JZL+T&#xA;15c2v5iaR6Ff37vDKo7xvG3Kvypy+jNd27jEtJO+m/2olyfVeeZNbsVdirsVdirsVdirsVdirsVe&#xA;cedraWLXp5WBSOdEYTf5IQIVX3JU/wC1XON7ZxmOcnpIDf4VX4+56jsuYOEDqL2+38frSD+UBd+s&#xA;UR3AB35vX/P6KDNV+AP0n8fY7H8E/oH4+1Fm0tJ/KXmN53NEgQmTerMsgkoCfFkUfTvnYexe2r4h&#xA;ueXzu3TdsSNRDzL4+YJAEoH7uP8AYiTrU17/AO2d89j2ry+90jo4/VIRAzo7hQFH7yeQnZVG/c/R&#xA;88Sa3P7AFfT2lQS2+l2cEoCyxQRpIo6BlQAgde+eb5pCU5EciS1orK0OxVj3n+2nuPKd8kKlmUJI&#xA;ygVJVHVm+4CuWYj6nXdqwMtPID8bvHdNubS2u1mu7YXkKqwNuWKBiylQSwBPwk12zMIt47DOMZXI&#xA;cQ7lAkSS1J4qx6neg+jwwtfMs28420NvrkkcTcl9OL6KIF/UK55v23EDUy86+59x7I/xeI7tkuub&#xA;m2ltoI0t/Tnj5etPyqZS1KEigpSmYGTJGUYgRqQ5nvc2EJCRJNg8h3Mr/LeCX1b2fjSHiqBvFqk0&#xA;HyGb72dgbnLpsHT9tzFRj1Z1nUPPuxVCaxbTXWkX1tAQJp7eWKInpydCq1r7nLcExHJGR5AhL4/j&#xA;u9RsdM1LTTWFJ5oY72B0XlyhMhCksOSlWHamermEJzjPnQNH302KepWscFvp7JdQ3Bmt/UdISxaI&#xA;mV/gk5KtH9hXJYpkmWxFS69dhuPJWW+ctL0u28j+Srhbiss1rc8wiBiazeqaklfsvKy5qtBmnLU5&#xA;xWwlH7q/RaAwlxNMGmCExxBEdwpoABxXkd6V45uRQ270s5/Iyxu7j8xbC4hjLQ2aTy3LgbIrwPEt&#xA;T7u4GaX2jyRjpJAneVV8wf0IlyfT+ebtbsVdirsVdirsVdirsVdirsVSrzDoUWr2ipUJcQktBIwq&#xA;ASKEMPA/5+GYGv0I1EK5SHJzNHqzhlf8J5vONS0u806Z4bxGXf4pt6Snr8DHqP8AM+GcdqNNPDIi&#xA;Y+Pf7vx7+56fBnjlAMfl3e9tl1E+VPMBtkU/6PFyUqCqKJQWO/hHzb8c6n2L/wAb9X0/p3ofF1na&#xA;9VHvt5nDC85EcSPIrNQKgJknfwUCp/p889jlLh3O33B0j1f8vPyyvLS9t9d1vik0S8rPT1B/dE1o&#xA;ZK9Ctahd99ya5y/ana8ZROLFyPOXf7mBL1DObYuxV2KuIBFDuD1GKvJ/N35eXlg8t7pim4smapgQ&#xA;EyRA79BXko8f9vMvHlB2LyWv7IljuUN493UfsYWEcuECkuTQKBvXpSmXOlrozbzaLoa1IblOEhji&#xA;NAKD+7UGlP8AKBzzbtoH8zK/KvdT7l2R/i0e/r71PRPLmo6tLSFfTgG73Dg8B7DxPtlGi7Pyag7b&#xA;R7+jfqtbDCN9z3PTtJ0yDTLCKzgqVjHxOerMdyxzt9Lpo4cYhHo8pqM5yzMijMyGh2KuxV4/+af5&#xA;P3WpXlz5h0HjLcSD1b3S35D1XRac4ipHxkfs9z33pnV9jduxxxGLLsBsJd3v8vNmJPDLlTBM1vc2&#xA;f1aVDSRCJFkU/wCq7H8RnawPELjKx8K+xkyzzvb6nF5M8lfWYuNt9UufRk48a87gstfnF6bD55q+&#xA;zpQOoz8J34o/7n9doCU+T9H806zdSaTokcjw33GO++0IOCnkDM4Gyr18fDfMrXZ8GGIyZSLjy7/g&#xA;kvo/8uPy9s/JmmTQrL9Zvrtg93c0oCFrwRR/KtT8ySfbPPu1u1JauYNVGPIfpaybZdmqQ7FXYq7F&#xA;XYq7FXYq7FXYq7FUDq+rwaXBFLLFLO08qwRRQKGdnYEgAEr/ACnvl2DAchIBAoXulAjzdo0mpPpT&#xA;CQXavBFJCyCga5QyKp3/AGVHxeGXS0E/D49uEg/ZskWN0EvnDyxboI4baQW85jEjRQKIxJOvJUko&#xA;R8TIK+HvhxdkyhfCIx5nu5cyynOUvqNqejecPKKrJBp1qbRY45J2ijhSMenEGctRDTejU75fqNBn&#xA;2Mzxbgc73LGk40PzLp2teobMScUVXV3XirxuWVXQgmoJQ9d/EZianSTw1xV+P7UUmuYyHYq7FXYq&#xA;g7rVba2uEt3V2dgrMUXkEVm4Bn8AWzGy6mMJCJu/u3rdvx6eUo8Qr8bpa+seXbiSG5uLcGdJY0gk&#xA;liUupkLcHVjWg+Bt69spj2pjrqLIHzuj7tiyn2WTKyIkgE33V+ndu41vQJJI5Zbf1p1jEkZMSs6h&#xA;mK8QT0bkOmVZNbpyQTG5VfLcftb4aXMAQDQuueyNtddsLm7W0jLC4ZGcoy0K8HKMrf5VQcycWtxz&#xA;nwD6qv5Gvm0ZNLOMeI8r/amGZbjOxV2KuxVjTef9DMdy1ulxdSWt+dLeCCMNI1wAT8ALCq/Cwr7Z&#xA;sR2ZlsXUeKHHZPRNJNqH5jfl/qdohvrNtQ0+nqepNarLEp5+mlVepUs/wj4evWmZeLsrVY5emXDL&#xA;ylR5X08k0Va886eSdQWLT7nTHvo/U9OxtZLWOVJJo+KmOFXPEPGH/a47VpUZDH2fqcdzjLh23PER&#xA;QPU+R+PmtIiz/M7ygyJDCZYh6QkghMXpkp6qw8VUkbhnHw+HyyGTsfUczR3338rRScaF5p03WpZU&#xA;tEmVUUSxSyxlEmiZmQSRNU8l5IfA+2+Ymp0U8IBlXwPI9xWk4zEQ7FXYq7FXYq7FXYq7FXYq7FUF&#xA;quj2WqJbx3i84reZbgRkKVZkBADhg1V+LLsOeWMkx5kUlJn8gaR+kf0lFcXUF76rzCRJFKhnZSAI&#xA;3R4wEVOK0Xp1qaHMsdp5ODgIiY1XL9IN78+a24eQtNWJYI7y8jt/3BmhR4wsr26emjykxlmNAKit&#xA;KgGm2P8AKc7sxiTv37Xvtv8AtW1CH8tdIgWQQ3t5G0iPCzqYAfTkVldaCGm4b7VOXTfbJy7WyGrj&#xA;HbfrzH+d9nLyTaa6H5YstHnnmgmmmkuFRHMpj6RlitfTSPk3x7s9WPjmNqNZLKACAK7r6+8n5Cgi&#xA;04zEQ7FXYq7FUv1DRLW+nWaV3VgEVgvCjCN+a15KxFDXoR1zEz6OOWXESend0NjmPucnDqpYxQ/T&#xA;1Fd6C/wdpPErymCkHZXC/GV48/hAPKn0e2Y38kYuXq+fXv8Af9nk3/ylk8vx0Xnypp9ZCJJlaR3k&#xA;LApsXIagBUigK1Ap3OS/kvHvvLck9OvwR/KE9thsK/G6pa+W7O3vBeCaeS59QyGR3BB5BgylQAlD&#xA;zJ6fLJ4uzoQnx3Iyu+fv6curDJrZSjwVERquX4PRNsz3DdirsVdirD7b8sNHtADZX9/bzepFO04l&#xA;jlYzwmUiWk0cqAt9YbkFUL7DNtPtjJL6owIoiqI2NbbEH+Eefmm1unflP5TsYZIgktxygkt45Ln0&#xA;pZIvWZmaSJ2jqslXPxYcvbeeZvYbg7WLrod+SbXH8sdI/SNvqK396t7aNztJw1uWjJoPtNCTIOI4&#xA;qsnIKCQoGD+WMnAYcMeGXMerf/Zbd+1X1tFqR/Kby46oZ7m8uJ0eORbmaSNpvUjlMpcv6e7OWIev&#xA;UHx3yX8t5hyEQN9gDXKu/p0Taa+XfJWl6DeSXVpLNIzwLaokghCpDG7OiAxxxs3HlxBcsaADMXVd&#xA;oTzxEZAc768/iT9lIJZBmCh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpPfa5Pb3bxJbeokY&#xA;Nakgk/BRuhAX4/fAqifMs3qU+psqjkDyJHQqBUhdup23xVevmOcoj/UW4uRxo5Pw1YV+z1+HYd8V&#xA;d+nbr0DcegAglCGP4q8TCXoTx+1y26ddvfFW7rWrz9Hy3MUBj9OT0pC3xFaD42A+EfCdt8VQljre&#xA;rtpRuGjWRo3VQSGBZQCWpStSaAYqi5fMNzEzq9i3JCAaMSNwT1Kjw+Hx9sVUm8x3TcGitCUoxYCr&#xA;VoV2BoKH4jXY4qi7jWzHKyxw+ogApIWZRuQCTRGoo7n8MVas9auLiaJWszFHIQOTN8Qry6rx/wAj&#xA;xxVNcKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrJYopU4SosiHqrA&#xA;EfccVXAAAAbAbADFW8VWxxxxoEjUIg6KoAG/sMVXYq7FWlVVUKoCqBQKNgBireKuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:64d59808-3323-422e-b144-7fcef742288a</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:64d59808-3323-422e-b144-7fcef742288a</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:edbd67a1-a042-1840-8ab5-b12a019c23a7</stRef:instanceID>
            <stRef:documentID>xmp.did:4a9b7d7b-57df-402f-9db5-9d1c6a1cbc43</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:64d59808-3323-422e-b144-7fcef742288a</stEvt:instanceID>
                  <stEvt:when>2016-12-21T15:24:25+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CooperHewitt-Light</stFnt:fontName>
                  <stFnt:fontFamily>Cooper Hewitt</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>1.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>CooperHewitt-Light.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CooperHewitt-Medium</stFnt:fontName>
                  <stFnt:fontFamily>Cooper Hewitt</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>1.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>CooperHewitt-Medium.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=248 B=247 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>248</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=37 B=64</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>64</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 4</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=191 G=193 B=191</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>191</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=62 G=191 B=180</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>62</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>180</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=71 B=116</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>116</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 5</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=250 B=251 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>250</xmpG:green>
                           <xmpG:blue>251</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800.369 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800.369 li
800.379 800.369 li
800.379 0 li
cp
clp
800.203 800.203 mo
.202921 800.203 li
.202921 .202905 li
800.203 .202905 li
800.203 800.203 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0153506 .005066 .00347906 0 cmyk
f
800.128 768.219 mo
800.096 512.342 800.064 256.311 800.032 .203005 cv
800.203 .373781 li
533.587 .384542 266.888 .395307 .203 .406071 cv
.4061 .203005 li
.3944 266.926 .3828 533.612 .3711 800.203 cv
.203 800.035 li
256.839 800.066 513.206 800.098 769.435 800.13 cv
809.829 800.136 811.084 800.275 769.435 800.281 cv
512.998 800.311 256.517 800.34 .203 800.369 cv
.0366 800.369 li
.0366 800.203 li
.0244 533.397 .0122 266.604 0 .203005 cv
0 0 li
.203 7e-06 li
267.125 .009041 533.909 .018071 800.203 .027084 cv
800.379 .02709 li
800.379 .203005 li
800.348 256.564 800.317 512.445 800.286 768.219 cv
800.278 812.08 800.135 809.631 800.128 768.219 cv
cp
.0153201 .0126345 .0151369 0 cmyk
f
283.595 768.624 mo
283.595 769.327 283.704 769.925 283.922 770.419 cv
284.141 770.913 284.44 771.284 284.82 771.534 cv
285.2 771.784 285.615 771.911 286.064 771.911 cv
286.52 771.911 286.936 771.792 287.314 771.554 cv
287.69 771.318 287.991 770.952 288.215 770.462 cv
288.44 769.972 288.552 769.357 288.552 768.624 cv
288.552 767.933 288.44 767.339 288.215 766.841 cv
287.991 766.345 287.687 765.966 287.304 765.702 cv
286.92 765.441 286.501 765.31 286.045 765.31 cv
285.571 765.31 285.147 765.445 284.772 765.712 cv
284.399 765.982 284.109 766.366 283.904 766.87 cv
283.697 767.374 283.595 767.958 283.595 768.624 cv
cp
288.695 772.433 mo
288.695 772.175 li
288.347 772.573 288.003 772.9 287.665 773.148 cv
287.326 773.4 286.958 773.589 286.563 773.718 cv
286.167 773.851 285.735 773.913 285.267 773.913 cv
284.646 773.913 284.071 773.782 283.542 773.521 cv
283.014 773.257 282.556 772.882 282.17 772.394 cv
281.783 771.907 281.491 771.335 281.292 770.675 cv
281.092 770.017 280.992 769.304 280.992 768.538 cv
280.992 766.917 281.388 765.654 282.18 764.747 cv
282.971 763.843 284.013 763.39 285.305 763.39 cv
286.051 763.39 286.682 763.519 287.194 763.775 cv
287.707 764.031 288.207 764.427 288.695 764.956 cv
288.695 761.13 li
288.695 760.597 288.801 760.197 289.014 759.923 cv
289.225 759.652 289.527 759.515 289.92 759.515 cv
290.313 759.515 290.615 759.64 290.827 759.89 cv
291.04 760.142 291.146 760.509 291.146 760.997 cv
291.146 772.433 li
291.146 772.927 291.032 773.296 290.804 773.544 cv
290.576 773.79 290.282 773.913 289.92 773.913 cv
289.566 773.913 289.273 773.786 289.042 773.531 cv
288.811 773.273 288.695 772.907 288.695 772.433 cv
cp
.253239 .186069 .211704 0 cmyk
f
295.058 767.808 mo
299.759 767.808 li
299.697 766.921 299.456 766.257 299.042 765.818 cv
298.627 765.376 298.082 765.157 297.404 765.157 cv
296.758 765.157 296.227 765.38 295.813 765.825 cv
295.398 766.273 295.147 766.933 295.058 767.808 cv
cp
300.129 769.281 mo
295.058 769.281 li
295.064 769.868 295.182 770.388 295.414 770.837 cv
295.645 771.286 295.952 771.626 296.335 771.853 cv
296.718 772.081 297.141 772.195 297.603 772.195 cv
297.913 772.195 298.196 772.159 298.453 772.087 cv
298.71 772.013 298.958 771.9 299.199 771.743 cv
299.44 771.589 299.661 771.423 299.864 771.245 cv
300.066 771.068 300.328 770.825 300.652 770.523 cv
300.785 770.409 300.975 770.351 301.223 770.351 cv
301.488 770.351 301.703 770.425 301.867 770.572 cv
302.032 770.718 302.115 770.921 302.115 771.189 cv
302.115 771.423 302.022 771.695 301.84 772.009 cv
301.655 772.323 301.378 772.624 301.008 772.911 cv
300.637 773.2 300.173 773.439 299.611 773.628 cv
299.052 773.82 298.407 773.913 297.679 773.913 cv
296.014 773.913 294.719 773.439 293.794 772.489 cv
292.87 771.54 292.408 770.251 292.408 768.624 cv
292.408 767.857 292.522 767.146 292.75 766.491 cv
292.978 765.835 293.311 765.275 293.747 764.806 cv
294.184 764.337 294.722 763.978 295.362 763.728 cv
296.001 763.478 296.711 763.353 297.489 763.353 cv
298.502 763.353 299.371 763.566 300.095 763.993 cv
300.821 764.421 301.365 764.974 301.725 765.65 cv
302.085 766.327 302.267 767.019 302.267 767.72 cv
302.267 768.374 302.08 768.796 301.707 768.989 cv
301.333 769.183 300.807 769.281 300.129 769.281 cv
cp
f
311.944 770.523 mo
311.944 771.238 311.771 771.851 311.421 772.361 cv
311.074 772.87 310.559 773.257 309.878 773.521 cv
309.198 773.782 308.37 773.913 307.395 773.913 cv
306.464 773.913 305.666 773.771 305.001 773.486 cv
304.336 773.202 303.845 772.845 303.529 772.419 cv
303.212 771.989 303.054 771.562 303.054 771.13 cv
303.054 770.845 303.155 770.603 303.358 770.4 cv
303.561 770.198 303.817 770.097 304.128 770.097 cv
304.399 770.097 304.608 770.163 304.754 770.296 cv
304.9 770.429 305.04 770.616 305.171 770.855 cv
305.438 771.32 305.756 771.661 306.127 771.892 cv
306.497 772.118 307.001 772.234 307.642 772.234 cv
308.161 772.234 308.587 772.116 308.919 771.886 cv
309.251 771.654 309.418 771.39 309.418 771.093 cv
309.418 770.636 309.246 770.306 308.9 770.097 cv
308.555 769.888 307.986 769.687 307.195 769.497 cv
306.302 769.277 305.576 769.042 305.015 768.798 cv
304.455 768.556 304.007 768.234 303.671 767.835 cv
303.336 767.437 303.168 766.945 303.168 766.363 cv
303.168 765.845 303.323 765.353 303.633 764.89 cv
303.944 764.429 304.401 764.06 305.007 763.784 cv
305.61 763.509 306.34 763.37 307.195 763.37 cv
307.866 763.37 308.47 763.441 309.004 763.581 cv
309.54 763.718 309.987 763.907 310.344 764.142 cv
310.702 764.374 310.974 764.634 311.16 764.919 cv
311.347 765.204 311.44 765.482 311.44 765.755 cv
311.44 766.052 311.34 766.296 311.142 766.488 cv
310.942 766.675 310.659 766.773 310.291 766.773 cv
310.025 766.773 309.799 766.697 309.612 766.542 cv
309.426 766.392 309.212 766.163 308.971 765.861 cv
308.775 765.607 308.545 765.404 308.278 765.251 cv
308.012 765.099 307.651 765.025 307.195 765.025 cv
306.726 765.025 306.337 765.122 306.027 765.323 cv
305.717 765.523 305.561 765.771 305.561 766.068 cv
305.561 766.341 305.675 766.564 305.903 766.738 cv
306.131 766.913 306.438 767.058 306.825 767.171 cv
307.211 767.284 307.742 767.423 308.421 767.587 cv
309.224 767.784 309.881 768.019 310.391 768.29 cv
310.9 768.562 311.287 768.884 311.551 769.255 cv
311.813 769.626 311.944 770.048 311.944 770.523 cv
cp
f
315.876 764.843 mo
315.876 772.337 li
315.876 772.857 315.752 773.249 315.505 773.515 cv
315.257 773.781 314.945 773.913 314.565 773.913 cv
314.184 773.913 313.876 773.779 313.638 773.505 cv
313.4 773.234 313.282 772.843 313.282 772.337 cv
313.282 764.919 li
313.282 764.407 313.4 764.021 313.638 763.761 cv
313.876 763.501 314.184 763.37 314.565 763.37 cv
314.945 763.37 315.257 763.501 315.505 763.761 cv
315.752 764.021 315.876 764.382 315.876 764.843 cv
cp
314.593 762.165 mo
314.232 762.165 313.923 762.054 313.667 761.833 cv
313.411 761.613 313.282 761.298 313.282 760.892 cv
313.282 760.525 313.414 760.224 313.676 759.986 cv
313.939 759.747 314.245 759.628 314.593 759.628 cv
314.929 759.628 315.226 759.736 315.485 759.952 cv
315.745 760.167 315.876 760.48 315.876 760.892 cv
315.876 761.292 315.748 761.603 315.495 761.827 cv
315.242 762.052 314.941 762.165 314.593 762.165 cv
cp
f
319.721 768.558 mo
319.721 769.609 319.95 770.404 320.409 770.941 cv
320.868 771.48 321.462 771.749 322.19 771.749 cv
322.621 771.749 323.027 771.632 323.41 771.402 cv
323.794 771.171 324.105 770.822 324.347 770.357 cv
324.586 769.892 324.708 769.327 324.708 768.661 cv
324.708 767.605 324.475 766.781 324.009 766.193 cv
323.544 765.605 322.931 765.31 322.171 765.31 cv
321.43 765.31 320.836 765.591 320.391 766.156 cv
319.944 766.718 319.721 767.519 319.721 768.558 cv
cp
327.234 765.271 mo
327.234 772.802 li
327.234 773.663 327.142 774.406 326.958 775.027 cv
326.775 775.646 326.48 776.159 326.075 776.564 cv
325.669 776.968 325.139 777.271 324.484 777.466 cv
323.829 777.663 323.014 777.761 322.038 777.761 cv
321.146 777.761 320.348 777.636 319.645 777.386 cv
318.942 777.134 318.401 776.812 318.021 776.417 cv
317.641 776.021 317.45 775.614 317.45 775.197 cv
317.45 774.88 317.558 774.62 317.774 774.423 cv
317.989 774.222 318.249 774.122 318.552 774.122 cv
318.932 774.122 319.265 774.29 319.55 774.626 cv
319.689 774.796 319.833 774.97 319.982 775.144 cv
320.13 775.32 320.296 775.468 320.476 775.591 cv
320.656 775.714 320.873 775.806 321.126 775.866 cv
321.379 775.925 321.671 775.956 322 775.956 cv
322.671 775.956 323.192 775.863 323.563 775.675 cv
323.934 775.489 324.193 775.228 324.342 774.892 cv
324.491 774.558 324.578 774.198 324.603 773.814 cv
324.628 773.431 324.647 772.816 324.66 771.966 cv
324.26 772.525 323.801 772.948 323.277 773.239 cv
322.755 773.531 322.133 773.677 321.412 773.677 cv
320.544 773.677 319.786 773.454 319.136 773.011 cv
318.488 772.568 317.989 771.948 317.641 771.15 cv
317.293 770.351 317.119 769.431 317.119 768.386 cv
317.119 767.609 317.225 766.904 317.436 766.279 cv
317.649 765.65 317.952 765.122 318.344 764.691 cv
318.736 764.261 319.189 763.937 319.702 763.718 cv
320.214 763.499 320.778 763.39 321.393 763.39 cv
322.126 763.39 322.763 763.532 323.302 763.812 cv
323.839 764.095 324.34 764.536 324.802 765.138 cv
324.802 764.786 li
324.802 764.337 324.913 763.989 325.134 763.741 cv
325.357 763.495 325.642 763.37 325.99 763.37 cv
326.49 763.37 326.822 763.534 326.986 763.861 cv
327.151 764.187 327.234 764.657 327.234 765.271 cv
cp
f
331.355 764.806 mo
331.355 765.118 li
331.81 764.517 332.309 764.075 332.851 763.794 cv
333.392 763.513 334.014 763.37 334.717 763.37 cv
335.401 763.37 336.012 763.521 336.55 763.818 cv
337.088 764.116 337.491 764.536 337.756 765.079 cv
337.928 765.398 338.038 765.739 338.088 766.107 cv
338.139 766.474 338.165 766.943 338.165 767.513 cv
338.165 772.337 li
338.165 772.857 338.046 773.249 337.809 773.515 cv
337.571 773.781 337.263 773.913 336.883 773.913 cv
336.496 773.913 336.183 773.779 335.942 773.505 cv
335.701 773.234 335.582 772.843 335.582 772.337 cv
335.582 768.015 li
335.582 767.161 335.462 766.507 335.225 766.054 cv
334.987 765.603 334.515 765.374 333.805 765.374 cv
333.343 765.374 332.922 765.513 332.542 765.788 cv
332.162 766.064 331.883 766.443 331.706 766.923 cv
331.58 767.31 331.516 768.031 331.516 769.089 cv
331.516 772.337 li
331.516 772.863 331.394 773.257 331.151 773.521 cv
330.907 773.782 330.592 773.913 330.206 773.913 cv
329.832 773.913 329.525 773.779 329.284 773.505 cv
329.044 773.234 328.923 772.843 328.923 772.337 cv
328.923 764.843 li
328.923 764.349 329.031 763.98 329.246 763.736 cv
329.461 763.493 329.756 763.37 330.129 763.37 cv
330.357 763.37 330.564 763.425 330.748 763.532 cv
330.93 763.642 331.078 763.802 331.189 764.017 cv
331.3 764.232 331.355 764.495 331.355 764.806 cv
cp
f
342.058 767.808 mo
346.759 767.808 li
346.696 766.921 346.457 766.257 346.043 765.818 cv
345.628 765.376 345.082 765.157 344.404 765.157 cv
343.758 765.157 343.227 765.38 342.813 765.825 cv
342.397 766.273 342.147 766.933 342.058 767.808 cv
cp
347.129 769.281 mo
342.058 769.281 li
342.065 769.868 342.183 770.388 342.415 770.837 cv
342.646 771.286 342.952 771.626 343.336 771.853 cv
343.718 772.081 344.141 772.195 344.603 772.195 cv
344.914 772.195 345.197 772.159 345.454 772.087 cv
345.71 772.013 345.958 771.9 346.2 771.743 cv
346.44 771.589 346.661 771.423 346.865 771.245 cv
347.066 771.068 347.329 770.825 347.652 770.523 cv
347.785 770.409 347.975 770.351 348.222 770.351 cv
348.488 770.351 348.704 770.425 348.868 770.572 cv
349.033 770.718 349.115 770.921 349.115 771.189 cv
349.115 771.423 349.023 771.695 348.839 772.009 cv
348.655 772.323 348.378 772.624 348.008 772.911 cv
347.637 773.2 347.173 773.439 346.612 773.628 cv
346.052 773.82 345.407 773.913 344.679 773.913 cv
343.014 773.913 341.719 773.439 340.794 772.489 cv
339.871 771.54 339.408 770.251 339.408 768.624 cv
339.408 767.857 339.522 767.146 339.75 766.491 cv
339.978 765.835 340.311 765.275 340.748 764.806 cv
341.184 764.337 341.723 763.978 342.362 763.728 cv
343.001 763.478 343.711 763.353 344.49 763.353 cv
345.503 763.353 346.371 763.566 347.096 763.993 cv
347.821 764.421 348.364 764.974 348.726 765.65 cv
349.086 766.327 349.267 767.019 349.267 767.72 cv
349.267 768.374 349.081 768.796 348.707 768.989 cv
348.333 769.183 347.808 769.281 347.129 769.281 cv
cp
f
352.6 768.624 mo
352.6 769.327 352.708 769.925 352.927 770.419 cv
353.145 770.913 353.444 771.284 353.825 771.534 cv
354.205 771.784 354.619 771.911 355.068 771.911 cv
355.525 771.911 355.941 771.792 356.317 771.554 cv
356.694 771.318 356.996 770.952 357.22 770.462 cv
357.445 769.972 357.557 769.357 357.557 768.624 cv
357.557 767.933 357.445 767.339 357.22 766.841 cv
356.996 766.345 356.691 765.966 356.308 765.702 cv
355.924 765.441 355.505 765.31 355.049 765.31 cv
354.575 765.31 354.15 765.445 353.777 765.712 cv
353.404 765.982 353.114 766.366 352.908 766.87 cv
352.702 767.374 352.6 767.958 352.6 768.624 cv
cp
357.699 772.433 mo
357.699 772.175 li
357.351 772.573 357.008 772.9 356.669 773.148 cv
356.33 773.4 355.963 773.589 355.567 773.718 cv
355.172 773.851 354.74 773.913 354.272 773.913 cv
353.65 773.913 353.076 773.782 352.547 773.521 cv
352.019 773.257 351.561 772.882 351.175 772.394 cv
350.788 771.907 350.496 771.335 350.296 770.675 cv
350.097 770.017 349.997 769.304 349.997 768.538 cv
349.997 766.917 350.393 765.654 351.184 764.747 cv
351.976 763.843 353.018 763.39 354.309 763.39 cv
355.056 763.39 355.686 763.519 356.199 763.775 cv
356.712 764.031 357.212 764.427 357.699 764.956 cv
357.699 761.13 li
357.699 760.597 357.806 760.197 358.018 759.923 cv
358.229 759.652 358.533 759.515 358.925 759.515 cv
359.317 759.515 359.62 759.64 359.832 759.89 cv
360.044 760.142 360.15 760.509 360.15 760.997 cv
360.15 772.433 li
360.15 772.927 360.037 773.296 359.809 773.544 cv
359.581 773.79 359.287 773.913 358.925 773.913 cv
358.571 773.913 358.278 773.786 358.046 773.531 cv
357.815 773.273 357.699 772.907 357.699 772.433 cv
cp
f
368.421 768.7 mo
368.421 769.732 368.657 770.525 369.128 771.077 cv
369.6 771.632 370.219 771.911 370.985 771.911 cv
371.637 771.911 372.2 771.628 372.671 771.06 cv
373.143 770.493 373.378 769.681 373.378 768.624 cv
373.378 767.941 373.281 767.351 373.085 766.857 cv
372.888 766.363 372.61 765.982 372.249 765.712 cv
371.888 765.445 371.466 765.31 370.985 765.31 cv
370.492 765.31 370.051 765.445 369.665 765.712 cv
369.279 765.982 368.975 766.37 368.753 766.88 cv
368.532 767.39 368.421 767.997 368.421 768.7 cv
cp
368.297 760.997 mo
368.297 764.956 li
368.785 764.45 369.282 764.062 369.789 763.794 cv
370.295 763.525 370.922 763.39 371.669 763.39 cv
372.531 763.39 373.285 763.595 373.935 764.001 cv
374.583 764.411 375.086 765.003 375.445 765.779 cv
375.802 766.554 375.982 767.474 375.982 768.538 cv
375.982 769.323 375.882 770.042 375.683 770.698 cv
375.483 771.355 375.193 771.923 374.814 772.404 cv
374.433 772.884 373.973 773.257 373.432 773.521 cv
372.89 773.782 372.293 773.913 371.641 773.913 cv
371.242 773.913 370.866 773.866 370.516 773.771 cv
370.164 773.677 369.864 773.552 369.618 773.396 cv
369.372 773.241 369.161 773.081 368.986 772.917 cv
368.812 772.753 368.582 772.505 368.297 772.175 cv
368.297 772.433 li
368.297 772.919 368.18 773.288 367.946 773.54 cv
367.712 773.79 367.415 773.913 367.053 773.913 cv
366.686 773.913 366.393 773.79 366.175 773.54 cv
365.956 773.288 365.847 772.919 365.847 772.433 cv
365.847 761.111 li
365.847 760.585 365.953 760.187 366.165 759.919 cv
366.377 759.65 366.674 759.515 367.053 759.515 cv
367.453 759.515 367.759 759.644 367.975 759.9 cv
368.19 760.157 368.297 760.521 368.297 760.997 cv
cp
f
379.343 774.238 mo
379.581 773.657 li
376.389 765.622 li
376.193 765.161 376.094 764.823 376.094 764.614 cv
376.094 764.394 376.152 764.189 376.266 763.999 cv
376.38 763.808 376.536 763.656 376.735 763.542 cv
376.935 763.427 377.143 763.37 377.358 763.37 cv
377.731 763.37 378.013 763.489 378.204 763.728 cv
378.394 763.964 378.561 764.304 378.707 764.747 cv
380.901 771.13 li
382.981 765.195 li
383.145 764.714 383.294 764.337 383.427 764.064 cv
383.56 763.792 383.701 763.609 383.85 763.515 cv
383.998 763.419 384.209 763.37 384.482 763.37 cv
384.679 763.37 384.866 763.423 385.047 763.529 cv
385.227 763.632 385.366 763.773 385.464 763.95 cv
385.562 764.128 385.612 764.314 385.612 764.511 cv
385.586 764.63 385.546 764.802 385.488 765.025 cv
385.431 765.245 385.362 765.472 385.28 765.698 cv
381.898 774.55 li
381.607 775.329 381.322 775.939 381.043 776.382 cv
380.764 776.825 380.396 777.167 379.936 777.404 cv
379.477 777.642 378.858 777.761 378.08 777.761 cv
377.32 777.761 376.75 777.679 376.371 777.515 cv
375.99 777.349 375.801 777.048 375.801 776.611 cv
375.801 776.314 375.89 776.083 376.072 775.923 cv
376.251 775.761 376.52 775.679 376.873 775.679 cv
377.013 775.679 377.149 775.698 377.282 775.738 cv
377.447 775.775 377.589 775.794 377.709 775.794 cv
378.006 775.794 378.241 775.751 378.413 775.661 cv
378.583 775.573 378.736 775.419 378.873 775.2 cv
379.009 774.984 379.166 774.661 379.343 774.238 cv
cp
f
416.906 763.595 mo
417.525 763.595 li
417.525 762.818 li
417.525 762.003 417.625 761.361 417.832 760.88 cv
418.035 760.402 418.386 760.054 418.878 759.835 cv
419.369 759.618 420.04 759.509 420.894 759.509 cv
422.414 759.509 423.168 759.876 423.168 760.622 cv
423.168 760.861 423.087 761.068 422.927 761.238 cv
422.773 761.407 422.583 761.493 422.369 761.493 cv
422.269 761.493 422.091 761.476 421.841 761.435 cv
421.605 761.402 421.39 761.378 421.218 761.378 cv
420.751 761.378 420.453 761.519 420.314 761.794 cv
420.187 762.07 420.119 762.462 420.119 762.978 cv
420.119 763.595 li
420.751 763.595 li
421.742 763.595 422.232 763.892 422.232 764.491 cv
422.232 764.909 422.105 765.181 421.839 765.296 cv
421.578 765.409 421.216 765.466 420.751 765.466 cv
420.119 765.466 li
420.119 772.337 li
420.119 772.849 419.998 773.238 419.75 773.505 cv
419.507 773.779 419.195 773.911 418.806 773.911 cv
418.439 773.911 418.136 773.779 417.888 773.505 cv
417.644 773.238 417.525 772.849 417.525 772.337 cv
417.525 765.466 li
416.81 765.466 li
416.421 765.466 416.128 765.382 415.918 765.204 cv
415.708 765.034 415.603 764.806 415.603 764.527 cv
415.603 763.904 416.037 763.595 416.906 763.595 cv
f
425.396 770.169 mo
425.396 772.337 li
425.396 772.861 425.263 773.257 425.021 773.517 cv
424.775 773.782 424.462 773.911 424.083 773.911 cv
423.703 773.911 423.396 773.781 423.158 773.511 cv
422.921 773.247 422.796 772.855 422.796 772.337 cv
422.796 765.114 li
422.796 763.948 423.216 763.366 424.058 763.366 cv
424.492 763.366 424.8 763.501 424.992 763.775 cv
425.181 764.048 425.287 764.448 425.308 764.982 cv
425.617 764.448 425.933 764.048 426.257 763.775 cv
426.589 763.501 427.019 763.366 427.566 763.366 cv
428.115 763.366 428.638 763.501 429.152 763.775 cv
429.668 764.048 429.923 764.411 429.923 764.859 cv
429.923 765.173 429.812 765.439 429.597 765.64 cv
429.376 765.849 429.142 765.952 428.89 765.952 cv
428.79 765.952 428.56 765.89 428.199 765.773 cv
427.833 765.659 427.509 765.599 427.236 765.599 cv
426.855 765.599 426.543 765.702 426.304 765.898 cv
426.062 766.103 425.873 766.394 425.74 766.784 cv
425.611 767.179 425.521 767.65 425.466 768.189 cv
425.418 768.73 425.396 769.392 425.396 770.169 cv
f
432.242 767.802 mo
436.943 767.802 li
436.88 766.917 436.646 766.253 436.23 765.816 cv
435.812 765.374 435.271 765.156 434.589 765.156 cv
433.943 765.156 433.412 765.376 432.998 765.825 cv
432.583 766.271 432.33 766.929 432.242 767.802 cv
437.316 769.277 mo
432.242 769.277 li
432.251 769.864 432.367 770.388 432.597 770.835 cv
432.832 771.282 433.136 771.622 433.521 771.853 cv
433.906 772.079 434.326 772.193 434.79 772.193 cv
435.101 772.193 435.382 772.159 435.64 772.081 cv
435.894 772.011 436.144 771.896 436.384 771.739 cv
436.626 771.587 436.845 771.421 437.048 771.239 cv
437.251 771.066 437.515 770.823 437.839 770.521 cv
437.974 770.407 438.164 770.347 438.408 770.347 cv
438.675 770.347 438.888 770.421 439.056 770.57 cv
439.222 770.716 439.3 770.919 439.3 771.187 cv
439.3 771.421 439.211 771.695 439.033 772.005 cv
438.845 772.323 438.57 772.622 438.197 772.911 cv
437.822 773.197 437.357 773.439 436.798 773.626 cv
436.24 773.816 435.593 773.911 434.867 773.911 cv
433.197 773.911 431.904 773.439 430.98 772.489 cv
430.056 771.538 429.589 770.247 429.589 768.622 cv
429.589 767.855 429.707 767.144 429.937 766.488 cv
430.162 765.829 430.494 765.271 430.935 764.8 cv
431.371 764.329 431.906 763.972 432.548 763.722 cv
433.185 763.472 433.894 763.347 434.675 763.347 cv
435.687 763.347 436.556 763.562 437.283 763.993 cv
438.005 764.415 438.556 764.97 438.912 765.648 cv
439.273 766.327 439.453 767.015 439.453 767.722 cv
439.453 768.37 439.265 768.792 438.892 768.988 cv
438.519 769.181 437.994 769.277 437.316 769.277 cv
f
443.031 767.802 mo
447.732 767.802 li
447.668 766.917 447.427 766.253 447.017 765.816 cv
446.595 765.374 446.054 765.156 445.375 765.156 cv
444.728 765.156 444.199 765.376 443.781 765.825 cv
443.369 766.271 443.115 766.929 443.031 767.802 cv
448.103 769.277 mo
443.031 769.277 li
443.037 769.864 443.156 770.388 443.384 770.835 cv
443.617 771.282 443.923 771.622 444.306 771.853 cv
444.689 772.079 445.111 772.193 445.578 772.193 cv
445.884 772.193 446.169 772.159 446.421 772.081 cv
446.681 772.011 446.927 771.896 447.171 771.739 cv
447.414 771.587 447.632 771.421 447.836 771.239 cv
448.035 771.066 448.3 770.823 448.625 770.521 cv
448.759 770.407 448.951 770.347 449.193 770.347 cv
449.461 770.347 449.675 770.421 449.843 770.57 cv
450.007 770.716 450.083 770.919 450.083 771.187 cv
450.083 771.421 449.996 771.695 449.81 772.005 cv
449.632 772.323 449.355 772.622 448.98 772.911 cv
448.609 773.197 448.14 773.439 447.583 773.626 cv
447.027 773.816 446.376 773.911 445.65 773.911 cv
443.982 773.911 442.691 773.439 441.763 772.489 cv
440.839 771.538 440.375 770.247 440.375 768.622 cv
440.375 767.855 440.49 767.144 440.722 766.488 cv
440.949 765.829 441.281 765.271 441.718 764.8 cv
442.154 764.329 442.691 763.972 443.332 763.722 cv
443.97 763.472 444.683 763.347 445.461 763.347 cv
446.47 763.347 447.339 763.562 448.074 763.993 cv
448.794 764.415 449.339 764.97 449.695 765.648 cv
450.054 766.327 450.24 767.015 450.24 767.722 cv
450.24 768.37 450.048 768.792 449.679 768.988 cv
449.304 769.181 448.779 769.277 448.103 769.277 cv
f
458.867 768.593 mo
458.867 767.907 458.761 767.32 458.552 766.829 cv
458.343 766.337 458.054 765.962 457.687 765.702 cv
457.32 765.439 456.904 765.306 456.455 765.306 cv
455.74 765.306 455.136 765.589 454.646 766.15 cv
454.154 766.716 453.906 767.544 453.906 768.642 cv
453.906 769.669 454.15 770.476 454.642 771.048 cv
455.128 771.622 455.728 771.907 456.455 771.907 cv
456.882 771.907 457.285 771.781 457.652 771.534 cv
458.023 771.282 458.316 770.907 458.535 770.407 cv
458.755 769.906 458.867 769.3 458.867 768.593 cv
453.783 764.825 mo
453.783 765.136 li
454.269 764.534 454.777 764.093 455.308 763.812 cv
455.826 763.527 456.425 763.384 457.089 763.384 cv
457.884 763.384 458.625 763.593 459.296 764.001 cv
459.968 764.415 460.496 765.017 460.886 765.808 cv
461.275 766.603 461.472 767.538 461.472 768.622 cv
461.472 769.417 461.359 770.154 461.136 770.823 cv
460.912 771.491 460.599 772.05 460.207 772.503 cv
459.814 772.952 459.351 773.304 458.818 773.548 cv
458.275 773.79 457.707 773.911 457.089 773.911 cv
456.351 773.911 455.726 773.763 455.224 773.464 cv
454.722 773.173 454.242 772.732 453.783 772.159 cv
453.783 776.052 li
453.783 777.187 453.367 777.761 452.539 777.761 cv
452.048 777.761 451.73 777.614 451.568 777.322 cv
451.415 777.023 451.333 776.599 451.333 776.031 cv
451.333 764.837 li
451.333 764.343 451.441 763.978 451.654 763.73 cv
451.869 763.491 452.165 763.366 452.539 763.366 cv
452.908 763.366 453.205 763.491 453.435 763.739 cv
453.669 763.993 453.783 764.351 453.783 764.825 cv
f
465.367 764.837 mo
465.367 772.339 li
465.367 772.855 465.244 773.247 464.998 773.511 cv
464.748 773.781 464.437 773.911 464.056 773.911 cv
463.675 773.911 463.371 773.779 463.128 773.505 cv
462.894 773.23 462.773 772.841 462.773 772.339 cv
462.773 764.911 li
462.773 764.402 462.894 764.017 463.128 763.757 cv
463.371 763.493 463.675 763.366 464.056 763.366 cv
464.437 763.366 464.748 763.493 464.998 763.757 cv
465.244 764.017 465.367 764.38 465.367 764.837 cv
464.083 762.159 mo
463.72 762.159 463.414 762.044 463.16 761.823 cv
462.9 761.601 462.773 761.292 462.773 760.888 cv
462.773 760.519 462.904 760.218 463.169 759.978 cv
463.431 759.743 463.736 759.622 464.083 759.622 cv
464.423 759.622 464.718 759.728 464.976 759.941 cv
465.236 760.159 465.367 760.476 465.367 760.888 cv
465.367 761.286 465.24 761.599 464.99 761.823 cv
464.736 762.044 464.435 762.159 464.083 762.159 cv
f
473.726 772.728 mo
471.443 768.962 li
470.035 770.29 li
470.035 772.357 li
470.035 772.855 469.902 773.238 469.638 773.505 cv
469.38 773.779 469.072 773.911 468.732 773.911 cv
468.333 773.911 468.017 773.781 467.79 773.511 cv
467.564 773.247 467.447 772.855 467.447 772.337 cv
467.447 761.275 li
467.447 760.7 467.562 760.263 467.779 759.96 cv
468.001 759.656 468.324 759.509 468.732 759.509 cv
469.13 759.509 469.445 759.646 469.681 759.919 cv
469.915 760.191 470.035 760.593 470.035 761.122 cv
470.035 767.415 li
472.951 764.353 li
473.312 763.976 473.583 763.712 473.777 763.573 cv
473.966 763.435 474.197 763.366 474.466 763.366 cv
474.793 763.366 475.06 763.47 475.283 763.675 cv
475.494 763.88 475.603 764.14 475.603 764.448 cv
475.603 764.827 475.25 765.337 474.548 765.97 cv
473.171 767.232 li
475.83 771.415 li
476.023 771.728 476.169 771.958 476.253 772.12 cv
476.337 772.281 476.384 772.441 476.384 772.583 cv
476.384 772.995 476.269 773.318 476.043 773.558 cv
475.818 773.794 475.519 773.911 475.158 773.911 cv
474.841 773.911 474.593 773.831 474.423 773.656 cv
474.253 773.484 474.017 773.173 473.726 772.728 cv
f
479.363 773.911 mo
478.97 773.911 478.634 773.786 478.349 773.531 cv
478.064 773.282 477.919 772.925 477.919 772.466 cv
477.919 772.081 478.058 771.747 478.33 771.472 cv
478.605 771.193 478.937 771.052 479.337 771.052 cv
479.736 771.052 480.074 771.193 480.361 771.464 cv
480.64 771.739 480.783 772.077 480.783 772.466 cv
480.783 772.919 480.64 773.275 480.361 773.527 cv
480.074 773.786 479.742 773.911 479.363 773.911 cv
f
492.261 770.702 mo
492.261 771.023 492.164 771.37 491.97 771.736 cv
491.779 772.107 491.482 772.454 491.083 772.786 cv
490.689 773.118 490.193 773.388 489.589 773.589 cv
488.988 773.792 488.308 773.896 487.558 773.896 cv
485.953 773.896 484.701 773.427 483.8 772.495 cv
482.906 771.56 482.455 770.306 482.455 768.736 cv
482.455 767.667 482.66 766.73 483.074 765.911 cv
483.482 765.097 484.078 764.464 484.855 764.017 cv
485.634 763.57 486.572 763.347 487.65 763.347 cv
488.324 763.347 488.937 763.445 489.501 763.642 cv
490.062 763.837 490.535 764.093 490.927 764.402 cv
491.314 764.716 491.613 765.044 491.816 765.394 cv
492.023 765.745 492.125 766.073 492.125 766.38 cv
492.125 766.689 492.011 766.952 491.781 767.167 cv
491.546 767.382 491.265 767.491 490.943 767.491 cv
490.724 767.491 490.544 767.435 490.402 767.325 cv
490.257 767.214 490.097 767.036 489.923 766.784 cv
489.605 766.306 489.277 765.943 488.927 765.704 cv
488.583 765.462 488.146 765.343 487.613 765.343 cv
486.851 765.343 486.23 765.64 485.759 766.239 cv
485.293 766.835 485.056 767.659 485.056 768.695 cv
485.056 769.183 485.119 769.634 485.24 770.042 cv
485.357 770.448 485.531 770.798 485.759 771.085 cv
485.99 771.372 486.263 771.591 486.586 771.739 cv
486.91 771.894 487.267 771.966 487.65 771.966 cv
488.171 771.966 488.617 771.845 488.986 771.605 cv
489.363 771.364 489.689 770.997 489.972 770.503 cv
490.13 770.212 490.3 769.986 490.482 769.82 cv
490.664 769.656 490.89 769.57 491.158 769.57 cv
491.474 769.57 491.738 769.693 491.943 769.933 cv
492.154 770.173 492.261 770.431 492.261 770.702 cv
f
500.847 768.642 mo
500.847 767.583 500.613 766.761 500.15 766.173 cv
499.687 765.577 499.06 765.284 498.275 765.284 cv
497.767 765.284 497.32 765.417 496.933 765.679 cv
496.546 765.941 496.251 766.327 496.043 766.843 cv
495.833 767.357 495.728 767.956 495.728 768.642 cv
495.728 769.32 495.83 769.909 496.037 770.415 cv
496.246 770.925 496.539 771.312 496.923 771.581 cv
497.308 771.847 497.757 771.986 498.275 771.986 cv
499.06 771.986 499.687 771.689 500.15 771.093 cv
500.613 770.503 500.847 769.683 500.847 768.642 cv
503.451 768.642 mo
503.451 769.411 503.33 770.126 503.095 770.781 cv
502.849 771.433 502.503 771.993 502.046 772.458 cv
501.591 772.927 501.044 773.286 500.414 773.538 cv
499.775 773.786 499.064 773.913 498.275 773.913 cv
497.49 773.913 496.783 773.786 496.154 773.531 cv
495.531 773.282 494.984 772.917 494.529 772.448 cv
494.068 771.972 493.72 771.415 493.476 770.773 cv
493.248 770.128 493.126 769.417 493.126 768.642 cv
493.126 767.855 493.25 767.136 493.484 766.484 cv
493.726 765.829 494.074 765.271 494.523 764.81 cv
494.974 764.349 495.517 763.993 496.154 763.739 cv
496.798 763.491 497.503 763.366 498.275 763.366 cv
499.06 763.366 499.773 763.491 500.414 763.747 cv
501.052 763.999 501.597 764.363 502.058 764.827 cv
502.515 765.302 502.861 765.857 503.097 766.499 cv
503.332 767.15 503.451 767.859 503.451 768.642 cv
f
513.343 768.831 mo
513.343 772.279 li
513.343 772.825 513.222 773.23 512.974 773.505 cv
512.724 773.779 512.402 773.913 511.996 773.913 cv
511.603 773.913 511.283 773.779 511.044 773.505 cv
510.798 773.23 510.673 772.825 510.673 772.279 cv
510.673 768.148 li
510.673 767.493 510.652 766.986 510.609 766.622 cv
510.564 766.269 510.441 765.968 510.248 765.739 cv
510.05 765.505 509.738 765.388 509.316 765.388 cv
508.466 765.388 507.91 765.679 507.64 766.269 cv
507.373 766.845 507.234 767.683 507.234 768.777 cv
507.234 772.279 li
507.234 772.816 507.111 773.224 506.873 773.501 cv
506.623 773.775 506.304 773.913 505.908 773.913 cv
505.511 773.913 505.191 773.775 504.941 773.501 cv
504.689 773.224 504.564 772.816 504.564 772.279 cv
504.564 764.859 li
504.564 764.37 504.675 763.999 504.9 763.747 cv
505.128 763.491 505.425 763.366 505.789 763.366 cv
506.146 763.366 506.441 763.489 506.681 763.722 cv
506.918 763.96 507.035 764.288 507.035 764.706 cv
507.035 764.95 li
507.488 764.415 507.97 764.019 508.48 763.771 cv
508.996 763.511 509.562 763.384 510.193 763.384 cv
510.843 763.384 511.404 763.515 511.871 763.775 cv
512.339 764.034 512.724 764.429 513.031 764.95 cv
513.47 764.423 513.939 764.029 514.441 763.771 cv
514.941 763.513 515.494 763.384 516.103 763.384 cv
516.808 763.384 517.423 763.527 517.937 763.804 cv
518.447 764.081 518.83 764.484 519.083 764.999 cv
519.304 765.472 519.414 766.208 519.414 767.216 cv
519.414 772.279 li
519.414 772.825 519.292 773.23 519.046 773.505 cv
518.8 773.779 518.472 773.913 518.068 773.913 cv
517.673 773.913 517.353 773.775 517.103 773.501 cv
516.853 773.224 516.726 772.816 516.726 772.279 cv
516.726 767.917 li
516.726 767.359 516.703 766.913 516.658 766.579 cv
516.611 766.241 516.48 765.958 516.275 765.732 cv
516.062 765.505 515.744 765.388 515.322 765.388 cv
514.98 765.388 514.656 765.495 514.347 765.697 cv
514.04 765.894 513.8 766.173 513.626 766.509 cv
513.441 766.947 513.343 767.722 513.343 768.831 cv
f
392.638 768.013 mo
392.636 768.009 392.636 768.003 392.636 767.995 cv
392.636 768.003 392.636 768.009 392.638 768.013 cv
cp
f
392.769 768.843 mo
392.771 768.843 392.771 768.843 392.772 768.843 cv
392.722 768.607 392.684 768.372 392.653 768.14 cv
392.684 768.374 392.722 768.609 392.769 768.843 cv
cp
f
393.628 771.249 mo
393.622 771.239 393.617 771.228 393.61 771.216 cv
393.617 771.228 393.622 771.239 393.628 771.249 cv
cp
f
393.545 771.089 mo
393.523 771.044 393.501 770.999 393.48 770.954 cv
393.501 771.001 393.523 771.044 393.545 771.089 cv
cp
f
393.01 769.769 mo
393.137 770.169 393.29 770.558 393.467 770.927 cv
393.287 770.55 393.137 770.161 393.014 769.769 cv
393.013 769.769 393.011 769.769 393.01 769.769 cv
cp
f
402.675 758.077 mo
403.177 758.077 403.546 758.116 403.97 758.189 cv
404.091 757.425 li
404.091 757.425 402.919 757.066 401.38 757.191 cv
401.259 756.777 li
401.738 756.675 402.097 756.249 402.097 755.741 cv
402.097 755.159 401.623 754.689 401.04 754.689 cv
400.457 754.689 399.984 755.159 399.984 755.741 cv
399.984 756.249 400.343 756.675 400.82 756.777 cv
400.954 757.239 li
399.32 757.464 398.019 758.101 398.019 758.101 cv
398.25 758.806 li
399.238 758.478 400.096 758.277 400.874 758.193 cv
401.635 758.113 402.208 758.077 402.675 758.077 cv
cp
f
393.608 761.935 mo
393.614 761.927 li
393.652 761.878 393.69 761.831 393.727 761.784 cv
393.414 761.56 li
392.926 761.202 li
392.899 761.241 392.131 761.947 391.525 763.251 cv
391.5 763.21 391.469 763.169 391.435 763.132 cv
391.253 762.933 391 762.831 390.677 762.837 cv
390.673 762.837 390.668 762.837 390.662 762.837 cv
390.462 762.837 390.325 762.771 390.235 762.691 cv
390.325 762.577 390.378 762.435 390.378 762.277 cv
390.378 761.909 390.079 761.609 389.709 761.609 cv
389.34 761.609 389.04 761.909 389.04 762.277 cv
389.04 762.648 389.34 762.947 389.709 762.947 cv
389.767 762.947 389.822 762.937 389.876 762.925 cv
390.04 763.109 390.301 763.267 390.684 763.259 cv
390.88 763.257 391.024 763.308 391.121 763.415 cv
391.232 763.536 391.27 763.71 391.281 763.843 cv
391.28 763.845 391.28 763.847 391.278 763.847 cv
390.842 765.036 390.967 766.517 390.967 766.517 cv
392.024 766.56 li
392.045 766.021 392.123 765.077 392.396 764.329 cv
392.922 762.88 393.581 761.974 393.608 761.935 cv
cp
f
411.875 758.96 mo
411.507 758.96 411.207 759.259 411.207 759.63 cv
411.207 759.687 411.214 759.741 411.23 759.794 cv
411.046 759.96 410.886 760.222 410.892 760.605 cv
410.896 760.802 410.845 760.945 410.738 761.042 cv
410.654 761.116 410.546 761.157 410.443 761.183 cv
409.656 760.079 408.687 759.407 408.687 759.407 cv
407.927 760.22 li
408.501 760.741 409.087 761.396 409.656 762.21 cv
410.05 762.775 410.455 763.501 410.793 764.226 cv
411.816 763.739 li
411.816 763.739 411.349 762.583 410.691 761.548 cv
410.804 761.507 410.919 761.445 411.021 761.355 cv
411.222 761.175 411.32 760.919 411.314 760.597 cv
411.312 760.39 411.38 760.249 411.462 760.156 cv
411.578 760.243 411.72 760.298 411.875 760.298 cv
412.246 760.298 412.544 759.999 412.544 759.63 cv
412.544 759.259 412.246 758.96 411.875 758.96 cv
cp
f
409.218 768.163 mo
407.808 768.849 405.49 769.757 402.436 770.183 cv
401.238 770.349 400.077 770.409 399.008 770.409 cv
397.618 770.409 396.389 770.306 395.446 770.187 cv
394.37 770.052 393.528 769.886 393.014 769.769 cv
393.137 770.161 393.287 770.55 393.467 770.927 cv
393.471 770.937 393.475 770.948 393.48 770.954 cv
393.501 770.999 393.523 771.044 393.545 771.089 cv
393.567 771.132 393.588 771.175 393.61 771.216 cv
393.617 771.228 393.622 771.239 393.628 771.249 cv
393.93 771.82 394.294 772.343 394.708 772.798 cv
396.148 774.372 397.615 774.622 397.629 774.624 cv
397.652 774.626 li
397.673 774.634 li
397.686 774.64 398.987 775.06 400.965 775.06 cv
402.91 775.06 404.82 774.667 406.638 773.892 cv
407.986 773.202 409.261 772.156 409.892 771.222 cv
410.38 770.499 410.734 769.73 410.943 768.929 cv
411.054 768.503 411.142 767.822 411.089 767.103 cv
410.693 767.37 410.066 767.749 409.218 768.163 cv
cp
f
398.088 761.532 mo
399.645 761.532 400.905 762.794 400.905 764.351 cv
400.905 765.906 399.645 767.165 398.088 767.165 cv
396.534 767.165 395.272 765.906 395.272 764.351 cv
395.272 762.794 396.534 761.532 398.088 761.532 cv
cp
406.33 761.603 mo
407.29 761.603 408.074 762.384 408.074 763.345 cv
408.074 764.308 407.29 765.089 406.33 765.089 cv
405.369 765.089 404.587 764.308 404.587 763.345 cv
404.587 762.384 405.369 761.603 406.33 761.603 cv
cp
394.061 762.269 mo
394.02 762.329 393.408 763.195 392.925 764.523 cv
392.564 765.517 392.58 766.966 392.58 766.982 cv
392.58 766.986 li
392.58 767.325 392.599 767.661 392.636 767.995 cv
392.636 768.003 392.636 768.009 392.638 768.013 cv
392.642 768.056 392.649 768.097 392.653 768.14 cv
392.684 768.372 392.722 768.607 392.772 768.843 cv
393.472 769.021 397.65 769.995 402.32 769.345 cv
405.248 768.937 407.47 768.072 408.82 767.417 cv
409.941 766.874 410.662 766.382 410.939 766.179 cv
410.662 765.152 409.898 763.538 409.197 762.532 cv
407.191 759.667 405.029 758.933 403.919 758.749 cv
403.496 758.681 403.156 758.64 402.675 758.64 cv
402.229 758.64 401.674 758.677 400.933 758.755 cv
400.19 758.831 399.361 759.027 398.4 759.351 cv
397.053 759.802 395.833 760.509 394.874 761.398 cv
394.841 761.429 li
394.699 761.56 394.402 761.835 394.061 762.269 cv
cp
f
241.145 235.745 mo
241.157 235.745 li
241.145 235.745 li
cp
198.546 218.294 mo
198.668 218.615 198.659 218.98 198.498 219.299 cv
196.443 223.362 196.081 227.519 197.419 231.653 cv
197.53 231.997 197.486 232.372 197.299 232.68 cv
197.1 233.012 192.452 240.964 198.236 248.855 cv
198.325 248.977 198.393 249.114 198.433 249.259 cv
198.782 250.528 199.844 254.389 206.945 252.658 cv
208.491 252.281 210.053 251.58 211.59 250.575 cv
211.772 250.456 211.983 250.387 212.2 250.374 cv
226.101 249.598 229.47 241.96 229.501 241.883 cv
229.648 241.536 229.943 241.273 230.305 241.17 cv
234.259 240.033 237.59 237.933 240.203 234.93 cv
240.223 234.906 240.244 234.883 240.267 234.861 cv
242.423 232.366 244.071 229.302 245.166 225.751 cv
245.228 225.548 245.341 225.365 245.494 225.219 cv
248.226 222.608 249.924 219.199 250.541 215.088 cv
251.347 209.766 250.021 205.115 250.008 205.069 cv
249.938 204.832 249.942 204.579 250.016 204.344 cv
254.893 189.009 248.631 180.477 248.567 180.393 cv
248.333 180.082 248.254 179.675 248.361 179.3 cv
250.657 171.22 244.854 165.213 244.605 164.962 cv
244.234 164.584 244.14 164.01 244.376 163.535 cv
250.151 151.88 237.555 138.392 237.427 138.257 cv
237.262 138.084 237.151 137.866 237.107 137.631 cv
236.801 135.989 236.448 134.404 236.06 132.92 cv
235.492 130.734 234.821 128.682 234.064 126.816 cv
230.77 118.702 226.601 116.21 224.409 115.447 cv
224.105 115.341 223.855 115.121 223.709 114.834 cv
221.966 111.396 217.65 105.629 208.313 105.629 cv
200.208 105.629 196.647 108.912 196.061 111.723 cv
195.718 113.365 196.364 114.85 197.666 115.417 cv
198.047 115.585 198.419 115.68 198.81 115.71 cv
199.473 115.761 199.978 116.326 199.956 116.991 cv
199.933 117.655 199.392 118.185 198.727 118.192 cv
198.017 118.199 197.416 118.972 197.121 119.433 cv
195.347 122.203 194.805 128.256 197.022 133.205 cv
197.094 133.365 197.13 133.538 197.13 133.713 cv
197.13 133.832 197.113 133.955 197.08 134.069 cv
197.043 134.196 193.476 146.623 198.687 154.442 cv
199.174 154.682 199.463 155.222 199.359 155.781 cv
199.26 156.323 199.198 156.901 199.175 157.501 cv
199.064 160.398 199.678 162.923 201 165.005 cv
201.227 165.364 201.256 165.813 201.076 166.197 cv
200.958 166.449 198.213 172.451 199.981 179.687 cv
200.069 180.044 199.993 180.422 199.774 180.718 cv
199.755 180.745 197.608 183.743 196.258 189.416 cv
194.849 195.34 194.105 205.156 198.546 218.294 cv
cp
203.693 255.581 mo
198.65 255.582 196.787 252.424 196.1 250.143 cv
190.312 242.056 193.808 233.986 194.893 231.898 cv
193.61 227.506 194.006 222.95 196.045 218.654 cv
191.578 205.175 192.373 195.016 193.84 188.841 cv
195.008 183.933 196.725 180.872 197.442 179.739 cv
196.014 173.2 197.841 167.605 198.561 165.771 cv
197.199 163.374 196.57 160.564 196.692 157.406 cv
196.709 156.956 196.745 156.514 196.798 156.085 cv
191.312 148.196 193.953 136.256 194.577 133.812 cv
192.197 128.113 192.91 121.399 195.027 118.092 cv
195.258 117.733 195.495 117.425 195.733 117.163 cv
193.983 115.905 193.131 113.603 193.627 111.216 cv
194.441 107.313 198.727 103.144 208.313 103.144 cv
218.595 103.144 223.563 109.297 225.699 113.276 cv
228.825 114.518 233.058 117.731 236.367 125.882 cv
237.166 127.848 237.871 130.005 238.464 132.293 cv
238.839 133.725 239.182 135.247 239.484 136.822 cv
241.369 138.909 252.262 151.731 246.961 163.868 cv
248.583 165.796 252.802 171.729 250.904 179.406 cv
252.304 181.582 256.962 190.324 252.494 204.748 cv
252.82 206.04 253.761 210.422 252.999 215.459 cv
252.316 220.009 250.448 223.82 247.444 226.789 cv
246.237 230.577 244.433 233.863 242.082 236.562 cv
242.06 236.586 242.038 236.61 242.015 236.633 cv
239.209 239.833 235.68 242.107 231.515 243.402 cv
230.414 245.396 225.799 251.998 212.669 252.837 cv
210.985 253.9 209.259 254.652 207.534 255.072 cv
206.084 255.426 204.809 255.581 203.693 255.581 cv
cp
.742916 .757748 0 0 cmyk
f
175.351 105.629 mo
166.011 105.629 161.696 111.396 159.954 114.834 cv
159.81 115.121 159.56 115.34 159.257 115.445 cv
157.06 116.216 152.884 118.721 149.593 126.831 cv
148.843 128.679 148.174 130.727 147.604 132.918 cv
147.217 134.399 146.864 135.985 146.555 137.632 cv
146.511 137.866 146.4 138.083 146.235 138.257 cv
146.108 138.392 133.524 151.902 139.291 163.535 cv
139.528 164.012 139.434 164.586 139.059 164.963 cv
138.813 165.213 133.006 171.22 135.301 179.3 cv
135.409 179.678 135.332 180.085 135.092 180.396 cv
135.031 180.477 128.771 189.009 133.652 204.343 cv
133.691 204.465 133.711 204.592 133.711 204.72 cv
133.711 204.835 133.695 204.955 133.663 205.065 cv
133.609 205.257 132.335 209.838 133.121 215.088 cv
133.739 219.204 135.439 222.613 138.172 225.223 cv
138.326 225.37 138.439 225.553 138.502 225.755 cv
139.606 229.333 141.275 232.42 143.461 234.929 cv
146.08 237.935 149.41 240.035 153.359 241.17 cv
153.72 241.273 154.016 241.536 154.162 241.883 cv
154.296 242.191 157.678 249.604 171.468 250.374 cv
171.685 250.387 171.895 250.456 172.077 250.574 cv
173.621 251.582 175.185 252.282 176.723 252.658 cv
183.825 254.39 184.886 250.528 185.236 249.259 cv
185.276 249.114 185.343 248.977 185.432 248.855 cv
191.217 240.964 186.568 233.012 186.368 232.677 cv
186.184 232.37 186.14 231.995 186.25 231.654 cv
187.588 227.518 187.224 223.359 185.171 219.294 cv
185.021 218.996 184.996 218.651 185.104 218.335 cv
189.564 205.164 188.819 195.339 187.411 189.416 cv
187.411 189.416 li
186.061 183.743 183.914 180.745 183.892 180.715 cv
183.677 180.42 183.601 180.042 183.688 179.687 cv
185.46 172.423 182.619 166.259 182.59 166.198 cv
182.409 165.812 182.437 165.357 182.666 164.998 cv
183.986 162.93 184.601 160.408 184.492 157.5 cv
184.47 156.896 184.409 156.337 184.308 155.789 cv
184.205 155.234 184.487 154.696 184.968 154.453 cv
190.141 146.709 186.622 134.185 186.586 134.058 cv
186.504 133.776 186.525 133.474 186.645 133.206 cv
188.861 128.25 188.319 122.197 186.545 119.43 cv
186.251 118.97 185.652 118.199 184.941 118.192 cv
184.277 118.185 183.735 117.656 183.712 116.991 cv
183.69 116.327 184.194 115.762 184.857 115.71 cv
185.244 115.68 185.629 115.582 186 115.419 cv
187.303 114.85 187.947 113.364 187.605 111.722 cv
187.018 108.911 183.456 105.629 175.351 105.629 cv
cp
179.976 255.581 mo
178.859 255.581 177.586 255.426 176.135 255.072 cv
174.417 254.654 172.691 253.902 171.001 252.837 cv
157.864 251.998 153.249 245.396 152.148 243.402 cv
147.96 242.1 144.409 239.801 141.586 236.562 cv
139.234 233.862 137.431 230.577 136.223 226.794 cv
133.218 223.827 131.348 220.014 130.663 215.457 cv
129.913 210.452 130.841 206.083 131.175 204.753 cv
126.698 190.324 131.358 181.582 132.759 179.406 cv
130.862 171.729 135.083 165.796 136.705 163.868 cv
131.404 151.731 142.295 138.907 144.179 136.821 cv
144.483 135.243 144.826 133.72 145.199 132.291 cv
145.795 129.996 146.499 127.844 147.291 125.896 cv
150.595 117.749 154.832 114.527 157.963 113.277 cv
160.098 109.298 165.065 103.144 175.351 103.144 cv
184.936 103.144 189.222 107.313 190.037 111.214 cv
190.535 113.601 189.685 115.903 187.934 117.162 cv
188.172 117.424 188.408 117.73 188.639 118.089 cv
190.755 121.392 191.468 128.104 189.093 133.807 cv
189.73 136.273 192.391 148.143 186.869 156.078 cv
186.924 156.509 186.959 156.949 186.975 157.408 cv
187.093 160.574 186.465 163.381 185.106 165.765 cv
185.834 167.598 187.666 173.154 186.227 179.739 cv
186.943 180.872 188.661 183.933 189.828 188.841 cv
189.828 188.841 li
191.296 195.007 192.088 205.157 187.621 218.645 cv
189.662 222.944 190.058 227.504 188.775 231.897 cv
189.86 233.986 193.358 242.055 187.568 250.143 cv
186.881 252.424 185.018 255.581 179.976 255.581 cv
cp
f
171.4 252.858 mo
171.372 252.858 171.345 252.857 171.317 252.855 cv
170.632 252.81 170.113 252.218 170.158 251.533 cv
172.049 222.975 li
151.493 184.814 li
151.176 184.229 151.378 183.498 151.95 183.157 cv
181.87 165.318 li
166.781 145.856 li
144.94 138.581 li
144.29 138.365 143.937 137.661 144.154 137.01 cv
144.372 136.358 145.076 136.007 145.726 136.223 cv
167.925 143.617 li
168.158 143.694 168.363 143.84 168.514 144.034 cv
184.696 164.905 li
184.913 165.186 185.001 165.548 184.934 165.897 cv
184.868 166.247 184.656 166.551 184.349 166.734 cv
154.245 184.683 li
174.406 222.11 li
174.517 222.316 174.568 222.549 174.553 222.782 cv
172.639 251.697 li
172.595 252.354 172.049 252.858 171.4 252.858 cv
cp
f
167.532 146.038 mo
167.369 146.038 167.206 146.007 167.052 145.942 cv
166.703 145.796 166.439 145.499 166.337 145.136 cv
157.651 114.613 li
157.537 114.217 157.629 113.79 157.894 113.475 cv
158.157 113.16 158.554 112.993 158.973 113.036 cv
185.082 115.713 li
185.764 115.783 186.261 116.393 186.191 117.076 cv
186.12 117.759 185.493 118.25 184.828 118.186 cv
160.542 115.696 li
168.301 142.958 li
187.182 132.623 li
187.783 132.293 188.539 132.514 188.869 133.116 cv
189.199 133.719 188.978 134.473 188.376 134.803 cv
168.128 145.886 li
167.943 145.987 167.738 146.038 167.532 146.038 cv
cp
f
189.04 130.777 mo
188.852 130.777 188.661 130.734 188.481 130.643 cv
158.285 115.382 li
157.673 115.072 157.427 114.325 157.736 113.712 cv
158.047 113.101 158.793 112.854 159.406 113.164 cv
189.602 128.425 li
190.214 128.735 190.46 129.482 190.151 130.095 cv
189.931 130.528 189.494 130.777 189.04 130.777 cv
cp
f
138.178 165.33 mo
137.753 165.33 137.349 165.112 137.12 164.739 cv
136.834 164.275 136.884 163.68 137.242 163.27 cv
156.904 140.751 li
157.355 140.232 158.141 140.181 158.658 140.632 cv
159.174 141.083 159.228 141.868 158.776 142.385 cv
141.746 161.89 li
174.835 153.41 li
175.5 153.241 176.176 153.64 176.347 154.306 cv
176.518 154.971 176.116 155.648 175.452 155.818 cv
138.487 165.291 li
138.384 165.317 138.281 165.33 138.178 165.33 cv
cp
f
147.106 163.659 mo
153.767 183.835 li
153.855 184.101 153.85 184.388 153.754 184.65 cv
139.874 222.73 li
163.534 205.566 li
181.83 166.747 li
147.106 163.659 li
cp
137.314 227.365 mo
137.05 227.365 136.787 227.281 136.566 227.114 cv
136.129 226.785 135.959 226.21 136.146 225.697 cv
151.27 184.205 li
144.153 162.643 li
144.022 162.246 144.099 161.809 144.359 161.482 cv
144.619 161.153 145.031 160.975 145.443 161.016 cv
183.823 164.429 li
184.229 164.465 184.59 164.696 184.791 165.048 cv
184.994 165.4 185.011 165.829 184.838 166.196 cv
165.647 206.914 li
165.558 207.103 165.422 207.267 165.253 207.39 cv
138.044 227.128 li
137.825 227.286 137.57 227.365 137.314 227.365 cv
cp
f
132.468 205.969 mo
132.35 205.969 132.228 205.951 132.108 205.915 cv
131.451 205.716 131.08 205.022 131.279 204.366 cv
144.144 161.894 li
144.343 161.238 145.036 160.868 145.693 161.064 cv
146.35 161.263 146.721 161.957 146.522 162.614 cv
133.657 205.086 li
133.495 205.623 133.001 205.969 132.468 205.969 cv
cp
f
186.282 219.977 mo
185.802 219.977 185.347 219.699 185.142 219.232 cv
172.174 189.639 li
171.899 189.011 172.185 188.278 172.813 188.003 cv
173.445 187.726 174.175 188.015 174.451 188.642 cv
187.419 218.235 li
187.694 218.864 187.408 219.596 186.78 219.872 cv
186.617 219.943 186.448 219.977 186.282 219.977 cv
cp
f
153.016 243.607 mo
152.79 243.607 152.563 243.546 152.36 243.42 cv
151.876 243.12 151.659 242.528 151.832 241.986 cv
163.339 206.005 li
163.549 205.352 164.251 204.994 164.901 205.2 cv
165.555 205.409 165.915 206.109 165.707 206.762 cv
155.709 238.025 li
172.448 221.808 li
172.866 221.402 173.511 221.343 173.998 221.663 cv
188.119 230.999 li
188.691 231.378 188.847 232.149 188.469 232.721 cv
188.091 233.295 187.32 233.451 186.747 233.073 cv
173.46 224.287 li
153.88 243.256 li
153.642 243.488 153.331 243.607 153.016 243.607 cv
cp
f
223.089 130.777 mo
222.751 130.777 222.422 130.639 222.182 130.384 cv
199.766 106.468 li
199.297 105.967 199.322 105.18 199.823 104.711 cv
200.321 104.241 201.107 104.265 201.58 104.767 cv
222.157 126.723 li
223.583 114.133 li
223.659 113.451 224.264 112.952 224.958 113.038 cv
225.639 113.115 226.13 113.731 226.053 114.413 cv
224.325 129.674 li
224.27 130.156 223.94 130.561 223.48 130.714 cv
223.352 130.757 223.22 130.777 223.089 130.777 cv
cp
f
230.691 242.669 mo
230.208 242.669 229.749 242.384 229.548 241.911 cv
209.486 194.673 li
209.217 194.042 209.511 193.312 210.144 193.044 cv
210.775 192.773 211.503 193.07 211.773 193.702 cv
231.835 240.94 li
232.104 241.571 231.81 242.301 231.177 242.569 cv
231.019 242.637 230.854 242.669 230.691 242.669 cv
cp
f
246.353 227.36 mo
245.988 227.36 245.632 227.199 245.39 226.903 cv
227.312 204.723 li
226.878 204.191 226.958 203.408 227.49 202.974 cv
228.022 202.54 228.806 202.621 229.238 203.152 cv
244.725 222.152 li
240.632 179.483 li
240.619 179.348 240.629 179.211 240.659 179.078 cv
243.785 165.887 li
219.406 173.104 li
218.923 173.247 218.397 173.082 218.082 172.688 cv
217.766 172.293 217.721 171.747 217.968 171.306 cv
237.244 136.796 li
237.579 136.197 238.333 135.983 238.936 136.317 cv
239.534 136.652 239.748 137.409 239.414 138.008 cv
221.626 169.854 li
245.136 162.895 li
245.56 162.772 246.021 162.88 246.343 163.184 cv
246.666 163.489 246.8 163.942 246.699 164.374 cv
243.126 179.451 li
247.59 225.999 li
247.642 226.544 247.332 227.059 246.826 227.267 cv
246.672 227.33 246.512 227.36 246.353 227.36 cv
cp
f
203.812 120.98 mo
225.009 145.67 li
235.98 137.589 li
203.812 120.98 li
cp
212.27 252.858 mo
212.125 252.858 211.978 252.833 211.834 252.779 cv
211.192 252.539 210.865 251.823 211.105 251.18 cv
220.848 225.139 li
196.629 233.215 li
196.177 233.366 195.672 233.243 195.339 232.896 cv
195.007 232.55 194.904 232.043 195.074 231.594 cv
209.467 193.746 li
209.595 193.409 209.864 193.145 210.202 193.021 cv
210.539 192.897 210.916 192.925 211.23 193.1 cv
227.789 202.249 li
240.054 180.079 li
199.564 166.853 li
199.121 166.708 198.797 166.329 198.723 165.869 cv
198.649 165.409 198.838 164.947 199.213 164.671 cv
223.003 147.148 li
197.77 117.758 li
197.383 117.307 197.37 116.645 197.738 116.178 cv
198.108 115.713 198.755 115.571 199.284 115.845 cv
238.899 136.298 li
239.281 136.495 239.534 136.876 239.568 137.304 cv
239.602 137.733 239.412 138.148 239.066 138.403 cv
225.577 148.339 li
225.562 148.35 225.545 148.362 225.529 148.373 cv
202.632 165.24 li
242.254 178.183 li
242.607 178.299 242.889 178.565 243.025 178.91 cv
243.161 179.255 243.136 179.642 242.956 179.967 cv
229.362 204.539 li
229.03 205.139 228.276 205.36 227.674 205.025 cv
211.282 195.968 li
198.329 230.028 li
222.532 221.957 li
222.982 221.807 223.486 221.929 223.819 222.273 cv
224.151 222.618 224.256 223.124 224.089 223.572 cv
213.434 252.051 li
213.248 252.55 212.773 252.858 212.27 252.858 cv
cp
f
201.398 181.187 mo
210.966 192.652 li
236.178 180.689 li
201.398 181.187 li
cp
210.629 195.43 mo
210.27 195.43 209.918 195.274 209.675 194.984 cv
197.819 180.778 li
197.513 180.41 197.444 179.899 197.644 179.463 cv
197.845 179.028 198.277 178.746 198.755 178.739 cv
241.85 178.122 li
242.415 178.103 242.946 178.514 243.08 179.083 cv
243.211 179.652 242.929 180.237 242.401 180.488 cv
211.162 195.311 li
210.992 195.391 210.81 195.43 210.629 195.43 cv
cp
f
%%IncludeResource: font CooperHewitt-Medium
/RSUQAY+CooperHewitt-Medium /CooperHewitt-Medium findfont ct_VMDictPut/RSUQAY+CooperHewitt-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 7{/.notdef}rp /I 3{/.notdef}rp /M 5{/.notdef}rp /S /.notdef /U /V 169{/.notdef}rp]RSUQAY+CooperHewitt-Medium nfRSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf144.111 288.245 mo(VIVAMUS )[13.625 5.44141 12.6162 13.626 18.1455 14.1953 13.4063 0 ]xsh443.367 154.046 mo
443.366 154.057 443.36 154.065 443.359 154.076 cv
443.343 154.204 443.306 154.328 443.251 154.447 cv
443.23 154.493 443.202 154.533 443.175 154.576 cv
443.146 154.623 443.127 154.674 443.091 154.718 cv
440.868 157.431 li
451.135 154.95 li
457.047 147.708 li
454.44 141.723 450.349 137.402 450.349 137.402 cv
450.131 136.236 449.895 135.133 449.646 134.08 cv
444.848 138.261 li
443.367 154.046 li
cp
.11313 .869688 .333989 .000488289 cmyk
f
414.073 194.569 mo
414.07 194.561 414.07 194.553 414.068 194.545 cv
414.06 194.521 414.058 194.497 414.052 194.473 cv
414.035 194.4 414.023 194.328 414.019 194.256 cv
414.018 194.226 414.018 194.196 414.018 194.166 cv
414.02 194.094 414.027 194.023 414.041 193.953 cv
414.046 193.928 414.049 193.902 414.055 193.877 cv
414.079 193.784 414.113 193.693 414.158 193.608 cv
414.16 193.605 414.16 193.601 414.162 193.598 cv
420.98 180.954 li
415.973 171.488 li
415.652 170.882 415.884 170.13 416.49 169.809 cv
417.096 169.488 417.849 169.719 418.17 170.326 cv
422.399 178.321 li
425.664 172.267 li
417.599 150.036 li
406.867 139.419 li
406.365 144.086 406.486 150.68 409.94 155.517 cv
410.158 155.557 li
410.049 156.147 409.979 156.778 409.954 157.453 cv
409.815 161.043 410.729 163.715 411.971 165.671 cv
411.901 165.82 408.907 172.256 410.794 179.982 cv
410.794 179.982 408.505 183.095 407.069 189.129 cv
405.515 195.663 404.959 205.614 409.403 218.733 cv
409.408 218.738 li
408.676 220.188 408.029 221.898 407.682 223.816 cv
419.855 212.499 li
414.073 194.569 li
cp
f
423.882 233.191 mo
418.915 235.845 li
418.728 235.945 418.529 235.992 418.33 235.992 cv
417.887 235.992 417.457 235.753 417.233 235.335 cv
416.909 234.729 417.138 233.976 417.744 233.652 cv
423.396 230.633 li
420.48 215.311 li
407.43 227.444 li
407.488 228.899 407.738 230.434 408.256 232.036 cv
408.256 232.036 402.884 240.9 409.254 249.589 cv
410.148 252.832 412.725 255.459 419.26 253.865 cv
420.232 253.628 421.18 253.273 422.106 252.835 cv
425.717 242.832 li
423.882 233.191 li
cp
f
425.431 127.966 mo
407.236 120.556 li
405.996 123.982 405.912 129.256 407.909 133.713 cv
407.909 133.713 407.909 133.713 407.909 133.718 cv
407.881 133.811 407.602 134.807 407.314 136.365 cv
418.186 147.12 li
425.431 127.966 li
cp
f
422.796 113.679 mo
423.124 113.076 423.879 112.854 424.481 113.181 cv
425.085 113.508 425.308 114.263 424.98 114.866 cv
420.427 123.245 li
426.952 125.902 li
442.06 117.844 li
440.103 115.772 438.23 114.758 436.838 114.273 cv
434.966 110.578 430.338 104.386 420.333 104.386 cv
405.774 104.386 404.478 114.501 409.19 116.557 cv
409.711 116.785 410.223 116.909 410.734 116.949 cv
409.855 116.958 409.059 117.474 408.393 118.343 cv
418.111 122.301 li
422.796 113.679 li
cp
f
441.262 149.878 mo
442.42 137.535 li
442.45 137.217 442.6 136.923 442.84 136.714 cv
448.947 131.393 li
448.418 129.523 447.842 127.843 447.236 126.349 cv
446.122 123.605 444.905 121.471 443.68 119.797 cv
428.732 127.769 li
441.262 149.878 li
cp
f
448.046 209.134 mo
448.036 209.126 448.024 209.123 448.014 209.115 cv
434.796 197.15 li
436.165 220.265 li
446.352 228.272 li
446.352 219.463 li
446.352 218.776 446.909 218.22 447.595 218.22 cv
448.281 218.22 448.837 218.776 448.837 219.463 cv
448.837 230.226 li
454.21 234.448 li
456.307 231.656 457.593 228.649 458.374 226.117 cv
460.456 224.127 461.814 221.859 462.682 219.562 cv
448.128 209.206 li
448.098 209.184 448.073 209.158 448.046 209.134 cv
cp
f
450.468 207.82 mo
463.44 217.05 li
463.58 216.452 463.703 215.857 463.791 215.272 cv
464.65 209.592 463.22 204.721 463.22 204.721 cv
464.276 201.4 464.825 198.393 465.04 195.702 cv
458.98 192.211 li
450.468 207.82 li
cp
f
417.337 192.945 mo
423.57 192.945 li
427.524 188.332 li
427.971 187.811 428.755 187.75 429.277 188.198 cv
429.798 188.644 429.858 189.429 429.411 189.95 cv
426.843 192.945 li
433.375 192.945 li
433.509 192.945 433.636 192.971 433.757 193.01 cv
433.772 193.015 433.786 193.018 433.801 193.023 cv
433.947 193.077 434.079 193.156 434.194 193.257 cv
434.199 193.261 434.205 193.262 434.21 193.266 cv
448.513 206.213 li
452.087 199.659 li
445.154 194.028 li
444.62 193.595 444.539 192.812 444.972 192.279 cv
445.404 191.747 446.187 191.665 446.72 192.098 cv
453.297 197.439 li
456.825 190.969 li
427.509 174.081 li
417.337 192.945 li
cp
f
416.962 195.431 mo
422.463 212.488 li
422.469 212.505 422.467 212.522 422.472 212.539 cv
422.481 212.572 422.495 212.603 422.501 212.638 cv
427.374 238.242 li
433.702 220.715 li
432.204 195.431 li
416.962 195.431 li
cp
f
447.625 182.801 mo
465.151 192.897 li
465.112 184.246 461.577 179.639 461.577 179.639 cv
462.991 174.66 461.556 170.391 460.013 167.592 cv
449.925 169.076 li
447.625 182.801 li
cp
f
440.628 153.801 mo
433.498 141.22 li
431.699 145.185 li
431.491 145.644 431.039 145.915 430.566 145.915 cv
430.395 145.915 430.22 145.879 430.053 145.803 cv
429.429 145.52 429.152 144.783 429.435 144.158 cv
431.982 138.545 li
427.247 130.19 li
419.997 149.358 li
427.446 169.889 li
440.628 153.801 li
cp
f
425.213 251.548 mo
439.269 250.427 442.668 242.365 442.668 242.365 cv
446.993 241.121 450.205 238.907 452.603 236.346 cv
435.542 222.936 li
425.213 251.548 li
cp
f
452.126 157.268 mo
438.255 160.619 li
428.913 172.021 li
445.326 181.477 li
447.623 167.772 li
447.712 167.24 448.134 166.827 448.668 166.749 cv
458.527 165.299 li
457.935 164.516 457.51 164.087 457.51 164.087 cv
459.797 159.472 459.434 154.65 458.065 150.392 cv
452.796 156.846 li
452.625 157.055 452.389 157.204 452.126 157.268 cv
cp
f
365.905 234.953 mo
365.566 235.153 365.151 235.18 364.787 235.025 cv
364.425 234.871 364.157 234.553 364.066 234.17 cv
358.083 209.026 li
346.42 222.456 li
347.185 223.738 348.135 224.977 349.335 226.122 cv
350.239 229.052 351.818 232.617 354.544 235.745 cv
356.997 238.561 360.373 241.024 365.036 242.365 cv
365.036 242.365 367.551 248.343 377.22 250.721 cv
377.22 228.291 li
365.905 234.953 li
cp
f
379.706 228.702 mo
379.706 251.22 li
380.858 251.404 382.091 251.541 383.419 251.615 cv
385.017 252.658 386.696 253.438 388.449 253.865 cv
394.048 255.23 396.736 253.495 397.955 250.931 cv
387.242 234.73 li
379.706 228.702 li
cp
f
385.016 219.664 mo
384.62 219.104 384.754 218.328 385.314 217.932 cv
385.873 217.537 386.649 217.669 387.046 218.23 cv
392.871 226.477 li
398.725 219.636 li
398.587 219.326 398.447 219.023 398.3 218.733 cv
399.277 215.85 400 213.128 400.537 210.554 cv
392.999 197.633 li
388.122 198.552 li
388.122 209.822 li
388.122 210.509 387.565 211.065 386.879 211.065 cv
386.193 211.065 385.636 210.509 385.636 209.822 cv
385.636 199.021 li
379.706 200.139 li
379.706 225.52 li
388.008 232.161 li
391.204 228.426 li
385.016 219.664 li
cp
f
377.22 212.654 mo
360.424 208.127 li
366.094 231.957 li
377.22 225.407 li
377.22 212.654 li
cp
f
377.22 182.284 mo
370.736 175.962 li
362.499 183.609 li
366.952 189.771 li
367.354 190.327 367.228 191.104 366.673 191.506 cv
366.452 191.665 366.198 191.742 365.945 191.742 cv
365.56 191.742 365.18 191.563 364.937 191.227 cv
360.663 185.313 li
356.088 189.561 li
359.773 205.377 li
377.22 210.08 li
377.22 182.284 li
cp
f
368.954 174.225 mo
365.497 170.854 li
353.794 172.143 li
353.748 172.148 353.702 172.15 353.656 172.15 cv
353.031 172.15 352.493 171.679 352.423 171.043 cv
352.347 170.361 352.84 169.747 353.522 169.672 cv
363.192 168.607 li
348.708 154.485 li
348.303 157.615 348.619 160.901 350.199 164.087 cv
350.199 164.087 343.595 170.726 346.127 179.639 cv
346.127 179.639 343.747 182.742 342.871 188.633 cv
354.194 187.928 li
368.954 174.225 li
cp
f
374.202 144.243 mo
373.977 144.43 373.695 144.529 373.409 144.529 cv
373.321 144.529 373.233 144.52 373.145 144.501 cv
365.167 142.769 li
375.796 158.058 li
384.508 152.251 li
384.844 152.026 385.271 151.979 385.648 152.127 cv
386.026 152.274 386.309 152.596 386.404 152.99 cv
390.589 170.147 li
395.81 165.841 li
395.766 165.737 395.733 165.666 395.733 165.666 cv
396.98 163.715 397.888 161.043 397.754 157.453 cv
397.729 156.778 397.66 156.152 397.551 155.561 cv
397.764 155.517 li
397.959 155.245 398.141 154.966 398.315 154.684 cv
382.555 135.23 li
382.304 134.921 382.217 134.51 382.32 134.126 cv
385.518 122.181 li
379.924 115.039 li
379.501 114.499 379.595 113.718 380.136 113.295 cv
380.676 112.87 381.456 112.966 381.88 113.507 cv
386.322 119.177 li
390.242 104.535 li
389.347 104.441 388.395 104.386 387.371 104.386 cv
380.716 104.386 376.448 107.13 373.778 110.053 cv
374.651 143.253 li
374.662 143.635 374.496 144 374.202 144.243 cv
cp
f
361.493 156.574 mo
361.522 155.906 362.072 155.383 362.735 155.383 cv
362.752 155.383 362.769 155.383 362.787 155.384 cv
363.473 155.412 364.006 155.992 363.977 156.677 cv
363.608 165.541 li
378.532 180.092 li
383.111 176.315 li
383.113 176.314 383.114 176.312 383.116 176.311 cv
388.46 171.904 li
384.41 155.303 li
376.161 160.802 li
375.598 161.177 374.837 161.033 374.451 160.478 cv
361.602 141.996 li
354.825 140.525 li
352.94 143.111 350.499 147.081 349.291 151.583 cv
361.217 163.21 li
361.493 156.574 li
cp
f
371.379 113.334 mo
371.191 113.659 371.016 113.976 370.866 114.273 cv
368.234 115.196 363.864 117.977 360.463 126.364 cv
359.728 128.171 359.038 130.237 358.422 132.606 cv
358.035 134.085 357.677 135.679 357.354 137.402 cv
357.354 137.402 357.036 137.739 356.522 138.35 cv
372.125 141.736 li
371.379 113.334 li
cp
f
389.278 185.103 mo
389.59 185.714 389.348 186.463 388.736 186.775 cv
388.555 186.867 388.362 186.911 388.172 186.911 cv
387.72 186.911 387.284 186.664 387.064 186.233 cv
383.487 179.227 li
379.706 182.345 li
379.706 197.609 li
386.626 196.305 li
386.628 196.305 386.63 196.304 386.632 196.304 cv
393.4 195.028 li
393.922 194.929 394.439 195.169 394.705 195.623 cv
401.206 206.768 li
402.261 199.409 401.679 193.499 400.639 189.129 cv
399.204 183.095 396.915 179.982 396.915 179.982 cv
398.075 175.227 397.386 170.968 396.668 168.355 cv
385.451 177.607 li
389.278 185.103 li
cp
f
399.254 248.389 mo
404.334 240.102 399.452 232.036 399.452 232.036 cv
400.628 228.401 400.445 225.105 399.69 222.331 cv
389.725 233.978 li
399.254 248.389 li
cp
f
389.395 139.725 mo
391.784 132.643 li
392.003 131.992 392.706 131.642 393.358 131.862 cv
394.009 132.081 394.358 132.786 394.138 133.437 cv
391.247 142.011 li
399.536 152.242 li
402.799 144.087 399.8 133.713 399.8 133.713 cv
403.052 126.438 400.783 116.989 396.975 116.949 cv
397.481 116.909 397.997 116.785 398.519 116.557 cv
402.569 114.788 402.17 107.06 392.708 104.934 cv
384.885 134.157 li
389.395 139.725 li
cp
f
353.742 190.447 mo
342.614 191.14 li
342.389 194.833 342.787 199.374 344.489 204.721 cv
344.489 204.721 344.489 204.721 344.489 204.725 cv
344.434 204.919 343.078 209.706 343.913 215.272 cv
344.146 216.831 344.568 218.448 345.222 220.045 cv
357.378 206.048 li
353.742 190.447 li
cp
f
%%IncludeResource: font CooperHewitt-Medium
/RSUQAY+CooperHewitt-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 3{/.notdef}rp /E 3{/.notdef}rp /I 3{/.notdef}rp /M 3{/.notdef}rp /Q /.notdef /S /.notdef /U /V 169{/.notdef}rp]RSUQAY+CooperHewitt-Medium nfRSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf359.709 288.245 mo(QUISQUE)[14.415 14.1963 5.44141 13.4063 14.415 14.1963 0 ]xsh666.548 179.639 mo
669.081 170.726 662.481 164.087 662.481 164.087 cv
668.708 151.52 655.321 137.402 655.321 137.402 cv
654.998 135.679 654.641 134.085 654.253 132.606 cv
653.638 130.232 652.943 128.161 652.208 126.349 cv
649.31 119.212 645.72 116.144 643.089 114.822 cv
659.817 233.553 li
661.541 231.023 662.647 228.381 663.346 226.117 cv
666.732 222.88 668.217 218.907 668.763 215.272 cv
669.622 209.592 668.192 204.721 668.192 204.721 cv
673.351 188.498 666.548 179.639 666.548 179.639 cv
cp
.0292058 .321965 .720638 0 cmyk
f
641.81 114.273 mo
639.938 110.578 635.31 104.386 625.304 104.386 cv
622.99 104.386 621.014 104.644 619.341 105.082 cv
627.846 135.046 647.495 202.885 657.288 236.655 cv
657.579 236.356 657.864 236.054 658.132 235.745 cv
658.136 235.745 658.136 235.745 658.136 235.745 cv
658.757 235.033 659.311 234.298 659.817 233.553 cv
643.089 114.822 li
642.632 114.592 642.2 114.409 641.81 114.273 cv
cp
.0280766 .412024 .900664 0 cmyk
f
616.936 105.923 mo
632.511 251.288 li
644.62 249.524 647.639 242.365 647.639 242.365 cv
651.791 241.171 654.923 239.085 657.288 236.655 cv
647.495 202.885 627.846 135.046 619.341 105.082 cv
618.454 105.314 617.655 105.599 616.936 105.923 cv
cp
.0292058 .321965 .720638 0 cmyk
f
614.161 116.557 mo
614.683 116.785 615.194 116.909 615.706 116.949 cv
611.897 116.989 609.623 126.443 612.88 133.713 cv
612.88 133.713 612.88 133.713 612.88 133.718 cv
612.776 134.07 609.057 147.319 614.911 155.517 cv
615.13 155.557 li
615.021 156.147 614.951 156.778 614.926 157.453 cv
614.787 161.043 615.701 163.715 616.942 165.671 cv
616.873 165.82 613.879 172.256 615.765 179.982 cv
615.765 179.982 613.476 183.095 612.041 189.129 cv
610.487 195.663 609.931 205.614 614.375 218.733 cv
614.38 218.738 li
612.717 222.031 611.49 226.663 613.228 232.036 cv
613.228 232.036 607.855 240.9 614.226 249.589 cv
615.12 252.832 617.697 255.459 624.232 253.865 cv
625.984 253.438 627.668 252.658 629.262 251.615 cv
630.414 251.551 631.491 251.436 632.511 251.288 cv
616.936 105.923 li
610.476 108.833 610.595 115.001 614.161 116.557 cv
cp
.0280766 .412024 .900664 0 cmyk
f
571.52 116.952 mo
569.501 118.795 567.319 121.716 565.435 126.364 cv
564.7 128.171 564.009 130.237 563.394 132.606 cv
563.006 134.085 562.649 135.679 562.326 137.402 cv
562.326 137.402 548.939 151.52 555.171 164.087 cv
555.171 164.087 553.483 165.786 552.142 168.615 cv
559.275 194.195 567.955 225.165 574.091 247.033 cv
575.601 248.171 577.614 249.306 580.262 250.171 cv
571.52 116.952 li
cp
.6365 .679835 0 0 cmyk
f
605.611 189.129 mo
604.176 183.095 601.887 179.982 601.887 179.982 cv
603.793 172.166 600.705 165.666 600.705 165.666 cv
601.951 163.715 602.86 161.043 602.726 157.453 cv
602.701 156.778 602.631 156.152 602.522 155.561 cv
602.736 155.517 li
608.675 147.209 604.772 133.713 604.772 133.713 cv
608.024 126.438 605.755 116.989 601.946 116.949 cv
602.453 116.909 602.969 116.785 603.49 116.557 cv
607.664 114.734 607.114 106.581 596.785 104.755 cv
583.951 251.092 li
585.306 251.341 586.778 251.525 588.39 251.615 cv
589.989 252.658 591.668 253.438 593.42 253.865 cv
599.955 255.459 602.532 252.832 603.426 249.589 cv
609.797 240.9 604.424 232.036 604.424 232.036 cv
606.162 226.663 604.936 222.025 603.272 218.733 cv
607.716 205.609 607.165 195.658 605.611 189.129 cv
cp
f
551.099 179.639 mo
551.099 179.639 544.296 188.498 549.46 204.721 cv
549.46 204.721 549.46 204.721 549.46 204.725 cv
549.406 204.919 548.05 209.706 548.884 215.272 cv
549.43 218.912 550.915 222.885 554.307 226.122 cv
555.21 229.052 556.789 232.617 559.516 235.745 cv
561.969 238.561 565.345 241.024 570.008 242.365 cv
570.008 242.365 570.993 244.701 574.091 247.033 cv
567.955 225.165 559.275 194.195 552.142 168.615 cv
550.829 171.383 549.847 175.232 551.099 179.639 cv
cp
.742916 .757748 0 0 cmyk
f
592.343 104.386 mo
582.342 104.386 577.709 110.578 575.837 114.273 cv
574.664 114.685 573.145 115.47 571.52 116.952 cv
580.262 250.171 li
581.374 250.534 582.604 250.845 583.951 251.092 cv
596.785 104.755 li
595.465 104.522 593.993 104.386 592.343 104.386 cv
cp
f
.0280766 .412024 .900664 0 cmyk
%%IncludeResource: font CooperHewitt-Medium
/RSUQAY+CooperHewitt-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 3{/.notdef}rp /E 3{/.notdef}rp /I 2{/.notdef}rp /L /M /N /.notdef /P /Q /R /S /.notdef /U /V 169{/.notdef}rp]RSUQAY+CooperHewitt-Medium nfRSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf559.896 288.245 mo(PULVINAR)[12.8574 14.1963 10.3564 13.625 5.44141 14.6348 13.625 0 ]xsh198.768 407.066 mo
198.768 407.066 197.62 408.636 196.44 411.691 cv
251.888 411.691 li
250.855 408.421 249.551 406.723 249.551 406.723 cv
250.309 404.056 250.246 401.594 249.79 399.451 cv
198.27 399.451 li
198.047 401.667 198.088 404.28 198.768 407.066 cv
cp
.482734 .109621 1 .00204471 cmyk
f
197.914 382.601 mo
198.133 382.641 li
198.024 383.231 197.954 383.862 197.929 384.537 cv
197.892 385.494 197.934 386.381 198.033 387.211 cv
246.819 387.211 li
247.661 382.921 246.673 378.642 245.102 374.971 cv
194.968 374.971 li
195.399 377.648 196.285 380.32 197.914 382.601 cv
cp
.742916 .757748 0 0 cmyk
f
199.945 392.755 mo
199.901 392.851 198.665 395.522 198.27 399.451 cv
249.79 399.451 li
248.721 394.433 245.484 391.171 245.484 391.171 cv
246.133 389.862 246.558 388.536 246.819 387.211 cv
198.033 387.211 li
198.305 389.496 199.035 391.32 199.945 392.755 cv
cp
.274632 0 .980468 0 cmyk
f
194.968 374.971 mo
245.102 374.971 li
242.499 368.893 238.324 364.486 238.324 364.486 cv
238.211 363.884 238.093 363.303 237.972 362.732 cv
195.427 362.732 li
194.897 365.323 194.193 370.154 194.968 374.971 cv
cp
.6365 .679835 0 0 cmyk
f
195.144 472.889 mo
228.015 472.889 li
229.975 471.03 230.642 469.448 230.642 469.448 cv
235.305 468.108 238.687 465.645 241.135 462.829 cv
241.14 462.829 241.14 462.829 241.14 462.829 cv
241.757 462.121 242.307 461.389 242.812 460.649 cv
195.488 460.649 li
194.511 462.989 193.147 467.731 195.144 472.889 cv
cp
.075349 .715084 .199893 0 cmyk
f
224.813 341.357 mo
224.345 340.433 223.704 339.353 222.85 338.252 cv
194.915 338.252 li
194.302 340.569 195.219 342.792 197.165 343.641 cv
197.686 343.869 198.197 343.994 198.709 344.033 cv
196.655 344.055 195.05 346.815 194.515 350.492 cv
233.866 350.492 li
230.723 344.379 227.113 342.158 224.813 341.357 cv
cp
f
195.883 360.797 mo
195.883 360.797 195.883 360.797 195.883 360.802 cv
195.86 360.88 195.661 361.589 195.427 362.732 cv
237.972 362.732 li
237.746 361.668 237.508 360.652 237.257 359.69 cv
236.641 357.316 235.946 355.245 235.211 353.433 cv
234.776 352.363 234.326 351.387 233.866 350.492 cv
194.515 350.492 li
194.058 353.635 194.382 357.447 195.883 360.797 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
197.229 476.673 mo
198.123 479.916 200.7 482.543 207.235 480.949 cv
208.988 480.522 210.671 479.742 212.265 478.699 cv
220.674 478.229 225.452 475.321 228.015 472.889 cv
195.144 472.889 li
195.627 474.136 196.3 475.406 197.229 476.673 cv
cp
f
197.378 445.817 mo
197.383 445.822 li
196.985 446.61 196.614 447.477 196.3 448.41 cv
249.872 448.41 li
250.879 446.406 251.469 444.333 251.766 442.356 cv
252.111 440.073 252.084 437.928 251.932 436.17 cv
194.85 436.17 li
195.4 439.167 196.214 442.381 197.378 445.817 cv
cp
.6365 .679835 0 0 cmyk
f
196.231 459.12 mo
196.231 459.12 195.893 459.678 195.488 460.649 cv
242.812 460.649 li
244.54 458.115 245.649 455.469 246.348 453.201 cv
247.894 451.724 249.027 450.091 249.872 448.41 cv
196.3 448.41 li
195.304 451.376 194.909 455.033 196.231 459.12 cv
cp
.742916 .757748 0 0 cmyk
f
208.307 331.47 mo
199.759 331.47 195.788 334.957 194.915 338.252 cv
222.85 338.252 li
220.289 334.952 215.81 331.47 208.307 331.47 cv
cp
.0413825 .524987 .115145 0 cmyk
f
194.85 436.17 mo
251.932 436.17 li
251.704 433.554 251.195 431.805 251.195 431.805 cv
252.104 428.947 252.635 426.323 252.904 423.93 cv
193.975 423.93 li
193.799 427.475 194.004 431.558 194.85 436.17 cv
cp
.0280766 .412024 .900664 0 cmyk
f
195.044 416.213 mo
194.524 418.402 194.121 420.984 193.975 423.93 cv
252.904 423.93 li
253.494 418.686 252.799 414.574 251.888 411.691 cv
196.44 411.691 li
195.954 412.949 195.463 414.453 195.044 416.213 cv
cp
.0292058 .321965 .720638 0 cmyk
f
171.393 478.699 mo
172.992 479.742 174.67 480.522 176.423 480.949 cv
182.958 482.543 185.535 479.916 186.429 476.673 cv
187.358 475.406 188.031 474.136 188.514 472.889 cv
155.638 472.889 li
158.202 475.321 162.982 478.229 171.393 478.699 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
175.346 331.47 mo
167.846 331.47 163.365 334.952 160.804 338.252 cv
188.74 338.252 li
187.868 334.957 183.897 331.47 175.346 331.47 cv
cp
.0413825 .524987 .115145 0 cmyk
f
186.275 445.817 mo
187.439 442.381 188.253 439.167 188.803 436.17 cv
131.727 436.17 li
131.573 437.928 131.545 440.073 131.887 442.356 cv
132.184 444.334 132.773 446.407 133.78 448.41 cv
187.359 448.41 li
187.046 447.475 186.674 446.606 186.275 445.817 cv
cp
.6365 .679835 0 0 cmyk
f
189.682 423.93 mo
130.751 423.93 li
131.021 426.323 131.553 428.947 132.463 431.805 cv
132.463 431.805 132.463 431.805 132.463 431.81 cv
132.431 431.924 131.948 433.643 131.727 436.17 cv
188.803 436.17 li
189.65 431.558 189.857 427.475 189.682 423.93 cv
cp
.0280766 .412024 .900664 0 cmyk
f
188.171 460.649 mo
140.846 460.649 li
141.351 461.39 141.902 462.122 142.518 462.829 cv
144.971 465.645 148.348 468.108 153.011 469.448 cv
153.011 469.448 153.678 471.03 155.638 472.889 cv
188.514 472.889 li
190.511 467.731 189.147 462.989 188.171 460.649 cv
cp
.075349 .715084 .199893 0 cmyk
f
188.614 416.213 mo
188.195 414.453 187.704 412.949 187.218 411.691 cv
131.766 411.691 li
130.855 414.574 130.16 418.686 130.751 423.93 cv
189.682 423.93 li
189.537 420.983 189.135 418.401 188.614 416.213 cv
cp
.0292058 .321965 .720638 0 cmyk
f
184.949 344.033 mo
185.456 343.994 185.972 343.869 186.494 343.641 cv
188.437 342.792 189.354 340.569 188.74 338.252 cv
160.804 338.252 li
159.949 339.353 159.308 340.433 158.84 341.357 cv
156.546 342.162 152.932 344.381 149.789 350.492 cv
189.141 350.492 li
188.607 346.814 187.003 344.055 184.949 344.033 cv
cp
.075349 .715084 .199893 0 cmyk
f
187.427 459.12 mo
188.749 455.035 188.355 451.377 187.359 448.41 cv
133.78 448.41 li
134.625 450.093 135.761 451.728 137.31 453.206 cv
138.009 455.473 139.12 458.119 140.846 460.649 cv
188.171 460.649 li
187.765 459.678 187.427 459.12 187.427 459.12 cv
cp
.742916 .757748 0 0 cmyk
f
188.23 362.732 mo
145.681 362.732 li
145.56 363.303 145.442 363.884 145.329 364.486 cv
145.329 364.486 141.154 368.893 138.552 374.971 cv
188.686 374.971 li
189.463 370.15 188.759 365.321 188.23 362.732 cv
cp
.6365 .679835 0 0 cmyk
f
187.775 360.797 mo
189.273 357.445 189.597 353.634 189.141 350.492 cv
149.789 350.492 li
149.326 351.391 148.874 352.372 148.437 353.448 cv
147.703 355.255 147.012 357.321 146.397 359.69 cv
146.145 360.652 145.907 361.668 145.681 362.732 cv
188.23 362.732 li
187.983 361.523 187.775 360.797 187.775 360.797 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
183.708 392.75 mo
184.622 391.319 185.35 389.496 185.623 387.211 cv
136.838 387.211 li
137.099 388.536 137.524 389.862 138.174 391.171 cv
138.174 391.171 134.934 394.433 133.865 399.451 cv
185.385 399.451 li
184.981 395.449 183.708 392.75 183.708 392.75 cv
cp
.274632 0 .980468 0 cmyk
f
185.729 384.537 mo
185.704 383.862 185.635 383.236 185.525 382.645 cv
185.739 382.601 li
187.369 380.32 188.255 377.648 188.686 374.971 cv
138.552 374.971 li
136.981 378.642 135.994 382.921 136.838 387.211 cv
185.623 387.211 li
185.722 386.381 185.765 385.494 185.729 384.537 cv
cp
.742916 .757748 0 0 cmyk
f
184.89 407.066 mo
185.569 404.28 185.609 401.668 185.385 399.451 cv
133.865 399.451 li
133.408 401.594 133.344 404.056 134.102 406.723 cv
134.102 406.723 132.798 408.421 131.766 411.691 cv
187.218 411.691 li
186.038 408.636 184.89 407.066 184.89 407.066 cv
cp
.482734 .109621 1 .00204471 cmyk
f
.742916 .757748 0 0 cmyk
%%IncludeResource: font CooperHewitt-Medium
/RSUQAY+CooperHewitt-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 3{/.notdef}rp /E 3{/.notdef}rp /I 2{/.notdef}rp /L /M /N /.notdef /P /Q /R /S /T /U /V 169{/.notdef}rp]RSUQAY+CooperHewitt-Medium nfRSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf150.568 514.607 mo(ALIQUET)[13.625 10.9932 5.44043 14.416 14.1953 12.2217 0 ]xsh410.388 445.145 mo
410.817 445.574 li
410.417 446.382 li
408.364 450.447 408.001 454.604 409.339 458.739 cv
409.514 459.279 li
409.219 459.765 li
409.019 460.097 404.371 468.048 410.156 475.938 cv
410.291 476.123 li
410.352 476.344 li
410.7 477.612 411.764 481.474 418.865 479.742 cv
420.411 479.365 421.974 478.664 423.508 477.659 cv
423.788 477.478 li
424.12 477.458 li
437.905 476.689 441.286 469.275 441.424 468.96 cv
441.657 468.423 li
442.224 468.253 li
446.181 467.117 449.511 465.016 452.122 462.013 cv
452.409 461.683 li
454.454 459.239 456.028 456.263 457.086 452.834 cv
457.181 452.526 li
457.414 452.302 li
460.145 449.693 461.843 446.283 462.462 442.172 cv
463.271 436.824 461.94 432.201 461.927 432.155 cv
461.82 431.79 li
461.936 431.427 li
466.812 416.093 460.551 407.562 460.487 407.477 cv
460.113 406.983 li
460.28 406.384 li
462.587 398.264 456.589 392.109 456.528 392.047 cv
455.901 391.416 li
456.296 390.619 li
462.07 378.964 449.475 365.476 449.347 365.342 cv
449.096 365.076 li
449.027 364.716 li
448.719 363.07 448.366 361.485 447.979 360.004 cv
447.411 357.818 446.74 355.766 445.983 353.9 cv
442.689 345.787 438.52 343.294 436.328 342.531 cv
435.855 342.366 li
435.629 341.918 li
433.887 338.481 429.572 332.713 420.232 332.713 cv
412.128 332.713 408.568 335.996 407.982 338.807 cv
407.639 340.449 408.283 341.934 409.586 342.502 cv
409.966 342.669 410.34 342.764 410.731 342.794 cv
410.648 345.276 li
409.936 345.283 409.335 346.057 409.04 346.518 cv
407.266 349.287 406.724 355.34 408.942 360.289 cv
409.051 360.532 li
409 361.157 li
408.962 361.283 405.483 373.743 410.571 381.47 cv
411.508 381.641 li
411.28 382.867 li
411.18 383.407 411.117 383.984 411.095 384.582 cv
410.983 387.481 411.597 390.006 412.919 392.09 cv
413.28 392.66 li
412.999 393.274 li
412.88 393.533 410.147 399.595 411.9 406.771 cv
412.038 407.335 li
411.694 407.802 li
411.674 407.829 409.527 410.827 408.178 416.5 cv
406.777 422.389 406.032 432.124 410.388 445.145 cv
cp
415.611 482.665 mo
410.569 482.666 408.707 479.509 408.02 477.226 cv
402.231 469.139 405.728 461.071 406.814 458.983 cv
405.531 454.591 405.926 450.034 407.965 445.738 cv
403.497 432.258 404.292 422.1 405.759 415.925 cv
406.927 411.017 408.645 407.956 409.361 406.823 cv
407.926 400.265 409.736 394.727 410.479 392.853 cv
409.118 390.456 408.49 387.646 408.613 384.489 cv
408.629 384.04 408.664 383.598 408.719 383.168 cv
403.203 375.242 405.866 363.339 406.496 360.894 cv
404.117 355.197 404.829 348.485 406.947 345.178 cv
407.177 344.817 407.414 344.51 407.653 344.247 cv
405.902 342.989 405.05 340.687 405.548 338.3 cv
406.362 334.398 410.648 330.228 420.232 330.228 cv
430.517 330.228 435.483 336.381 437.618 340.36 cv
440.744 341.602 444.978 344.815 448.287 352.966 cv
449.085 354.932 449.79 357.089 450.384 359.377 cv
450.758 360.806 451.1 362.328 451.404 363.906 cv
453.288 365.992 464.181 378.815 458.882 390.953 cv
460.503 392.88 464.721 398.813 462.823 406.491 cv
464.224 408.666 468.882 417.408 464.413 431.832 cv
464.739 433.124 465.682 437.507 464.92 442.542 cv
464.235 447.094 462.366 450.905 459.365 453.872 cv
458.155 457.662 456.351 460.949 454 463.645 cv
453.616 464.071 li
450.866 467.084 447.444 469.24 443.435 470.486 cv
442.334 472.479 437.72 479.083 424.588 479.92 cv
422.904 480.984 421.178 481.736 419.453 482.156 cv
418.002 482.51 416.729 482.665 415.611 482.665 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
387.27 332.713 mo
377.932 332.713 373.616 338.481 371.873 341.918 cv
371.647 342.365 li
371.176 342.529 li
368.979 343.3 364.803 345.805 361.513 353.915 cv
360.766 355.755 360.096 357.804 359.523 360.003 cv
359.135 361.489 358.782 363.075 358.476 364.715 cv
358.409 365.075 li
358.156 365.341 li
358.029 365.476 345.443 378.986 351.212 390.619 cv
351.607 391.416 li
350.98 392.048 li
350.733 392.298 344.926 398.304 347.222 406.384 cv
347.393 406.985 li
347.013 407.48 li
346.952 407.561 340.691 416.093 345.571 431.427 cv
345.63 431.973 li
345.585 432.141 li
345.447 432.638 344.276 437.073 345.042 442.172 cv
345.658 446.287 347.357 449.697 350.093 452.308 cv
350.327 452.532 li
350.422 452.841 li
351.526 456.417 353.193 459.504 355.38 462.012 cv
358 465.019 361.33 467.119 365.278 468.253 cv
365.851 468.418 li
366.082 468.966 li
366.216 469.275 369.598 476.689 383.387 477.458 cv
383.718 477.478 li
383.997 477.658 li
385.543 478.666 387.105 479.367 388.642 479.742 cv
395.739 481.47 396.807 477.612 397.155 476.344 cv
397.216 476.123 li
397.351 475.938 li
403.165 468.009 398.339 459.847 398.289 459.765 cv
397.995 459.279 li
398.169 458.739 li
399.508 454.601 399.144 450.442 397.09 446.377 cv
396.856 445.912 li
397.023 445.418 li
401.483 432.247 400.739 422.423 399.33 416.5 cv
399.329 416.5 li
397.981 410.827 395.833 407.83 395.811 407.8 cv
395.473 407.334 li
395.607 406.771 li
397.379 399.507 394.538 393.343 394.51 393.282 cv
394.217 392.662 li
394.585 392.082 li
395.905 390.015 396.52 387.492 396.413 384.583 cv
396.389 383.98 396.328 383.42 396.228 382.87 cv
396.009 381.68 li
396.922 381.487 li
402.045 373.739 398.543 361.269 398.506 361.141 cv
398.38 360.705 li
398.565 360.29 li
400.78 355.334 400.238 349.28 398.465 346.514 cv
398.17 346.055 397.571 345.283 396.861 345.276 cv
396.778 342.794 li
397.163 342.764 397.547 342.666 397.919 342.503 cv
399.223 341.934 399.867 340.448 399.524 338.807 cv
398.937 335.996 395.376 332.713 387.27 332.713 cv
cp
391.896 482.665 mo
390.778 482.665 389.505 482.51 388.054 482.156 cv
386.338 481.739 384.613 480.987 382.92 479.92 cv
369.785 479.083 365.169 472.479 364.068 470.486 cv
359.88 469.183 356.328 466.885 353.505 463.645 cv
351.153 460.945 349.349 457.661 348.143 453.879 cv
345.136 450.91 343.267 447.098 342.583 442.541 cv
341.839 437.578 342.768 433.164 343.096 431.839 cv
338.62 417.411 343.278 408.667 344.679 406.491 cv
342.781 398.813 347.003 392.881 348.625 390.953 cv
343.323 378.816 354.213 365.993 356.099 363.906 cv
356.401 362.333 356.744 360.811 357.118 359.375 cv
357.718 357.072 358.422 354.92 359.211 352.98 cv
362.515 344.833 366.752 341.612 369.884 340.361 cv
372.019 336.382 376.987 330.228 387.27 330.228 cv
396.857 330.228 401.143 334.397 401.957 338.299 cv
402.456 340.686 401.604 342.987 399.854 344.246 cv
400.092 344.508 400.327 344.814 400.557 345.173 cv
402.674 348.476 403.388 355.187 401.013 360.891 cv
401.65 363.357 404.311 375.228 398.788 383.163 cv
398.843 383.593 398.878 384.032 398.895 384.49 cv
399.014 387.658 398.384 390.466 397.025 392.849 cv
397.753 394.681 399.585 400.239 398.146 406.823 cv
398.864 407.956 400.581 411.017 401.748 415.925 cv
401.747 415.925 li
403.215 422.091 404.007 432.24 399.54 445.728 cv
401.023 448.855 402.29 453.531 400.695 458.983 cv
401.78 461.071 405.277 469.139 399.487 477.226 cv
398.8 479.509 396.936 482.665 391.896 482.665 cv
cp
f
398.971 440.637 mo
396.064 434.587 392.318 429.217 387.838 424.672 cv
382.284 419.04 376.485 415.529 371.823 412.708 cv
366.263 409.343 362.246 406.912 362.548 402.926 cv
362.874 398.632 367.944 396.453 373.314 394.146 cv
378.422 391.951 383.704 389.681 384.164 385.833 cv
384.449 383.44 382.728 381.757 379.895 379.209 cv
376.926 376.539 373.232 373.216 372.125 367.516 cv
371.008 361.755 373.25 357.324 375.228 353.415 cv
377.046 349.822 378.616 346.719 377.557 343.11 cv
376.916 340.927 375.469 339.011 373.134 337.253 cv
374.631 335.267 li
377.369 337.33 379.156 339.733 379.942 342.409 cv
381.278 346.963 379.33 350.814 377.445 354.537 cv
375.56 358.264 373.61 362.117 374.566 367.043 cv
375.513 371.926 378.724 374.813 381.557 377.361 cv
384.401 379.918 387.086 382.333 386.632 386.129 cv
386.002 391.399 380.05 393.957 374.295 396.43 cv
369.842 398.343 365.238 400.321 365.026 403.114 cv
364.84 405.576 368.309 407.676 373.111 410.582 cv
377.89 413.474 383.837 417.074 389.608 422.927 cv
394.281 427.666 398.185 433.263 401.212 439.56 cv
398.971 440.637 li
cp
f
358.742 386.942 mo
355.518 386.942 351.914 386.518 347.935 385.669 cv
348.454 383.238 li
359.183 385.528 366.853 384.608 371.251 380.501 cv
373.665 378.247 374.926 375.257 376.262 372.091 cv
378.121 367.686 380.042 363.132 385.229 360.365 cv
389.373 358.153 394.48 357.729 400.416 359.103 cv
399.855 361.525 li
394.528 360.289 390 360.637 386.399 362.558 cv
381.989 364.91 380.32 368.867 378.551 373.057 cv
377.173 376.324 375.749 379.701 372.948 382.317 cv
369.649 385.398 364.891 386.942 358.742 386.942 cv
cp
f
344.216 412.754 mo
342.754 410.745 li
347.959 406.956 354.357 401.653 357.664 394.204 cv
361.377 385.841 360.904 375.449 356.254 363.314 cv
358.576 362.426 li
363.468 375.196 363.926 386.227 359.937 395.213 cv
356.389 403.201 349.673 408.783 344.216 412.754 cv
cp
f
379.352 478.992 mo
376.894 478.619 li
380.623 454.175 377.918 438.302 368.855 431.441 cv
361.896 426.171 351.823 426.398 343.726 426.572 cv
342.62 426.596 li
342.569 424.111 li
343.671 424.088 li
351.708 423.907 362.707 423.665 370.356 429.458 cv
380.34 437.018 383.283 453.22 379.352 478.992 cv
cp
f
385.576 460.239 mo
383.291 460.239 380.758 458.023 377.714 455.361 cv
373.344 451.539 367.906 446.783 360.642 445.384 cv
355.714 444.433 350.359 445.179 344.74 447.598 cv
343.756 445.315 li
349.841 442.695 355.678 441.898 361.114 442.943 cv
369.037 444.47 374.998 449.683 379.351 453.49 cv
382.178 455.963 384.85 458.294 386.036 457.625 cv
387.763 456.655 386.297 450.481 384.878 444.511 cv
382.123 432.913 378.348 417.028 386.008 404.852 cv
388.414 401.029 391.834 397.786 396.175 395.214 cv
397.442 397.353 li
393.444 399.722 390.306 402.69 388.112 406.176 cv
381.007 417.468 384.642 432.766 387.297 443.937 cv
389.223 452.045 390.615 457.904 387.254 459.793 cv
386.707 460.1 386.15 460.239 385.576 460.239 cv
cp
f
458.342 380.153 mo
451.513 379.956 446.363 378.052 443.034 374.494 cv
439.521 370.739 437.28 364.787 435.304 359.536 cv
433.443 354.592 431.518 349.479 429.31 348.996 cv
428.652 348.855 428.04 349.926 427.126 351.72 cv
425.931 354.059 424.297 357.262 420.741 357.921 cv
414.505 359.077 409.974 354.291 405.872 349.287 cv
407.794 347.711 li
412.338 353.254 415.841 356.3 420.288 355.477 cv
422.639 355.041 423.795 352.778 424.912 350.59 cv
426.01 348.439 427.257 346.001 429.842 346.568 cv
433.368 347.34 435.343 352.586 437.629 358.66 cv
439.525 363.695 441.673 369.401 444.849 372.797 cv
447.708 375.852 452.272 377.492 458.413 377.669 cv
458.342 380.153 li
cp
f
465.104 420.794 mo
424.858 415.889 419.352 411.482 419.274 407.817 cv
419.215 405.117 422.366 403.679 426.354 401.859 cv
430.755 399.85 436.233 397.349 437.165 392.848 cv
438.093 388.375 434.07 384.389 429.81 380.167 cv
425.532 375.927 421.107 371.544 421.258 366.067 cv
421.449 359.206 428.724 352.85 443.502 346.636 cv
444.466 348.927 li
430.873 354.643 423.901 360.432 423.744 366.136 cv
423.621 370.536 427.657 374.535 431.559 378.402 cv
436.102 382.904 440.801 387.559 439.599 393.352 cv
438.411 399.087 432.298 401.878 427.386 404.12 cv
424.869 405.269 421.736 406.699 421.759 407.764 cv
421.784 408.998 425.011 413.404 465.405 418.327 cv
465.104 420.794 li
cp
f
453.383 462.328 mo
433.535 453.422 423.807 444.55 423.641 435.21 cv
423.562 430.79 425.664 427.354 427.889 423.717 cv
430.596 419.29 433.395 414.713 433.17 407.433 cv
432.906 398.846 428.312 386.482 420.38 385.601 cv
417.341 385.266 413.957 386.566 410.834 389.266 cv
409.208 387.387 li
412.858 384.228 416.925 382.72 420.653 383.13 cv
430.411 384.214 435.374 398.226 435.656 407.356 cv
435.903 415.377 432.771 420.497 430.009 425.014 cv
427.89 428.478 426.06 431.47 426.126 435.166 cv
426.271 443.329 435.784 451.705 454.401 460.06 cv
453.383 462.328 li
cp
f
408.78 475.194 mo
406.551 474.095 li
409.544 468.027 413.323 464.287 417.783 462.979 cv
420.671 462.133 423.106 462.487 425.466 462.834 cv
428.144 463.224 430.674 463.594 433.933 462.232 cv
438.611 460.277 443.147 455.304 445.219 449.859 cv
446.556 446.348 446.691 443.162 445.6 440.886 cv
443.985 437.517 439.953 436.909 434.374 436.068 cv
428.198 435.138 420.51 433.98 413.382 428.213 cv
410.324 425.739 407.69 422.666 405.553 419.079 cv
407.689 417.807 li
409.675 421.141 412.116 423.992 414.944 426.281 cv
421.549 431.622 428.559 432.678 434.744 433.611 cv
440.6 434.493 445.657 435.255 447.841 439.812 cv
449.23 442.707 449.124 446.59 447.542 450.742 cv
445.206 456.878 440.24 462.288 434.893 464.524 cv
430.995 466.153 427.869 465.699 425.106 465.292 cv
422.916 464.973 420.849 464.672 418.484 465.364 cv
414.717 466.469 411.452 469.777 408.78 475.194 cv
cp
f
463.602 438.171 mo
453.749 436.725 445.535 431.059 443.162 424.072 cv
440.228 415.439 445.578 401.454 459.338 393.917 cv
460.532 396.097 li
450.658 401.506 442.268 413.716 445.516 423.273 cv
447.597 429.399 455.01 434.398 463.963 435.713 cv
463.602 438.171 li
cp
f
433.094 476.899 mo
430.895 466.054 424.88 457.984 417.394 455.838 cv
414.39 454.975 410.889 455.086 407.271 456.159 cv
406.563 453.777 li
410.637 452.57 414.62 452.456 418.08 453.448 cv
426.46 455.852 433.146 464.648 435.53 476.406 cv
433.094 476.899 li
cp
f
%%IncludeResource: font CooperHewitt-Medium
/RSUQAY+CooperHewitt-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 3{/.notdef}rp /E /F 2{/.notdef}rp /I 2{/.notdef}rp /L /M /N /.notdef /P /Q /R /S /T /U /V 169{/.notdef}rp]RSUQAY+CooperHewitt-Medium nfRSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf340.927 514.607 mo(FERMENTUM)[11.541 12.2207 13.1211 18.1455 12.2217 14.6348 11.6289 14.1953 0 ]xsh612.041 416.213 mo
610.487 422.747 609.931 432.698 614.375 445.817 cv
614.38 445.822 li
612.717 449.114 611.49 453.747 613.228 459.12 cv
613.228 459.12 607.855 467.984 614.226 476.673 cv
615.12 479.916 617.697 482.543 624.232 480.949 cv
625.984 480.522 627.668 479.742 629.262 478.699 cv
644.099 477.87 647.639 469.448 647.639 469.448 cv
652.302 468.108 655.684 465.645 658.132 462.829 cv
658.136 462.829 658.136 462.829 658.136 462.829 cv
659.304 461.49 660.25 460.071 661.032 458.657 cv
613.615 411.239 li
613.072 412.582 612.511 414.238 612.041 416.213 cv
cp
.482734 .109621 1 .00204471 cmyk
f
654.253 359.69 mo
653.638 357.316 652.943 355.245 652.208 353.433 cv
648.806 345.056 644.447 342.275 641.81 341.357 cv
639.938 337.662 635.31 331.47 625.304 331.47 cv
610.745 331.47 609.449 341.585 614.161 343.641 cv
614.683 343.869 615.194 343.994 615.706 344.033 cv
611.897 344.073 609.623 353.527 612.88 360.797 cv
612.88 360.797 612.88 360.797 612.88 360.802 cv
612.776 361.154 609.057 374.403 614.911 382.601 cv
615.13 382.64 li
615.021 383.231 614.951 383.862 614.926 384.537 cv
614.787 388.127 615.701 390.799 616.942 392.755 cv
616.896 392.855 615.534 395.8 615.214 400.06 cv
654.521 360.753 li
654.433 360.392 654.344 360.037 654.253 359.69 cv
cp
.255894 .534966 1 .0820935 cmyk
f
668.763 442.356 mo
669.622 436.676 668.192 431.805 668.192 431.805 cv
673.351 415.582 666.548 406.723 666.548 406.723 cv
666.574 406.631 666.594 406.541 666.618 406.449 cv
615.637 406.449 li
615.681 406.655 615.715 406.858 615.765 407.066 cv
615.765 407.066 614.729 408.481 613.615 411.239 cv
661.032 458.657 li
662.08 456.764 662.828 454.878 663.346 453.201 cv
666.732 449.964 668.217 445.991 668.763 442.356 cv
cp
.274632 0 .980468 0 cmyk
f
615.637 406.449 mo
666.618 406.449 li
668.939 397.675 662.481 391.171 662.481 391.171 cv
668.708 378.603 655.321 364.486 655.321 364.486 cv
655.074 363.168 654.807 361.926 654.521 360.753 cv
615.214 400.06 li
615.07 401.97 615.146 404.144 615.637 406.449 cv
cp
.0280766 .412024 .900664 0 cmyk
f
559.516 462.829 mo
561.969 465.645 565.345 468.108 570.008 469.448 cv
570.008 469.448 573.548 477.87 588.39 478.699 cv
589.989 479.742 591.668 480.522 593.42 480.949 cv
599.955 482.543 602.532 479.916 603.426 476.673 cv
609.797 467.984 604.424 459.12 604.424 459.12 cv
606.162 453.747 604.936 449.11 603.272 445.817 cv
607.716 432.693 607.165 422.742 605.611 416.213 cv
605.141 414.236 604.58 412.58 604.037 411.237 cv
556.618 458.655 li
557.402 460.071 558.348 461.49 559.516 462.829 cv
cp
.742916 .757748 0 0 cmyk
f
600.705 392.75 mo
601.951 390.799 602.86 388.127 602.726 384.537 cv
602.701 383.862 602.631 383.236 602.522 382.645 cv
602.736 382.601 li
608.675 374.293 604.772 360.797 604.772 360.797 cv
608.024 353.522 605.755 344.073 601.946 344.033 cv
602.453 343.994 602.969 343.869 603.49 343.641 cv
608.198 341.585 606.907 331.47 592.343 331.47 cv
582.342 331.47 577.709 337.662 575.837 341.357 cv
573.206 342.28 568.836 345.061 565.435 353.448 cv
564.7 355.255 564.009 357.321 563.394 359.69 cv
563.303 360.037 563.214 360.391 563.126 360.751 cv
602.438 400.062 li
602.112 395.725 600.705 392.75 600.705 392.75 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
602.015 406.449 mo
551.029 406.449 li
551.053 406.541 551.073 406.631 551.099 406.723 cv
551.099 406.723 544.296 415.582 549.46 431.805 cv
549.46 431.805 549.46 431.805 549.46 431.81 cv
549.406 432.003 548.05 436.79 548.884 442.356 cv
549.43 445.996 550.915 449.969 554.307 453.206 cv
554.823 454.881 555.572 456.765 556.618 458.655 cv
604.037 411.237 li
602.922 408.48 601.887 407.066 601.887 407.066 cv
601.938 406.858 601.971 406.655 602.015 406.449 cv
cp
.6365 .679835 0 0 cmyk
f
602.438 400.062 mo
563.126 360.751 li
562.841 361.925 562.573 363.167 562.326 364.486 cv
562.326 364.486 548.939 378.603 555.171 391.171 cv
555.171 391.171 548.708 397.675 551.029 406.449 cv
602.015 406.449 li
602.505 404.146 602.581 401.972 602.438 400.062 cv
cp
.0413825 .524987 .115145 0 cmyk
f
.742916 .757748 0 0 cmyk
RSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf554.884 514.606 mo(PRAESENT )[12.8574 12.9014 13.626 12.2207 13.4063 12.2217 14.6348 11.6289 0 ]xsh195.664 568.12 mo
198.112 565.672 li
197.148 565.941 196.307 566.828 195.664 568.12 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
208.308 553.018 mo
193.749 553.018 192.453 563.133 197.165 565.188 cv
197.539 565.352 197.907 565.446 198.274 565.51 cv
210.634 553.15 li
209.889 553.072 209.123 553.018 208.308 553.018 cv
cp
.6365 .679835 0 0 cmyk
f
197.379 667.365 mo
197.384 667.37 li
195.83 670.446 194.658 674.693 195.929 679.62 cv
250.066 625.482 li
250.484 620.821 248.603 617.011 247.123 614.803 cv
196.696 665.23 li
196.911 665.933 197.134 666.642 197.379 667.365 cv
cp
f
249.581 628.31 mo
195.349 682.543 li
194.304 685.204 193.024 690.359 195.734 695.781 cv
252.967 638.547 li
252.316 632.215 249.864 628.696 249.581 628.31 cv
cp
f
197.915 604.148 mo
198.134 604.188 li
198.024 604.779 197.955 605.409 197.93 606.085 cv
197.827 608.741 198.302 610.891 199.058 612.624 cv
235.626 576.056 li
235.489 575.691 235.352 575.327 235.212 574.98 cv
233.828 571.572 232.285 569.102 230.765 567.295 cv
196.458 601.602 li
196.861 602.488 197.34 603.343 197.915 604.148 cv
cp
f
195.796 599.921 mo
229.647 566.07 li
227.831 564.266 226.113 563.357 224.814 562.904 cv
224.302 561.895 223.576 560.699 222.6 559.494 cv
194.951 587.143 li
194.493 590.645 194.319 595.524 195.796 599.921 cv
cp
f
207.368 702.457 mo
209.073 702.023 210.712 701.263 212.266 700.247 cv
227.103 699.417 230.643 690.996 230.643 690.996 cv
235.306 689.655 238.687 687.192 241.135 684.377 cv
241.14 684.377 241.14 684.377 241.14 684.377 cv
243.871 681.244 245.446 677.678 246.349 674.749 cv
249.736 671.511 251.221 667.539 251.767 663.904 cv
252.101 661.691 252.087 659.605 251.947 657.878 cv
207.368 702.457 li
cp
f
251.196 653.352 mo
252.749 648.468 253.214 644.256 253.111 640.748 cv
196.585 697.273 li
196.787 697.589 196.998 697.905 197.23 698.221 cv
197.989 700.974 199.972 703.273 204.55 702.931 cv
251.701 655.781 li
251.466 654.274 251.196 653.352 251.196 653.352 cv
cp
f
195.884 582.344 mo
195.884 582.344 195.884 582.344 195.884 582.349 cv
195.861 582.428 195.656 583.16 195.417 584.334 cv
221.499 558.252 li
219.485 556.188 216.625 554.293 212.662 553.465 cv
194.599 571.528 li
194.027 574.762 194.301 578.81 195.884 582.344 cv
cp
f
195.045 637.76 mo
194.291 640.931 193.778 644.914 193.951 649.665 cv
245.669 597.947 li
244.357 594.384 242.41 591.288 240.847 589.146 cv
196.248 633.745 li
195.826 634.894 195.408 636.233 195.045 637.76 cv
cp
f
199.946 614.303 mo
199.877 614.452 196.882 620.887 198.769 628.614 cv
198.769 628.614 198.584 628.869 198.291 629.359 cv
239.835 587.814 li
238.937 586.681 238.325 586.034 238.325 586.034 cv
238.002 584.311 237.645 582.717 237.257 581.237 cv
236.938 580.006 236.597 578.86 236.24 577.786 cv
199.864 614.162 li
199.892 614.208 199.918 614.258 199.946 614.303 cv
cp
f
196.17 663.412 mo
246.129 613.454 li
245.741 612.977 245.485 612.719 245.485 612.719 cv
247.65 608.349 247.442 603.793 246.252 599.708 cv
194.076 651.884 li
194.35 655.354 195.004 659.204 196.17 663.412 cv
cp
f
188.615 637.76 mo
187.441 632.826 185.698 629.847 185.101 628.925 cv
137.808 676.217 li
138.759 678.824 140.232 681.752 142.519 684.377 cv
142.635 684.509 142.762 684.636 142.882 684.767 cv
188.845 638.805 li
188.771 638.449 188.695 638.097 188.615 637.76 cv
cp
.0280766 .412024 .900664 0 cmyk
f
187.776 582.344 mo
188.553 580.606 189.012 578.743 189.213 576.915 cv
131.331 634.796 li
130.506 638.149 130.095 642.758 131.224 648.526 cv
189.01 590.741 li
188.84 586.034 187.776 582.344 187.776 582.344 cv
cp
f
184.95 565.581 mo
185.457 565.541 185.973 565.417 186.494 565.188 cv
188.03 564.518 188.921 562.988 188.928 561.233 cv
137.948 612.212 li
138.025 612.381 138.091 612.55 138.174 612.719 cv
138.174 612.719 131.57 619.358 134.103 628.271 cv
134.103 628.271 133.308 629.307 132.469 631.315 cv
189.331 574.453 li
189.262 569.635 187.434 565.607 184.95 565.581 cv
cp
f
187.428 680.668 mo
188.232 678.181 188.397 675.855 188.182 673.744 cv
163.158 698.767 li
165.412 699.514 168.129 700.064 171.394 700.247 cv
172.215 700.782 173.057 701.245 173.919 701.629 cv
189.324 686.225 li
188.781 682.901 187.428 680.668 187.428 680.668 cv
cp
f
189.206 640.787 mo
144.046 685.946 li
146.265 688.032 149.094 689.807 152.717 690.899 cv
189.334 654.282 li
189.988 648.984 189.788 644.478 189.206 640.787 cv
cp
f
180.639 553.556 mo
139.306 594.888 li
137.093 599.364 135.519 605.005 137.291 610.527 cv
188.566 559.251 li
187.701 556.907 185.231 554.576 180.639 553.556 cv
cp
f
185.73 606.085 mo
185.705 605.409 185.635 604.784 185.526 604.193 cv
185.74 604.148 li
188.074 600.882 188.885 596.816 189.013 593.081 cv
131.645 650.449 li
131.876 651.389 132.147 652.356 132.464 653.352 cv
132.464 653.352 132.464 653.352 132.464 653.357 cv
132.41 653.55 131.066 658.3 131.88 663.838 cv
185.333 610.384 li
185.631 609.122 185.79 607.701 185.73 606.085 cv
cp
f
176.424 702.496 mo
182.959 704.09 185.536 701.463 186.43 698.221 cv
188.959 694.772 189.634 691.297 189.533 688.359 cv
175.63 702.261 li
175.894 702.342 176.157 702.431 176.424 702.496 cv
cp
f
186.276 667.365 mo
187.529 663.665 188.373 660.228 188.921 657.038 cv
153.731 692.228 li
154.763 693.729 157.046 696.291 161.452 698.13 cv
187.855 671.727 li
187.489 670.098 186.916 668.631 186.276 667.365 cv
cp
f
183.726 614.335 mo
132.267 665.794 li
132.991 668.807 134.439 671.914 137.125 674.558 cv
185.3 626.383 li
186.183 619.833 183.885 614.68 183.726 614.335 cv
cp
f
175.347 553.018 mo
165.346 553.018 160.713 559.21 158.841 562.904 cv
156.209 563.828 151.84 566.609 148.438 574.995 cv
147.703 576.803 147.013 578.868 146.397 581.237 cv
146.01 582.717 145.652 584.311 145.33 586.034 cv
145.33 586.034 144.375 587.044 143.098 588.753 cv
178.636 553.215 li
177.622 553.091 176.533 553.018 175.347 553.018 cv
cp
f
.6365 .679835 0 0 cmyk
%%IncludeResource: font CooperHewitt-Medium
/RSUQAY+CooperHewitt-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B /C /.notdef /E /F 2{/.notdef}rp /I 2{/.notdef}rp /L /M /N /.notdef /P /Q /R /S /T /U /V 169{/.notdef}rp]RSUQAY+CooperHewitt-Medium nfRSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf142.627 735.423 mo(FAUCIBUS)[10.7734 13.3623 14.1953 13.8232 5.44141 13.208 14.1963 0 ]xsh461.578 628.271 mo
464.11 619.358 457.511 612.719 457.511 612.719 cv
463.738 600.151 450.351 586.034 450.351 586.034 cv
450.028 584.311 449.67 582.717 449.283 581.237 cv
448.667 578.864 447.972 576.793 447.237 574.98 cv
443.836 566.604 439.476 563.823 436.839 562.904 cv
434.967 559.21 430.339 553.018 420.334 553.018 cv
405.775 553.018 404.479 563.133 409.191 565.188 cv
409.712 565.417 410.224 565.541 410.735 565.581 cv
406.927 565.62 404.652 575.075 407.91 582.344 cv
407.91 582.344 407.91 582.344 407.91 582.349 cv
407.806 582.702 404.086 595.95 409.941 604.148 cv
410.159 604.188 li
410.05 604.779 409.98 605.409 409.956 606.085 cv
409.816 609.675 410.73 612.346 411.972 614.303 cv
411.934 614.384 411.023 616.356 410.512 619.384 cv
431.188 598.708 li
427.439 594.959 li
439.281 591.786 li
436.109 603.629 li
432.359 599.88 li
410.213 622.026 li
410.123 623.598 410.178 625.334 410.494 627.168 cv
443.663 627.168 li
443.663 621.866 li
454.28 627.997 li
443.663 634.128 li
443.663 628.825 li
410.65 628.825 li
410.345 629.285 409.585 630.522 408.757 632.511 cv
432.359 656.114 li
436.109 652.364 li
439.281 664.207 li
427.439 661.034 li
431.188 657.285 li
408.111 634.208 li
407.745 635.252 407.387 636.431 407.071 637.76 cv
405.516 644.295 404.96 654.246 409.405 667.365 cv
409.409 667.37 li
407.746 670.662 406.519 675.295 408.257 680.667 cv
408.257 680.667 402.885 689.531 409.255 698.221 cv
410.149 701.463 412.726 704.09 419.261 702.496 cv
421.014 702.069 422.697 701.289 424.291 700.247 cv
439.128 699.417 442.669 690.996 442.669 690.996 cv
447.331 689.655 450.713 687.192 453.161 684.377 cv
453.166 684.377 453.166 684.377 453.166 684.377 cv
455.897 681.244 457.471 677.678 458.375 674.749 cv
461.761 671.511 463.246 667.539 463.792 663.904 cv
464.651 658.223 463.221 653.352 463.221 653.352 cv
468.38 637.129 461.578 628.271 461.578 628.271 cv
cp
.0280766 .412024 .900664 0 cmyk
f
378.704 661.034 mo
366.861 664.207 li
370.033 652.364 li
373.783 656.114 li
398.475 631.42 li
397.843 630.062 397.306 629.194 397.061 628.825 cv
362.479 628.825 li
362.479 634.128 li
351.862 627.997 li
362.479 621.866 li
362.479 627.168 li
397.216 627.168 li
397.429 625.934 397.515 624.75 397.527 623.624 cv
373.783 599.879 li
370.033 603.629 li
366.861 591.786 li
378.704 594.959 li
374.955 598.708 li
397.428 621.182 li
397.046 617.08 395.734 614.298 395.734 614.298 cv
396.98 612.346 397.889 609.675 397.755 606.085 cv
397.73 605.409 397.661 604.784 397.552 604.193 cv
397.765 604.148 li
403.704 595.841 399.801 582.344 399.801 582.344 cv
403.053 575.07 400.784 565.62 396.976 565.581 cv
397.482 565.541 397.999 565.417 398.52 565.188 cv
403.227 563.133 401.936 553.018 387.372 553.018 cv
377.372 553.018 372.739 559.21 370.867 562.904 cv
368.235 563.828 363.865 566.608 360.464 574.995 cv
359.729 576.803 359.039 578.868 358.423 581.237 cv
358.036 582.717 357.678 584.311 357.355 586.034 cv
357.355 586.034 343.968 600.151 350.2 612.719 cv
350.2 612.719 343.596 619.358 346.128 628.271 cv
346.128 628.271 339.325 637.129 344.49 653.352 cv
344.49 653.352 344.49 653.352 344.49 653.357 cv
344.435 653.551 343.079 658.337 343.914 663.904 cv
344.46 667.543 345.945 671.516 349.336 674.754 cv
350.24 677.683 351.819 681.248 354.545 684.377 cv
356.998 687.192 360.374 689.655 365.037 690.996 cv
365.037 690.996 368.578 699.417 383.42 700.247 cv
385.019 701.289 386.697 702.069 388.45 702.496 cv
394.984 704.09 397.562 701.463 398.455 698.221 cv
404.826 689.531 399.454 680.667 399.454 680.667 cv
401.191 675.295 399.965 670.657 398.301 667.365 cv
402.746 654.241 402.194 644.29 400.64 637.76 cv
400.202 635.919 399.685 634.353 399.177 633.062 cv
374.955 657.285 li
378.704 661.034 li
cp
.67126 0 .361639 0 cmyk
f
.0280766 .412024 .900664 0 cmyk
%%IncludeResource: font CooperHewitt-Medium
/RSUQAY+CooperHewitt-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /M /N /.notdef /P /Q /R /S /T /U /V 169{/.notdef}rp]RSUQAY+CooperHewitt-Medium nfRSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf360.598 735.423 mo(GRAVIDA)[14.3721 12.9014 12.6162 13.625 5.44141 13.9326 0 ]xsh635.745 573.942 mo
635.745 585.315 li
635.745 587.676 634.026 589.638 631.775 590.028 cv
631.798 594.185 li
623.186 589.274 li
631.744 584.27 li
631.766 588.326 li
633.099 587.967 634.087 586.76 634.087 585.315 cv
634.087 573.942 li
634.087 571.302 636.235 569.154 638.875 569.154 cv
649.158 569.154 li
646.482 565.195 643.702 563.563 641.81 562.904 cv
639.938 559.21 635.31 553.018 625.304 553.018 cv
610.745 553.018 609.449 563.133 614.161 565.188 cv
614.683 565.417 615.194 565.541 615.706 565.581 cv
611.897 565.62 609.623 575.075 612.88 582.344 cv
612.88 582.344 612.88 582.344 612.88 582.349 cv
612.776 582.702 609.057 595.95 614.911 604.148 cv
615.13 604.188 li
615.021 604.779 614.951 605.409 614.926 606.085 cv
614.787 609.675 615.701 612.346 616.942 614.303 cv
616.908 614.376 616.173 615.965 615.652 618.471 cv
628.977 618.471 li
631.88 618.471 634.609 617.34 636.662 615.288 cv
646.29 605.659 li
643.37 602.74 li
652.946 600.174 li
650.381 609.751 li
647.461 606.831 li
637.834 616.459 li
635.468 618.825 632.323 620.128 628.977 620.128 cv
615.371 620.128 li
615.043 622.515 614.993 625.451 615.765 628.613 cv
615.765 628.613 613.476 631.727 612.041 637.76 cv
610.669 643.529 610.081 651.965 613.018 662.888 cv
626.908 662.888 li
628.921 662.888 630.558 661.25 630.558 659.237 cv
630.558 648.21 li
630.558 645.283 632.939 642.902 635.866 642.902 cv
643.126 642.902 li
643.126 638.773 li
651.711 643.731 li
643.126 648.688 li
643.126 644.559 li
635.866 644.559 li
633.853 644.559 632.215 646.197 632.215 648.21 cv
632.215 659.237 li
632.215 662.164 629.834 664.545 626.908 664.545 cv
613.487 664.545 li
613.76 665.47 614.05 666.406 614.375 667.365 cv
614.38 667.37 li
612.717 670.662 611.49 675.295 613.228 680.667 cv
613.228 680.667 607.855 689.531 614.226 698.221 cv
615.12 701.463 617.697 704.09 624.232 702.496 cv
625.984 702.069 627.668 701.289 629.262 700.247 cv
644.099 699.417 647.639 690.996 647.639 690.996 cv
649.48 690.467 651.114 689.758 652.577 688.926 cv
642.879 679.229 li
639.96 682.148 li
637.394 672.572 li
646.971 675.137 li
644.051 678.057 li
654.019 688.025 li
655.617 686.938 656.982 685.699 658.132 684.377 cv
658.136 684.377 658.136 684.377 658.136 684.377 cv
660.867 681.244 662.442 677.678 663.345 674.749 cv
666.732 671.511 668.217 667.539 668.763 663.904 cv
669.622 658.223 668.192 653.352 668.192 653.352 cv
673.351 637.129 666.548 628.271 666.548 628.271 cv
669.081 619.358 662.481 612.719 662.481 612.719 cv
668.708 600.151 655.321 586.034 655.321 586.034 cv
654.998 584.311 654.641 582.717 654.253 581.237 cv
653.638 578.864 652.943 576.793 652.208 574.98 cv
651.566 573.399 650.89 572.019 650.197 570.811 cv
638.875 570.811 li
637.149 570.811 635.745 572.216 635.745 573.942 cv
cp
.742916 .757748 0 0 cmyk
f
590.788 683.74 mo
569.496 683.74 li
566.954 683.74 564.886 681.672 564.886 679.13 cv
564.886 655.854 li
560.757 655.854 li
565.715 647.269 li
570.672 655.854 li
566.543 655.854 li
566.543 679.13 li
566.543 680.758 567.868 682.083 569.496 682.083 cv
590.788 682.083 li
592.904 682.083 594.895 682.907 596.392 684.405 cv
605.753 693.765 li
608.1 686.743 604.424 680.667 604.424 680.667 cv
606.162 675.295 604.935 670.657 603.272 667.365 cv
607.716 654.241 607.165 644.29 605.611 637.76 cv
604.176 631.727 601.887 628.613 601.887 628.613 cv
603.793 620.798 600.705 614.298 600.705 614.298 cv
601.951 612.346 602.86 609.675 602.726 606.085 cv
602.701 605.409 602.631 604.784 602.522 604.193 cv
602.736 604.148 li
608.674 595.841 604.772 582.344 604.772 582.344 cv
608.024 575.07 605.755 565.62 601.946 565.581 cv
602.453 565.541 602.969 565.417 603.49 565.188 cv
608.198 563.133 606.907 553.018 592.343 553.018 cv
582.342 553.018 577.709 559.21 575.837 562.904 cv
573.206 563.828 568.836 566.608 565.434 574.995 cv
564.699 576.803 564.009 578.868 563.393 581.237 cv
563.006 582.717 562.649 584.311 562.326 586.034 cv
562.326 586.034 554.296 594.509 553.574 604.171 cv
574.263 604.171 li
578.362 604.171 581.698 600.835 581.698 596.735 cv
581.698 582.134 li
577.569 582.134 li
582.526 573.549 li
587.484 582.134 li
583.355 582.134 li
583.355 596.735 li
583.355 601.749 579.276 605.828 574.263 605.828 cv
553.526 605.828 li
553.563 608.114 554.041 610.441 555.171 612.719 cv
555.171 612.719 549.505 618.422 550.688 626.35 cv
571.491 626.35 li
578.032 626.35 583.355 631.673 583.355 638.214 cv
583.355 665.43 li
587.484 665.43 li
582.526 674.015 li
577.569 665.43 li
581.698 665.43 li
581.698 638.214 li
581.698 632.586 577.119 628.008 571.491 628.008 cv
551.032 628.008 li
551.055 628.096 551.074 628.182 551.099 628.271 cv
551.099 628.271 544.296 637.129 549.46 653.352 cv
549.46 653.352 549.46 653.352 549.46 653.357 cv
549.405 653.551 548.05 658.337 548.884 663.904 cv
549.43 667.543 550.915 671.516 554.307 674.754 cv
555.21 677.683 556.789 681.248 559.515 684.377 cv
561.968 687.192 565.345 689.655 570.008 690.996 cv
570.008 690.996 573.548 699.417 588.39 700.247 cv
589.989 701.289 591.667 702.069 593.42 702.496 cv
599.955 704.09 602.532 701.463 603.426 698.221 cv
604.108 697.291 604.648 696.36 605.081 695.437 cv
595.221 685.576 li
594.036 684.392 592.462 683.74 590.788 683.74 cv
cp
f
RSUQAY+CooperHewitt-Medium*1 [21.9415 0 0 -21.9415 0 0 ]msf552.206 735.423 mo(ADIPISCING)[13.625 14.1963 5.44141 12.8574 5.44141 13.4053 13.8232 5.44141 14.6348 0 ]xsh.253239 .186069 .211704 0 cmyk
%%IncludeResource: font CooperHewitt-Light
/RSUQAZ+CooperHewitt-Light /CooperHewitt-Light findfont ct_VMDictPut/RSUQAZ+CooperHewitt-Light*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B /C 3{/.notdef}rp /G /H 3{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S /T 4{/.notdef}rp /Y 166{/.notdef}rp]RSUQAZ+CooperHewitt-Light nfRSUQAZ+CooperHewitt-Light*1 [22.139 0 0 -22.139 0 0 ]msf254.95 49.4106 mo(ABS)sh293.914 49.4106 mo(TRACT PSYCHOLOGY LOGO)[11.0698 12.3975 13.0181 13.1724 11.0698 4.42773 12.1318 13.062 11.8228 13.438 13.9473 14.1689 10.2505 14.1689 13.8589 12.3975 4.42773 10.2505 14.1689 14.124 0 ]xsh244.32 60.7029 mo
556.086 60.7029 li
556.086 22.3694 li
244.32 22.3694 li
244.32 60.7029 li
cp
557.086 61.7029 mo
243.32 61.7029 li
243.32 21.3694 li
557.086 21.3694 li
557.086 61.7029 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/RSUQAZ+CooperHewitt-Light*1 uf/RSUQAY+CooperHewitt-Medium*1 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (FR-ABSTRACT PSYCHOLOGY LOGO-3 up-02.eps)%%CreationDate: 12/21/16 3:24 PM%%Canvassize: 16383%AI9_DataStream%Gb"+`kBc,IfA@$V&!YG19lD3I&g.a#3\b$X_:Z[a1HY3g^%P6b%@D%=1C7UFI>38(ku=3#=k;mPm$-a3bTOb$'2f))T\:I&E&I')%JIe#PT;/D3^Y6]d&,L:u&9HbnT,Y3Chu)?()KWDB<tOtTSgh*0*KuFYiRfd)o1>6[3Bj66rZW2%M&:b)K_h:9C%eGc5ni(:X@n:Z%"PArM-R>$'Io:l+02dFr!8:PA0:0a$2''m:hN29/m!W8pGi%3#:c+SK\M58+ESQ,]Mn#gYQr8%pAif@A>Y'kO4n,bhN<j:gJ.`+m%I#"'emJIf+WKDc4p]W>OA*B,Qqgt=Gi2X]`$2O[\0o+'s`.K-'"U!AlQQV$0]RI9QYt>KS?Jl*?@[Ul8"I3IE@tGYNT`ZnUaT/SQ%NJ[DqjEO!)!\&s5F*Q5Y%gN'TIn4DW[A[BXK5UJe?n>)-#empi((2"C5:H)88=^u^*m'8_MK;+Dq@0CD4W]C_r"SU!V_lLQ(^c/9%#;66LDO&iq8V`sF8c:G%JXD,i`tt@WK0$gX8-.or92?]A!'rCH5T3)N(C:i!/HR=r8>aZj&XImL:[M*@5UFs*+:.TQo73G61qqe@%FpI.@n_'g"/0"d&0cSm9pB14kJ4.R#25$=u(\7Vj"b!,HZQ.M"Lt_;q#K.-@K-MN9(S(F;OTfh7!m+!7!%O9ca]&IcP\L27Rcu-O%0k<KZIO0M"0L1P0Fs,Y2In+]JpZY*=W,`-6mo*70Gq^".We3LuJ0TN)C>9PC`d8EAJNLM#c@O`qA/D1.9bYf/d@CW?o0r_+:--S)%Ah%G'hLcB/&83mJdA8gq)1@tOa%7i9M#@W:G]u&*M0c1lUtCrsFX?3V.<0T)CdZ=u;"HRR)IDN9`O;l#QBejhkA=?6Q)WDX.Q3hM%R];n,H.sAp(m(8o#7r.PB,C'laU9@a6Rm>d$T68`RF3o@3%"h63A;=36'!b:oK"he&r5Tu(p2ufZBJW8ZnkH2DgNb"WD4%\3B.8]%$9b]`N2N4XSgO6+C49k`:\c`a9G`\#It*T>F$*aAXBKBuqoa#n4pct<(_V9>'7>!r_]Q2h"Lp'MJ"Mld,dPJiA=V^F?()V*Y<]^u%/jY+"o3Qi!M(*$WN<-8F1c].ORd:E??QpkJNMe+bEdg>s8S;9B7U/hLktg$T660K\!$s!Q7XpLD!u@XtB0X<hdBCN3nR@RU5sY[B%1MtG/qt[]b7u.dP:H92!MIt!NDtFDHVfMJ[5d7%*!4!:5%#XF<"[TG#bd.eqPB-lS&("8mZ;VgCLrpU%WG#K/4YCJ=HB)66A5-CC%SsQKnIblJ+2CaWEb-LPLFI0r^%C&>h5"n>VeUs%EH-.T%/IGr\F?-;g^u1u"6l/Q'ECu-F>3-`!R/t,ua##Lc^cZ-FEocR"TV&6U%7Y]E>h6-@bF+i%%i25^2OI8]s>o#mB+a&.f2fE`gO3S1DSK%E_p:UAI!X&.9#"fp)YoU.LCI3IY2).;I(c/6;-XLt6lE19'8)/km%AdF&-DC5uCq*$*<nAFFbQp-n__Cq=>J0IAjJ;ko_W0He,$4l(A<WH>M:^#ULqL'_6G`9KFkCd>ldk7k8'Gs\t2OT:`dTIWT"%'-,%K3foZ>]AQ#nY"c29L+A_,V4NJB8WKNf]L%6dUWGLi]"sf8@?Wn_8\=!IdPjmEJLCF:@YOKCIQ[b,-TaOpD'?"d,V*C-Lad'?(n1S%<gI6nP<@<,<@5X%FVC-M@!-p^4a"=,#(Dri-5:!ilX2>t!Pn/L)[AZ'bWCR^Y*UB`i_@c5rLEiBh`F:#6$Tp'/m_7.5=c^6HuWG.%[su$t9eZ^J7b?h@'e/(F.g08+@R/S-'^cZo#Qg>!oNFIkkcB`WUOhd_IR$?[:0%Tbf7;`VA@^)-@%IQ@$c?)4ErZs.4_eh%$Jj\+%\C/oW20+B^L*4qF/r#u/+T>Vb)00&r[\*OE!W3iC#,n[c_+ja!]$@VRI-_=:kA]MVcn3mk5KI"EL5jt8BZmmIJ>C@Y#,?c20P*_<%aZ:]H_($^l0o17<'\9qC-90rGWPB&S2oUgoU6f/b5f_<LakABZoI@+c&q`K?""*:KUU7@%m3_q3J!'$_S<f7-i$1O:Wif&FJR$De%G!(<j%!?DX9LqRfXCZ64TGKY#\R2YspGjdH#I.8q?Y*t+$o%sX8eM1KQrTM7%fY;_<)$B!*#JPN"b'^/05ods:QV6L9BsQ19\k=q%X"(a=*P`XY091Z!1^I"#JD[OOK?Gls^k$boo#o#6bCQ<2L]tHTZ>>USQPY9..X`8sKgLY`nM.lY;MX2,]2Gnr:T6]r'DRkh[;f!8%D,uDmDt>pmF*MZUXL<\W@IOf#?WJVTDFeRd&Fr*ljpuc,FM.U'$^'_o?/ULq#;>*[l#qE$%NO7=Rfrn3GR\cfq)nXZ=-'pCd22EZ%V3YG+!-JfCoX\:Fhca(t#%4+<&;o3W'Nl4@G[OfFL'kHSp\Q-#A[M!#1k<d<#K440d^Ze?TGB3W^%`!\+7<DR!7@?:obED$^IntE%;+#n,0BqXioGe8m<Z%:Y$q5eW<6k;@J/cGnL@(,mlOqWMDZHU5)2#<%8(muI*7Y'm$4h+]FE>AmMs_.P,ok%Bq_#94%q;:/4np2u%Jhu,X1>s(I2liJYL&u?P=VG2_ZJ>'W5u5J.5H15.gt`fBA(VQi,.4j"1IXYD-:*M\RPk+eRZpbC9//09NgbuX'[uTu(XU!mN(R..%=%ZL8c$r^Q<D;=KT2-glSo;[6acL2r8nk)IT]I5`?lPR:N/tqO$<+)`"W:(%<6>BLX$REEi-YQ*9'P;*IS)+LQ*]VF:6S="6-OFU%mL$lC;Ya"NGPQX@#sqXg[)$3d#1g24`[^]g/%n-;6ADTK'ZaC@;TY]bE&g\(#abB9Ys;M!_06Hrg%rg\!*NB::)8ZS&B6(jWQ%]D%/t!HT0T(8[UKBhso*)/'&&/8oYXT'PB8YqVF?"%4:,.)HkE:X+?T<=-?%PS3$Dhh,Dr?2@18QBY;e05U5,WqO8's=#4B=Mg.H%J-%J=cd]$Ac,U&G-E)n`M1eaHJm.ML'S?T].`N3<q\0JEIpAS-,@(^iL!q5@a83],^;?MG>H&[(F%F(3g*2a.3Hej=!=n+R.UAkcmAP%gT+jo=FbG2mh-<_c6RY.QQgoUBY3a7Of5qAV\@[UVgH).+%Z@E-pkuf;kBlm-F&oW@goRVX'JN3SaUu\TiY!FE\lVM$9NaY>WHu&%`qK9l.I<ZEV`Xe!Lr.W1pG@g[iU4Q8HK+V\E,UUYpHZK,jjci"or%,Ii]R_JPj8ugZIU<3Tk^RUfgu#K>2UVWjlr?sFF'cl`;r#q%InCAZP%Alh@$Hk`hXLsh5S'\HrQg..a:D+Xk]f^f$HPHJInH.$>;93.ImkuL+%"/5f*/elOE+`;i/9pa$;3*?nW3h$hl0V=2/1&G%V&87bU8%frd]n/On%%BGTd%k"lOLt;H)Hr\I:,(s=DWRuD_]rZq8q[uRst@b^1'G&e5YL^G`Ff$*\!`SUT^'WapE&<-cGsp-Ma,_%f+T,M%*,0:S>&sQU'HH7a6l6-8jI$1S6b?-(OA,fo\l(rK?_OTag4BU!toYFoKo9>VqO'Fakt"r]^b43`)ue[j3\0L4?A"i@kTMc%-KM]2*W<I=5=r.3S`!'0\)Prbn$p+>G:7pO*M,_[<A*34o@'WR*d;)IUYn_lh_?Q[/>?'G$s'NP4ln`&d&?l5d$3W=6[6DS@P<*k%C!/HBDJ,G^oJZ*k4o;2UBqM_+qh2oP]56Oki$#Dd2J!oJb;q",it$M#j92@XWG^VlY%IkWTOGl)qj#3h-SkQ6Dl>k5ZOR\ml?q1!%2B#ZB3]PjHFt0*JPYZ/KZV*`aBSS`lnPp*(r!/e@naH)5.+Y\&ENmS73nT7:1*or>94,da_([-?,AHe-+QY+^CE5Wh[7KgSj[Y/4%n+^J^-q3Y>Rcoq(Fb_8PEdBo`9RrfNY?d_dY(Wces/Xbci_*XD;N8C>&,Bh^O4d>N]0fV([Q>?SG1bK--P2,mYJsRM5*"%W*?^@e%T.8!UV`i!$;A9pK:<!blVW]\cJRb*rrI]8+odQ=nA>^.?"_)%F7PR%o[lYU+pTNc&W02B#FP8\eKt*#^lh)\$.Sf*Dbr^=P;]^g5%U5Zf(p_uVQ;BhHSIDOqc$qVjr8>&W&?22ut`T/U3*,kd]@$RWBlrOb(-cM1L<@^:395OM$8XNsj3oo4L&5-bd]MV_%A&l`_'l*[B%];"M]`%T(2!hkcBE!M(t@f%h$9F-@k+5gB'dPEANIJfX!E8EKoA9hMUgMNEW:=6&*7*aP![`)0P;[P]R_iB0=J%KPRb)](T]mV^"%(I]rTH$UEBPg?g;nP,poECOq)H5[`8rek[Ypc$K?^YQmIjV47EcC?i=S2\_5,d%*^`Yn]hZ>o",6[A#.q:fbV;,5N<7,fT-ETR7@%*;NS0ef/85heqJ5Ef*W2%fG93U=7fpF+>YL[38m&aqHt?n:1s^B47=uGpT@5Mnb%ffAc::Nf8q[gF74a:&D0kdPoq!Wk;S],)7Im%b>ZPJn_g4H19ho\T''qI'\PG&J(_Ob-N7i=cM$XAhbM>.V)`MR*57uggTd5,&h<2"\t,tXiR[B9]Uc1Zft*`VgNTuAnn"Ti@>j1'%bfD4[rf=/=T%#7KGnM,OM>[D88YhaKo-?@m,5K^QR+eTc,G7SNomj`+Z6#VZQMn:!m8TeY+mB>.r+[>I4Q\T/K,cm`pDmFX>%c8[%9TSO=bhcEqb4gK^84#ifE4U_(`tpjlG!:!1"OGk#kR1/a^`@k*O5*T)j!c"YK.B1Aja9nL[lrL-Z^":FLL$8cpOZ17%K;'tGORO"%DQ*U3o-dt/[N'[Vc*;q"hsd2"T:7-Vp(lQg?6=YHNscpodsq"@JRb"eOdguOq#-mdS'tJL48K3Zg$saW5oO""mP.sr^s%4hBh6N_%4?^<L\;3,u;kK5p"#g,U<'i;_HPWdFKQt3TelGJ#nu4kMMOCZ<O?L4ljFk$=`.T/C%ja2-(lh0R\Z7_R?[?)iF@r.smiP'q%:&/^%/:W%<[-+=u5Cge"rV=,*HsV<Z[/PI*R>^8$kO\QAH2[QOrd6,.s,m!;n,'tgoD8'(rV=q,6K'7rJTbJ\K0moURe-(#>E6<\G$]5R%Y;r6,S3LWe5h)4U6-%#!p%`]@qaJpiqbnql1c6*Wi4cl4%j+eFibGs_?,>c&rVi$/P:Qe["@fr,=R5_WObI7#5NV_a-Tb!nQTH4s%8N_$C/?-d9o3)B^oo3<OHnN7+95s&,go&Z!PXct]3o&-6iQa)-hG;D,%ehp1T(%7T8L=k?9/6p'*&V-A5:DgEKeQ$j_CS22qpsHH%"hN$g('2B#;rT_nSdKi$/gr[KZhC#oNBY<<OYliQ:k;Bmj3+Ge.10Y*7HgqiGje<u9N-gHk\th]!*H+:?`c??1/=X2_,&-)88Pf^%GU2:tQ\Q;+Tu;V:Mh^O<O*R`saJT!*J8G#`<%^5'M`Ks0cFK<`0'4^IFtVpIM`Ks0cFK>60olN32e"L3WpHCIcFK<`gpud^R.G6R%3FCa<^Y?Ju,H=GfUcdm`92cq2"rqu@j#`m[n]dXTrleQq(KmdP5+Y.;)%,Qe3KB)\,<qbe3?^nA4NFpY3Q_"ZTB":(O%8Y-BhG<8%e@tMQfnFm+$U(,$F_i]&I)=F=\^3^gf@bM"V>'ma_;J9TkkSbiDfrA9_.#R"C@qTi^(uKBF/mc?lfb8#OQ`r6s4cu_qM#4k-pG];%HuQoA"UM%)YeT2LJbBemN>=DMF;7_La<('u-fgmET.@s"eC]5B-NuIc33mai\NVl$:e$]KVfIHO$hkSf$caH]cWOO6*P%](\0Ff/%E"AgIWi&(\h>s,+Ut2/FAp,]&BLj2M-YqT:dqQ,J?H"`M%iE&*?9ElRjUpNS"H<B&o#H7Vf^!HXrpZK%+/bP%S9F]Qn6O0YapC(p%5>E=g4uFj0/q9D7+3.pDcfL4/q;\9n+9/Sk:*:&!jRjNl\3<E)"bOHs.HUH+`Qeg%4G3:JFERW?NhOdr6ue(Bq]57F9ZL_;Sj*^0%.U:iloCl?K'VFa@+a>c[Omc53kpk$D<dK0TJIG`r.&"8NkUj!$^t*Xc5!X]mI?&Q`SIa15T>,J3J*D@[d_De;.JEo,j-OqPpP$X@%@1L7pHP0HBJM[0,UjT4qUm)*oI?#<upL'rik<G4'=m&>(8N#bje!0i(-)j)i3`?sLiY*k#*Y>h&H,b1proN1$h0i-Lp]F<iS]e6!%9-iD4(YSm(S]WQAjV/a0*]2u#S9LVHcf2nf=D@4a+5hK!@0d3m[aSEqJ5gs+_S>*T6)RfYa3KBgp(%u=^F5=0jW*b$UN+Q\cWT0J%SiZ$cn=0ZRZbUVtGg6B*,R[QkJpt`kn@NRKqi5rpi\N>b0+V#Ug,TU)Vh)lr1X9^m3=Yo(;s0YTro'ZpqsDhI""63q1sh84QUL<S%9$XEonYCagQL,,@6Fk/7Nd9QlI%?&PXQ"UW`GoFu#FuoT,&cj1m1VD'#E8'pjF"ha^C2q_s+H@bU%#\IZp/_?aCeSdBb9Te05V5B%BVIQqX2R`uK]l=NYL!<887)'[.kcNJXZuirbX5]5Ik$ZI+JMVB:1^(BT&,\m9GU.dO1o8Wo\UX2FR1Y7qYh'0O&!nmIRfTG_XBEG%n:b#Q/oa.\Yghjb(%18SJB.V&klpR""b&^+iG,jJ0;U0o#K<%,-<Z'>LjeaWPNR\$rBC7TAAs\tPj8ugnh;(imW?a+rrjtZ^6eRn%*7pmf)udS7_Vf=NF-65lNMd"47F'Y;\p/X\O/!n5nDg1i\u`rMdtM&U=.X$r=$j#'L"oMpO@A-CFBUq%ZjT;O"?=*ImlqC,SYLrR%M&nkM?K+n?+;>(F1EIMUV6>+@JnI.TV)&"qKOr48:q>e7Nh4PDe)-(TcG@t:$_D+]<'K.%kl^qMfNn"@>W2AIc.9q=IAccoO8hOH%IC,oK9HLG&k<I@iR#jK.%HN1eNg^O@1Oo$3'43aCHVOa-'B9!HZi&'kl4P'_%*.E0Dj<:.:O6\#r91gB9aMPdg6[A^?0E*7:uulg%lp?abW&\l7Wgo.qGG0e\YI"!$9(2SLK#-,mINK)H3i2-59-oWY1A^<;s)^["p[C.*[J6mP+FV/:bUYh]joebs^[8Z3c:@f8:jG7Z%kprk5QiKK&50)XsloVAiV#NB%RpT#b1A[kQ,A57s^]tjk=3H2ur;PMnVjn.C/6>_'!KYWII)@Z'>9AdoWK.+0d=aRJ,=UsV"2\P4%;oJZP%Mef(P1:r/<;uecK>5JKSEb)6#=gtuY&`E@,N-TiddaNY^i]uT=oC/%$i^EH0de*8@lG%1neWjL@K8"sRGu78:Mi^pFp.g3%r%?L0]0=>J...qP.*!NEJ`nMKnL;sM?#%@E,`)0V@7AG;5$rLFfTbW$:X>te4(WL.eX63JTl/Pi\p_9'iVsYQQMBI!.OZBjcU$/C%K&QULhfa!%gAd:ckLbEsmo_dKi8Zkr:cAtX4-H!.>WGq&&DE*[Vs,E;c*=M6@letn#5S?_^(uKb]Y[8_cf8+hc1L/%Z@\FUn4NS4%AL_'nF<6WO]UU)L'I1Ad\s^>q!V&p=Sq>9DHB4*/'^r:I;OuaCr(pZC(h,aNl8$rn3:=MY(2kN+R\g:`#E`3@=dF5_cY7U5iO0DB%1op!n'<."56CFea_JlJi4JBccB!k"E)%a?3nK4WU'+0hCJ:e^dohKX^JHG(-pH_`UHM0SYe`9\^%hKgE4LeJ,c,nr=+tCDf/>.12%/q4XB>6G%Ag*R]D\8TRP;<&LJrk\V?If\r0GR(Ie#*5A=<R(Z`raa@d@"M'lL1SjU%t%:@#-]/;V]%Fad,_83VCno'LWf",\V#FI%Gef+1i"m2iq_=/QI8:Dq+Y!0f554ul*MHZXkjB8^E=KXpJP/3.am,&cnJP:"^u`0XC3\?/3RQ-"0Fd2`PhV"rG7V,G[h%\X_rhO7%gg3Q@]N?ifnTDA?0!>LX&/<OjHYE9MTS^2\R,<tSfnHsZDF"^&q*_(a-)UOo?<>L+(_6*7Ms(B=TSqiJ*(i0J$i0o*a@Wj&(kA-p%0[,0P"?_.WMmUADn@6k>p&8N.#k#O_mr8MN+4<p!h\2*Y_&WfkTPD]\3ofsA_paOcn;Mu:kJnQ<-OMN)9Q0pq6rS+3``.j*16NT/%(ceE>a>#S%ScZGb*,p=ZRQtsb#E4`eGcJC>^;F>'p1tVd2",uV_"J7iRK1c)6O%k!&eeYOaV_%KF\4pt?"dWWbQ2(qNY#[jJ.Q[]%'rkf2"cfjsn)c0C8CUi44cNph#CX;L5+GW9T]+`&iIarq<\B`W:_(%$Prf-&T7bC>e6uWO8.bp.J@%QbhYSIZ[(s1CEkJb9#D/RF%4J*aQWBg-S[+LPF&0*Fe@>=o@[P^@Pd<MC-deuB!$L77J'7p6;PO,UqWKrP/bQ>OV"Y(BfM`t1T;lia)Y>GCd,iL;qM"fc']J,XH%Ngn#?L`Q4=E^DNE^<B,Q8UrPGV@(@==:Pp:0AWRh"#peD>@fqT3#n$37p7LsgR.J0O%b+=-!_6)fAPsuUm<bJ!SPQ6Qsl&aT2NGe%l_/B)1+_6c->c=AA4&q)>R`)['L/:J?fFl"Gu91A":*DP$Lu#b%u&"9GPU#8oYla#rM$Rkq`K<II@3)C@$OuGoj(h54bCqO4[N1?%XTFkCYZP?RN,D)`(J/3]SpRs)WBbu9@Dcr=M,PNSY"Q+Wd80D1PScJ\?-r]TSJ=&MP9e?DVNdal'($M>RYCo<g+MD>(Oguadm$C#%gd@NdXNs4LAP$]E*'$#4E6d[*gZ&gIa=VqQK.cd"pcZrYr5`,\F!S25G6a$=1miuHLdt2sfRb%La]ZuqkeEAoPr&@LfptGL[X6@k%E0Zg=_XhYH5C`G/rf70^Vk#IXE++20%=1,j[K7$ULgd"GpUc&!2ut$ZN!\GX*/4PDbXL"MYh?KG)F-#:QuS#iHuBj/!<uO8846=O%K45[*(N;+'`DJ>Q"0m'sO!7'Kj7Q%nRNAN&5;-usa??")2su-q<j/PRh0!n/>3J(YFRS+,NIZ<\_@JI=XqpaL^pp'np]El20*17P%^O,IRE!^Q_)&QoBeQIp':8!l<^jXGn!]\_'(V#\5T)j'9I/79;MO5(Hi@Zr$a=b-A+Gt4<GS!AJL)WWP!f'W7]E6"R1(P49U;,^/%DE'=8,&ul=CdR#88,n3u(OuMub(<DJJ-*I2"R?;?&49hImW4:ubQVeuiqn*gbR4J_Bcs#UNJ#,g!gkgi^J"hSG<o3"^%A(.ESi)q%GaF*Y+X=X]U)/G["G;N#W$LNsE&QM^aeOc%2TZEWg,);/5*E/1R!>\*CYW?436_EEMGhV6[gXnJRUWm-kf$t(Wm\AIZerQ)_I)k#%lhYOIjreU/kgU]&)ao>Z%DYW"JZC2p\rfeYl7rIZ8Tg1@kCJo44c:(*+;gZ2.+u^_<3KS]Vj1:rJg$6aU1d.!;%k+7ZYjq>-3YS.%(/P.:D&@r%$2=V:.#i!T%)i_Xjf#jPbT(cH20C"J(*Lcb/ko'i>o*9rJ(,Ir&BjQP&-"br?LGWA4E-b_*rn>uapnG+mn1)6N=LK\%^),Tcbt4(qe,K^75!124ackKj;U,1`\I"M%KOt3Z69d:WHXIW2^'M$i:1T=Rqf.-B*(3*m9q54B^k1c]%(7Y*PU<pr7ffa:1Hk<$%)Mg_ISd];JEra_s<Y3ogSFE1QRBYg@XNF-i&duk6YY[r>L>qtG=CA9H8IU1+,dM8PdHoOD'fU?+1MC:%<?hQ=`nUiN4&1%i3/9C7%`-IpgGU]g"*>^4k)b8SoO91lrQ;[_]&:\*c/Sc@&p9*L,IG8:?q">5Mj2:"B9-0`X]ZtG02d>X9A&9nt3`5<e.&I5?`>('30X4(S%2i%q?3@&PALQqG+1bpVg%:qPJ0Iqo)Q2S)7>5f]8s%DX$XmuL.VaR[%ZmnZ^J$1+nBqgB3.%]_.kne+i,d0;kJQMbQ9D8,P0Z4VY%]L5b-;GaBRIskYQcr5M9K$&;)V0r=+&UWOkSd%;OF\gg/#;EYc*13oYCnpYN>[()M@B&5;RUAOK0Bh+[eW?$PEO(q4=j+"FCS".:%,H-6X0poY1M3\e&f)'hHO`i-9guibIPMRr=eGZr%l_D%I#9Ef:+5]T55Dngj;>>WOpr):O"C-uenc/["WNSd"9F=/u`'aP?O5Rdk%6e@MO&PCPEel\r,LcW,PMD@8:!OhWF"+JS!P"V)cB,#X(gP1D?-UW!t3&@3RUg-)"^2791>W/b2lZMZ0=e4Z&gM/h[L,u^,"`$B=%DTM*<T"nC(2(A)D@))IpX][g;]=gA-D97]Uo9K]O,^X!kXgo!#>gM,Zmqg=j_FUdeWR#\po$b4OU:lngW)[;ei!rqaJE3N;?%/Dq%QTiM\h9E_jgaaQGg-7-'X[l/`b8!1rNWjI!E[9f%9(KKm?(8'MGX*,#>LXcSf#QIC5Z8)j(<Cu;>hTN!eo>KTmgUN<A0V_G5cG'Y%+s^N(_EACQJ]TI^.%\aYBmNh)P]k`1]975<NE_a>9oYriKE1ia=eKuCTZ!W&RiKniD'&,OaJ\)NjgWW\,7&E<!8>:??JJF(8T`8Q%TK4;UKgacm$!>MR(WdaE]hb)kj]`A\<]u"#5T<4h)7P%D*8I7*1-&K6\T\8%B:h*o%,a2U?UA?J(>SJ]CXWSpEoGP^!F/p%Xh%&u%c>_%VCkn[ajCCmSns(hq.?^_#F#_?elg.#_ch(<`Hdm/=Y*(n?:Se6leZD7?6!QQ[\-'kEF>=LIODY6)'FF%nM%X1"((.N=nj@O7%/Rh9jT4H;\;eN("Gq)Lb_O`s7A;Q45Egjt<66&(DF!MpsF^37"=(Y.AL#Hd]Isn.\[Q:]&5h^?\,.NcRd5WLq=G#k<2]SnBj3_--%i`56#c\8?,F=i,N-0[Hp(#b$&"?lfBo5QD)5J#4u)MOaO($3X11PDT9jI>gEB\#L^"gE^6>Z6V+_$m3ZJ5fV&a`Oh+oPjISYYgGu%[Q=QQ5s9a6m;#FKl3T0G.`PEI.4ncX`FZK1R.5P&Ep@4K\_[O8k0ChP\NI%1p80Hmg"Zo$D9L2+^qQ*B"BKZlm@1)pK]r)0=>D5u%d>@pLi3Qt##_D>:.*"qU?r^8:00k5\S+Lr3*M3]*I*QSb3]8a6YT33#Cs.sAj=De`"XZ36ddOsl>LFk<7;)gZ']:dQ'7tk7.g+-t%%qruO<HC3jo6DYfTI3mFa0-Fe>VoZ(J\)CS\2rH@"@??cS4uLt^c_oce*nX!r#kcg0+UEQc1e6?#]k,=gCiI&iWiTfduBgCjD9;8%E=aLZ2"2><:,s!;Cohk5REl,N.2!O5GZ1BbUo2&OFeZ"KO%.qSB/pb:B*^YERAfdO\tV96UX=$49OmSQWj,A\-3U;Al03DbHp8W`%%,'Y$p[?uXNVPH.d9)?2NQ-(B<TsVB@_2JanK3:UEQ,HB4:])1E:@L'mXH;)i/@RMHtWW87#]>6HjiAeh]$>p^RN%UUCmGu^NT5#%n7NU:9Xk2`/,6G%2Qf8d6h"_)rJUu!h%T:sUkN;Kido6V++,kO_Okt95&58YD;`#02UYX4qU(9AI'_YEhWZ<)f:DCY6I_KF<:)gC%@`QmP9TnJniQh`+BhuK5hbESJ!Bu+lKPT6!cqd&&&7FYlNYhFGao:nnDr61c1/)oWQo5UL:#c_-n]Kid3:2uUrLMPQdKtg>nCmN)%mTbDd;gi.NT.3Oj08O1qR;S921#Eo$BnicihHb/u/fmC4CD3oNrb\$-E&"!RRMttdpA5(r>%:>fLZ>=U-4c@_INf@kiALIpn1:=>%nY5C<"UA/)dm?6&gZTjF%5(ui16$u(E-Xjrg1iuO3or90PHQUCocn<Fgt&V0m\_!/Sk\!)<9)NcPp)95l9#V"P@O+]@SK9]QY?PK%B?;KlI'8B(W+V%%hbsiL.P4+A"$M:sb/j#h7dok%4.'V(R=*]N.s.7Pl7s0]VFs??p3tQb>LUR8NR*#-mJd+P**j@;eu6C[,n;Z]%Tm4ftA!5?7#@+]er"O:L8H-c(IctDWZ-^bMaB@_24oXsrhH7Uk'[H<\Ek6nVVX_O:Xq)fRAkgp1[u[M905jhS'6K1V-YT]tj7bY2%^,sV_o=/oWI"p*;H[?2E(YO%MWYntRBidM<a#UahQ8EdE!P:^glJ%rdWC3^">ns=ebMPjGIqs.<gof$b]46i/Q[@1p;CrF+=Y?]$%>[7^K:TYlmZfP>j1#Ld"CFl0P"mJ"0.qg*N=OT)(V9>7Y!;>1!ZI@AAD]T&>/N_I!NBs<s4GPaS>O"\!iNdV`H9[e.L<Hk=ke8d)%AMp>8qGC`tf3"$/&9_`g\(ZMTepM1Hlqck)NMBuBCRbLl;M0rZ[i1e2P8^o*\Bqa`%A1XULg4_C2Vj;2O1.,D+BEMuJf.?Z'5D2e%1uU'7MG/)*B_aO5k]L$Le[ul8@LR/),XRf]-MaTUCXNFT6BeC]a##gTj@POg:NW%WI2^]O$%6$!F(I4E.L'6dF5)OMRTdGdd58)>%L8HtZdq\;Q>?^XF^)R2&:Nm8_k2hnXd_+/E2GL)PX_E**P7(+"(G0BV/0S[r"tZYiL[O%WCtXs$]Q[TK)StRYBf10FWmsfV-*8>a%1MBM#]8"n*]Y_%!?N7%E8jleI`_0g,?L*"I?#'O$7[#_M@\0r(,8&>C\GLJeE`fGX1G8om2ZK;F[Df%K=^1<Z4PD95b@hh]Z`_!^%^c5,0>,uMl1i7)B$m>;^H'ah3J-![$ag6.g$02+$_:\8AZo.8<BCK.8F_7Z&db/EMS.9c##BX:)gStX3!'qEH%JP"MlJ$qDF`Uj>%j_@me=)<jKFd8k/O08J*C"M2,bXUE0E2(kp'nXnsKA'H%jsn$CoK&k<*9qc9HuPc2?hH(2[cHA`qN;k*@,\uWKic_??Nd"TmhaBg%7!"JaiPpeG4)Ve]=^0a@Wf=d+BK8E4M^N/DE^>A#Nu.am@<aMQjein.+m[Kj_UD/C?>m?c.I+$6j-(P!+W.mgLg0P7)adSs_"op:%G'H*uQO9'kIEh5:l0l$sSc4<a^$C#`PY_>1I]_f]rU/=2kn+thER_TX3"4i(_;j.%%A=..BS]N*P=fc7qO.RTl#+EVl3?">iSc]L%0b>2`0apVAUOc"E*/:HKgbKfCQJH4%STdP!o@[O\hhIb^M#uutk0(0(Z18UB1:AU[`:u).QAg7L^"#(pk1`@6'Y=G?cPX@FQlQ(_%S]M]?KhRhO!Pt#GK^VS\?klCYVIhMF4V:sums7kgd0\$0&eYAMfpEnoAnTOq1&HmJW;5_4GF5`*.Ge<LN-aWulX\3:b%_8q.U!'R%bjTYhCXK':XVQ]N;.oD^Vqs",3R>d0F'k#p>6@N#mTK,"d\2LFbD:InZj:LFd:tQMSuo-qgU;iXg5\&`MY4)1[M3RqQ0pU^U#ksu%[o1"M'spuU8oHMnFU=NfPJ=@km-LK!c"AG/\]a;TpWjS`Xo%BYgW#d]bH>FA,J.5'[G(R&He][WH#M@DFJ#s"]h`PClVjip+$$>g%qfM=X3NS(XP/Cqrd#Qat!h_L[9iK6_/4M637%o`ad+8]ne6]a3:4'D&E<^_MY;82`]f=1Y_<lV`>e`7L,'ogKQ'Vtm1;tK*]:g0P%='d)'>mhAfef:Jh=Qe9&`>ARkfB5jsPodtabYJ)AAffrW!\<4=f'gI;G`p%6>c$]5^Jf-=ldBHh7G0Nb.O8Bh?$@&SecjJZ^[&S3%1V1i1)WUO:bcgH1pU/t_p_29IkMSeQrDjm@4PEgR;s?G?+_gUS7f3J:ot=Ak\[,NH*qK;^p[ISYhJ4-7"E1O+f6XdFUu'jFQHe9h%I=QV#D&0n4@S'i#!r-QVQUs/P^3[3<p2t$^m<]B#)uQ!LO3\n)pG0OVAR>dgrasY;o(P,piob[8\!5%;5U;\c":E8(-h%ZVhZTlE%ln,.da':nH=f;H:L?9b+RiY%NYN,kSmt$9HA>/F06_TH>")QOg2KV_)-R#L=R8W:e(Bp6:H]m&U30c8iiHje")"+f7NF@CR=qSuS%o1!322_%]CG4Q:in77QlpE*]pm8s&(bG_7M^:YVDh91!5U2W-'p:@$-Ck7LNVE3&NRt;q.D*O88oV3(7@^r_uPG>2B%JP6MSeN\V%7)kP(i[.&Ijt(/9Z+/\.N7CUJ9rp8p:#_V.k>C#/4At]kmsYgd%9i`*RunO7N02Ll,'Z0i-OLNG9=uOU]#99f>#kEpj2U(R`a-Ps%Z6fk/aaPVl9O6FJHRXI?L/2*A*KJWjCD]iA?;%]5dh&A(M1ER8DEMXmC!&3FcPTl)Hm\2""uA4!W0->/"[8snR4kmQHf-3>2r=T`%fk5`BP^U$0\JuA9,]fpl2p0qce'Zt'64`XqH6J`<S'>mI`a^rqIg]l!C\-%uEucQLf'?Lfpj>5@P0nl\r5][,+'tB>OSK'2]qg=U%.DXaU0AEX_8meY;j-J]/q=muGj-jR/8gTXsH@p7'h@a8ANR^61hSaj,a.&ArGB5R#4Jg2\;C5XD]jS#6UNUB&^SaTAMJGcH.f$-C%Br*Do#e-8crq&+1@C<T+TLl?8htF09F4K?Q@+?e%S%mYc33T@BS&TTq8K&MTXL$W[]p-d*\jlR-XU",mOa8<a.b=nl^XKE/S%;)K%Yn1Y4e7,lrXr\WA]e>^sZS[W,RXIR"X^t8W4=Yb053Oq/%fsAP`V$"j4(%FOmB17_L$o5@;YT&EHJuV74Z>Frc]>6EK8-&q&#!G%%lCi)'Yn,m%\bM!TH-9^64a;8=]l]uEk0'pi.B03dSt8!,kd0F)@8Q3\_`+:7F5s]0HtM]Os2@A#F>%4M6iVl2>8h?KUQKHW9t7so%]c1-^c(=k*29FdOf9]"$93gO>:W-87fchJHPo;C%=)L+YC8K?mp6q6VBB`C-JK(;^dW]Ihrn(ciH(sK.%GlE??&\*/Ru_10F,bIe%b2l!BUm'bPhjo,_p<0SMBn+Wn\Hd#=4$P.F%.1leB/N'N/JB1+SE&an*cW1]Gqt/SgICCh@W%&GqL%m7](rhhPBHd])<<G@5m,p^%2,eMpLjtm*F<l8RT^Sd<3S*&HUZ5IP2BKWC1=qK4'JqRZ,Q>W'S_,6(o/d*K3p1Cc_bN$DEFEG7Uf)!C:0=RZ>,?]Z]LKU'XZW<=%1i<Q?`>m2uY&3]AH*b4,r*OPH-GWoFE_hC!q\2c);eT_OPot%,7oiGnDn8K19t5Vh\O'L5j!qkRf$!4qS$',%>BCag5BBeB;t4F/%^5clH0%P$5'JlJ/_9lPQP/C0d+jZ+sn>Q]d;FPt>]ND.r9aG?3i0KsjXe[^M1"Gg6G1_Wo4r`FEQ!mt`CUTujMmm4C=2/,AoY>LJ%g3STdN@>8jfjA^f>a5bZek#,T(aeZef5<t/SqqC>nLue-1tNV)c"'LGKS.&/20*E'/ei)3UF"5dW;'mS`OKX6T1QXe!Bj6k*JX*`%\(&3J?,XT5%SJ?^S+&/Hi,YjiZ#ERXbo0jqM*^R<(lNX[)Ft+.h3>fc*3=]@p?hrDIk%3(q&cn/lKpUjH*H$g5$?rtRKu8re>JdJ%;P&eIif,k)<;KQ9]C'JTm(sk2qjY'U:[rbZdG,42hCeF?Mi9F;Yn6@@>>mHY1h4]%qC4X;<p$eqSu2A1/O.H(mm?uk:e2)p&,6c!%?4Ekd?@7f&5c?,l"&S-D07t&VHo&FQ<)f'c#Mq)m27nk\EO[6>;jBQAB!QU/?14mE3V9\rOgs7bYU47(Y:p2uA<Q$'&oCt@L*6"1%7dq@.:%sQ5&MfA,#sUpc]S<AOlX#1o?Q&7$ok><tedV!YIrd/g4`mas^2W[((2(4uZ1YC:G(L/"P$1J56hl&IDX*[/!k.oaUqc$2%H6Fd&,_1:4d\Y'',87H!1);=K0C!&hHplRYgO`an`hr<f5$c[1A7)F#B(%J8lKFheYYdk##`AI03[g.]?d!Z:5X%UM,I>]KWFiJ<%`:.DF.HMg!L5a.K^d0A4GiJseJsrY1=@\kTT^UHF-6dkr[*f,_H.&"-'aJg9]CJ40mkAN6R^Tb)=+a.[SCV6sgj?YY6'@`_%)seF%]Fkq*-uhC?i-BkRDRupd7\g8po4eo;2I\PF=Eo3(^:/!mSpI`?qTcs)RNRP*$"'TM)m&8l)Y%i';+^Fre9gQ\3AaRs';#)I>@clK%YP4,rj47hZEu-KB;K&[\P'Z^[_u6ihO@f-t3+-.deaK^8fEJoQm<r5qQ]%.r-=uT[7,H-)/a>N]^+aQ^>-FC5]1>cJ(Ed2G\tG&7%YD)4%Be,^=nR3c#4&.RNWWm'13@Up!l%bjZi-LAfV6J0Bb`,REnf#WGJ9G%2ecZq>=d@MmBB=`9#t!.3X!,PL+dW0\E^!bFZgm`H%N\i(lSV1?+VLH>na!10]QhfVe+sO>:%c=W3,Vpdb`1.hDWhZr/kf>;3'hj.)(0[)/\d()L"t%mQ!(bS,PCm;4pP6A?C>AjIC9>XO%P,"L>@r&Db]<)b%,a.)A/0n6lGeMV5!XfYNV@plFd3`[,93Jmn]tY():"k<3ZC]LUjp762\O)'-.IVo4)U6"M6+T7X$W,C@B@864%5N/r8S&jMIn6FFsJ>Sj?'2.=Zk`$64dq%M3iS=YSU0sN&0M1$O)ct$epHQZurLjgFHT!-sf&BN5Q=a5So`8m^TkFVYc+DcTKED4.%kIN_g)dM5c"94hTG_W>F6f7!lgDT#$qBI#*U[8Y(d2%`B5ZulTYH^W-A=?>_8/=/+D#6TM6HFERI#6'Lj&fr_2I4&+(7o."0$n-m%i#_skaP,AH^oK>_kPN&(GBMaF5,B@][Fa`?F>k%dNC@kZ#AE\^"BM1/8Dk$-G.]`8HPUg&@pm?mKlN(;L('f`jR^iG+1WjK)1T%Y%0]ARh7bhk->bn&g-h2#Y(k^_?fQ@tE`5k^;$FcFd=7^4T71YZ4d1T`=582BX-;d;*doS'2DW0DEZ1eYl&me4eK>f)/N8JDH<F,!I%8K'LDTZ6IK83Z5#-"*L;`Af%U#]G!EfGs_N]LNerJ_3p58oo%5#SE=COXUnOOn)RoV)l7)7Y<:cTHR?=1dcO'./GqGY9lQ'pI9SJ%n3/&VC;ENl*2+a#OVrgjk:EPTIa4WT<^[1g^FZ;mUA]Tb<l?+H&c4h*/]L7j+?hB`it>4spk]3E6dBSb+h!N!k^JYM.&1_P&OiA9%5=Ms[Q@GB5CfLkq\2^C$Tdh"LKl-lb?>%ic81U,h1Nm"UBSMMiS!^cB;s+S%'KNTg-K7U1H&/M4Cm&k\U/%ll7?&+i%VYE">"_bQ%0!lBOLRa0=Qn%&TL6]=>&=!scOQJ_Fp2F($eec8F`'lMgUgol&+<kYd2%NVQ;'b`n,[*ioA(;C2c"6NAA3V=A+V-dYQ:!l0]\Y1n%R@',<K1NcGOunV1S,p?E:s?S<mR%kO`<!UgUan.jp@\k*\YM^"QEDr5;D7E>\iY3sLosDe:3_K8p2ibFG$%rsSH6:RE^GBi9b$IO%.l$[sjNUI.+1IJO@CfRiBF6)Ae*9<#:j>dW#thSHGa1jcA$m,UK9k-/pbEO6arNf-(u:5)?Sh'6?)Q9O#a3Qs,i,lYSI(q5AXDM<%GbQubOd:*,&R3(Bl$=7Q0Lgr:ScWJ+l6[#c5\^XIgE<%qqdOfY2SbjgFL/=!;Y;IKnH+gcLt96Ms!Ba'OIEsUl!Gbb$;qNdlC2Rf%*KhbHbY,M8b@m$3"DA%,P@W%eO/2R7mQ,p9fEIl_6[c/^![Z:$Hn+lT.O9C2!5RA]gr:BeM-KqbJAP`..f:7\,gSo@g.-Pp7k4Q$%-PgM#R0@,k`;V`[o/GoC4^N"?J@^Bd.4XK^O_m[DaNpg2B:2PGCkD?i*`;R5dP'V[F[X>l.Qc(B@!^Wu?r<[,^=e2+7,&"PX^TQ#%o!$(b8P6oL>*s-=7`VU'pY[(\<j0ZK=@3ad1=`si"O%d0p*BU>LQO2LI+!ZJ_X7%jqTfX:XoloH`2I2MM+FK3R88nU9FP5?,M/c(%EFZ0<=K"0U0drpbV&\0Ta@+HPNqk+&bfd=]QUru30IpH*i&DioQL2Qb)";a-f886S%![^-nVr4coNiWS]r<ktY!'DEH?2_AAdt,W%2!n8Hil",qq(g'o5aH$D$LBtd=f%akA1#<9_hKO<C0_t_@I,KA$F@>iedj,!ZE_T:6n[Gd-8=6+i&+._G^P>Q_Zfr87c!\(T].@9%9A<pGp,\PFQu*mPY$)s_Z1SslSZ8)OgT28Z9&6aCkCnc#DQSZ?cs!2po*`8U4dT=7[/rhCT"=&8YG.&ZCQ'S\'jJuHn'YUdB!9Ao%2]rV:lS/4uYBs,ggc^!qLqq[O;F.a`Uj1#eWs\R@.X%A3:TfYT+Np)\H`I1=HT$6,+FGWbW(@7*BL'e61#H&cGi9_4M.4+Kh"4LX%ER6UB5*HcCkuUt:RF@#<aNeOp%^?Qf<mOs9h@TKt+=055.aA1aW8_43)M>m:Q!T,gdg/(6gFrCnJG_YGHV_;AjrS:tf/mA_I2@4F%M-qD$S3aaHI%Zd8(hBln;=6(4lf%n49)_k*;HrkN@S;3hSL2f=j\?c5-=LS,qW;nOMESpAVVj$[J$"5<$V943\le$n@7]M#e76AM%]Q;#0/X8W7>.9+-,-0$Rq\(3ea2p[`d@jf+;u+J."U5oGe-&n:88T%2J\'g7Q>,XnpSg@7=+UoefM^<JZO$doo=9o+M1L*YF<[Xm%pFg:!%7!(lM,sGZe`,o<h&DU/Un)ae2(o)@%_2j54OEkV@\sJhfir[QQYmZu=T1#oObT8#=&bkF^%M7Gb'7+l+e:3V8_rP\Rn-au%kI%>^iFhlSBih(,`IH>GQWKW/aVXOSe^6]BK.rS!Yn&guN*\VQo4FT#A&2W-mG;FjAke2*4RaYnTbtjUq<kQ1Rq2,*75q$m$Vp:!%_WLSB&9@,C(*-"7@1L*0ejQ?)$QpC!huNATi:C5dhK+en?1]b$?qH/-3_cV]HY&D*p;.1OgJa+gd6,$4LS.nFdZrMR,Zs=nnT['Y%0#YV`M*1?p0T2<-S38ic2E;QI5PK%nrSX_4rBL^E'n-AE3+F!(rKmC@4"OS9a-N!%*\O.Y:CH4a;HJ.3Q:*BSmS+$$*6$D"\3F(a%@:MCL^ZC#:(/9L9D,-Eh`h*L(A8G)e?!QCbGgJI.Df-2s]Z$?44HYJr";s,5''lp0:l?=3!Y__rlB:I05XK*LZ3"3/)(MI^%.fcT%M.Gl!fGaEqF25Q'5D8LgJoUr\RH@qGrYB1fRj$ALf;GpZUV?&.b#.QZdAB<7E"5(s5&H$G8kUi/l1uHVfkY%*]\aA!NO3at^:_`n%9mYmeaH`[&g^DH+Cn46\@_U2JJ1f]n-cY8HG?nQn[D73M*akcX`_F7oH1W4YX#j8Y3X:g2X?W#q^c_YpRal%-Kc$_7&Q4%CF)4\*%+Rkg%1L/\Fb9Zsdm`"g\neW,_pgG=H%'_Q(GAe2XnrAI(CfF2^&0pBPCTuXW"$[kcS2',P/XTd,5oXg1+sS`p<L?r+$/fWba)*Q!%"(!V8!`;hg/RHF1DNJI;NFJ%66mnUbZS2Z4lT&N]`-C$h0A>okj'I)k()dO-*=?P7&:M[1l5P/72H+/7>qZ:&gE#DcbVI3:[8I4M%i4]h:j*fBg."LoC^pYC[+F:m/Tp!q84DEWE;)D4<e6\B_2T;:)h_>.*i]7an>Z[=tTN&*s\pMbK;mG-=IFd&j_LToZ.T5t(7\bZ)%.Cu`i?9_]<\-'ChF+X,+/l4#@/S+_9ie$&CL%_5ZZM,U!S5OV=U6IHD$(@HuXsEKE*L"&$::c'HN:I6\)UTqhLslJ5=!_s-Ym-+f%fqOS6Q/?qp880oO@kIF.#`9e]ebYk'-DTNTks.,8)Jm(LW^W.#L\kS6!Mo+$^-sT[+Ta%mMk,#6@07o>@Z#+TD(Q^/J:TBI?1"@4%0F\C+!-6)a$*m/fLY[hVk_rXcK<GbcgHP)a'Rij7Uk>klTie)f6Z?HRJ[L.V?(,ZUpFntFEDjAE6jdU?NA>A)klWil8&tOOK605;%jTW0dD9nTPmEHp5)"V/kA/GE;X(FBQkkc2cOjGF^Fie313K48)PC^q(+G9Q19B8@>a("$,PiPk>05F->ANf/`_anK@HJ^e*XFYW.%QH@&L5fmfjH>gRtqG>Uup]0o9&l>3d$cF9PdVK<'Kon_gb*hZm[;BnJ3=#n=/*[;n&ORm-UL)9uCcjWYri9Q^3IL1-@>:V<7;gp7%WBqc&SM(b^Fp%8:L+oE5iTCCN48lWhb[l.i!\=:)!^=(XM-"D0CWQhqG;7s%VbIo/h*C@MM9.)s3a9"q4S\70.AP=DQH@>"_!BH=%CsscS(O`cg5o+!VcU9No8K6jdBl9AO2G(2a]TcAp%+`Uh?^jB/#65so8Umk_7R/do\TkA4MOU;GY?MOJ#YQI0g[TU`mbs0,EY/qB%C7a)=k+slY]KT,HB]D>"NU2V+mQlGd$QF_RR7b*gSb<g1I)?Y23WjhKgQk<VEK-(kPjP_X)R]s(f9[poi4U2![G0s*Y,Gj4GeN(>%06e9Q`SQK&no8HEA-ogEg&`mAK(3h3E\ij.6kQa<`^i7(Tq'qpmCn[<#AeZFSq-sMTXd)oLph;P-6+JO97pV%d>aJ#3Oi<T\;,HN%/YR9e"jV[H$kk5d%:lZfoUA%.%^K(1j_i]N#022-U%tam;1<nV/5.eiZut_o=U;@uY0ZH/Pg!a^cfB#H0G@fq7c+9^?cj4:3aY"F%mIu/t_UEP[A^[J_CkHsq`ER`Y"lee[jMiO.>Xe-nGk4c`QXIOL6DM`R1Nfmb.GB.hPh#r/1Yt$Cq_gHnp$AY?SSYF<I*?a1Us#,4%M#`W1jh\sZk[1?BqrX2qK))<'h5R<c$d6$_q#L[0\K35&cRL1N5u^d63O0Ui/_=5oC#\g1(2'd,Q-?;nf``b@;sIQ8`tmm``brPE%oAs6-(V4C(!%h_N$5%ih8_2l>)Z],T0[C.-4NVC3^6%bcdFKL[Y\d+$X?eQ+X>Vbfl?p/^c%2Q,L<2lgOaaqK%U'uF#+4L[?/G)a%Y7J5H`,TMcU3pb3@cQIV6PIBCLXBP*MKTC\T#$Z[)2-`H/#c4S`%l.QaK]7I(('Mu[ajQ0n]h#<YeTs@1jg^D&YpG4E"??1V5^Wi%gu<]'i(AKQ-OOdCNj,-=0q"s(.6>J>jksX4'Ji8m'Ck$QCA)a6H3Sc_8Ec"dK3>FDK`u479X!eKo&\.(+"H.O)'0n2?Z?1?dK^eg%K*nDe?T1=e4,QP7A,snp:ADqO,Or""ff92LI>k0.0eXOhYtr+"B2`W?C[WDU]9H/j^c^'Ll@9p/?YH-II:r!LqCHX+[7-?>WDJ%;%%*3[KSNZ%`QpBs'7(N07],]QKKHfpofS\c\Wcotp9R.Bl]:2EkF5)Q,Ke;<1T2F5*iZ*o0j9jeRJdrjCpOIXj5"0LL[;l'ul+8Oj%1;d.jpYMmX;+/P:ak/H4i`m.:?h_Pr10+jLK(Cbk$@\1Uo^$*.<7C6'#%%D995!N0225aO[)d`t/,S]D#U=lGOcF`Kf]:,"0;P;G%YOqgW?]0r"9dFsSaaX(37:^k'a8<qlga,5Xp'$V3;HTG-[ACdD@u#6POVJ\Bd&ijf;gMG2I5i6k(kSLXrPV5?V_1("@:pt+\->_Q%-3/P+3'C`KH\M)?nubVXXoSJ/Qp,emc`S6fZ`33U<$%l1jh\he'S*L3OPOb.7#:ss<JlIb-.I^c[&JV<eA@;HpV^!@e3NV6AB:g$%%S9.7'0kEV+rI^=GZ:FcJd<E(?9A6E3tB3&#4dF7K$WPpI^)iE"N7BV?l;Nj!(ER"i<JeJL"$_XRi29rG@^dRC4V(+F@e>9^rD%r%-@WdPBSab59K1Aao'j&d!51JsN!;.I(;ksT(r2jp^lIe8^f.mlb)G8:UE#0Y;4"%)l`Vnn3%]Y^BTX<[G27VPMWZ0\b\2LTQ.)W(%L@,A"gH>jJid:d^,^3Gu&)mWE7E?t/5%SoE-4ik3i+ACnSd>Bb^3':rc9/6fm6Jk?1-u_UMR)#GP>=)"b3+ED%:_IVVp!NXLmTIn%#*N0j7LV&8oD9JeirTO+4KetQoI0J_)LQ1m(iSb%O\>%?K\6BRbms)n%aA,a99p^Zl?&kG0IX3XITWr*fSX'/bb"dVVuHYR<'CFL%%\7&K3lSWW_<$<d2W^2?j2d8t64>A;)-(N"UQQWa"NO*N:cBhW\lF$SMesE<5#:OR`260T[m;,uNbcP`0Nn]+5:$mbZ9nG;1f-,b%=SQ:Ybp$9Pa*-%mnjC>4G4?=mB^K57!RF0'4Zqt7's/=$4.B]1,U"h&I,Kk/2n%c1:r8TM??YoXG4OdZ_0G&)5Wd$[qi6]\h/BSQ%bH6=WRMjRC34B(0(e+aG+>t$4\m3Rt_rF?05IR=22X3'q%Q=IDoRYMH/GFJr%q%1A17FRiL'l]6f[l-&aP(IHIR;@)btVn4Cbq2K%do-6`W0!ppm8tN'EO,<cmV1D:k)n_jPRTJP;&Yt`ZK'lPN]7'ZP*1U+4&g/p)j5d8L!Er\DD-c+J=.XtQSL'lASr*HDUQlq#V18o%G^d0gVP%>646XZ:UC(V3+H,&76KCG>+=JR&fU3'tK9hY#TJ\kCS$o@.N:&aukY;/iMa@<ED:=C(?j*](I7;g_\3;G;W9\+l3/<`.%8:&d)e/W37'a$r+ZHSp:a]*&@.o0dMNt(7[/>4tF9Z3[c%\![WLipK#pt'27q,fIa5rKic\m1_/_G$M0FsnhR1R9+K][<W"IjW'_%,?co/KF2K$!^%lO8(8#QmY2$Pbl)2[]j#Vp>HZ$:bO^-tX8\@Jc8i/4DIOP6E8Z"1`WPlW(l$ie-1)Q.T8@&t(AfF-Jd/l0AFE<=%@de-am_OhuBMiXma2edD>oOkDPk83q59o:M=i*?^'4n$Yd4jfNAYE['"?%/+0O6,09U$EPJB,("WVf1+hV`#G"e*R2<WLmQ2%-qb%kf2r_mqs]N++*5)D5Y"He80%L,K9js$f#buh>*mBERYLIoUS_iFD$h=0qm7<(LPDj^!R@@0u[b1oPB`fF0!^Tk/of"3S4o;DJCO:%Wl;9o`l1WuE-99CK:G?!Z*5)"I$5['(+KV^7+U]_\u6c:Hfb%ZEM4ssjGD6,CJXG/,-frVc'rmPGCSrtZ\RgLHQ4j"2`ouB@##YB%G>pl$BL0kWEs,U"-C1sNXe:!hh4Q$;LU-=g6K2EHJRs#6U%'b8%^"82<nd(2U.97b%YhkjUp-qc)^?=DA;`.Vgc6'9%Z&)lju]XP%.sj"l%TBd`CjiJ%<p9HmZ-=K'?ZWl#l`l`Ho0n=X!D>J=)<U/Q=_$,^8p_3>9q5H^)k&,)cA1-+S0R!u$OOl8G.6O&e-#n?]?70p%pq$c`hKo/&>6X.u7Lcgd(Mg?B&.63YaVle<qO6feKaJ]mQVWd%kBBoneuMpmMdGu6N`UBP)"eD2=%KJiG3;A0XU-mJJ#iD9X2H/L%nJ1)g9JsG[67#_/Q&S::=ejhT^\+V[EFM[Ya_&4)$?#X`jb_cIh")Joo5Eh^fR6a9&ug=643HffQNZ)@+._;3=YHhiTuLUjbSo7*%Xf9`aXBil+`q3rTJ>_P<2"nGkXjN>W>%;VbZ5T2m<cbd/6&daJ3RPb9,&\&;Su_Et'[+0r?U6LNineI692*gc;R)K:j>F?uh:+ul%G;skdc?GJ`0W,sIm:JKDHbBa<2=?C(GC%rb">>pTB.dN3J/c4)!o.Re9_R0RDMe6.Y9mttPp#Oi'HNRK:93'=]@>K(`[W*>'[`:d%*eJoa$J]mn4#GN&W2?hbmSXrb<cVWobBjns:BKh@98EX;Xud57#LLj\is55?*86Ra\<#b*A<PuIQ^tX'EcW6O"Sl^R(MPlbm";4(%k+3VJ5lH*oEuDaZ,18/XR;?!#pWkJY\l)6(Nd71u=&#h+O682,RrVIj[OV3@!$.]k#\Z&^]6IN\cYK,3.@2ch9s$5Q&dW#R=1[/p%pmIt`T&Dj:FA1\-Ols5.hrLBm5QPqPC*pKQiNRm7rluOr246^"*/UK(i%atr[)@K\"K'a`<b#79%09Jn4`%OG/ANk?IGpdP_qGm!%Q`o7ib66Q*oYpQ$=TAV%QGDX)FN=3])/)G0aQo;hQ-DR409+@Uo'q#>:r'>Tf+Zh(X*86f\FPkB"81I,@2[9eg'CZIl1lt0<V$Y$%Wm\)$`A7*eC(!k1:1(!>j4f*u@ThMS@hV\(T%@TA0k7rX\D,*_V`2I?!Nd2u.oLMF"hKJ>!ep!:QXtKh4hIk8+Ahi@^m\4CO.ONm%dL(MNfJQZTM.F$rp!RERYR.7#&&An6Ma?5g@+TsA\j"-tF)M3(a.M2BJEAu\j#r<NJm#WVCIDstNICu=#q.`\`V!ile`66JT[lZD%\rfm$/U]\9qt._>RDGKl7k@Sp<&RXSc&@:$cV<\J'2U6t;V)1&oIm8PqK.HiRETON8n-IXh8<juhR#!8aP!WqT`3%7."%*\JE;dD%p5Hi^G1-dpn,'%a'nN6S7[YQq%oKEq&%Wo\b8R4fdC\;"\FQTj.pteLMrR"3'kj8)Id(YNqLY!sEbtt.J0KRs(`s(p#Kpre=t@/^%>CdQrSq:S_cpnUIcboRaRF]5SW"lY"rf'14Qp>Kl=sn6Y_\JgUM?Ghu2.)<ibs71QA(.6a\_7=rAT&Kq!c>nN@3(562UY3+&%9ZJ%bs64<jI<#^0l7'igsMEgJ0HBSfMRG_?>fl@FG7E@`''T@QEAktAS;Nk"T%Dt1P&]>NE5HFMoE4EBLJWS\4gH:JQgYP:"^8fC'0SN%!#g/R5_0_U=J[Il1aSfiTOe;jHeUdI&5_<P9t;QBbnY#M("*YlD1/;4Jb8VHW`0.0A,IgYl'hu+!>Vc=/#H.(?*qRBj*DJ-f?<=8%(/(PE)$n`CJ>0q`(T($40p3m`4TLq=Y+!4#VnFAX]tt0N'qj:WF^6g7m]/g^-jT#MJ?RJ4P!Tt:`R\^>\t@jI;@s9:HEC=-qAbj1%c?sA<]Q.*6$Kh5D]5&Hjj6l's>C2!1RAG,_XVeQBG9q$]V'A.Xm!`g%/Rub%mW!EZ\RscXeTuS_h;2pkY/qXNQSe>Ba'I#FA,G*Q%FS*#O],nl>R_dqUhR-cQZ2JRRb*G!BPrQbi2V7Wgrr'ERD"un#GG!aDmLGE/m<;bNQ&>gd2Ve$iR<IB1%9)$M5'S0OMnA9pHQJTt%gO$]&4EimT%UR4NG9r7MpE#<3m>ZI]G%1@)91Qb%rGEhCna,0NIM6k1g[CHc6fG.k6\Yp%hSCq+_4(#Am^KaW],.=-BQgkkCAB\=%/2^bJ4-Am^+p3I0VE.L?%Hr7_@ZF-4I4?t7kom'`V=[m6%<@g.e-JhsSCam-NkDNkY,o#laFOe!n1@jAl!mK)R*=>KAU9:4%1Jpd%DFjGC:?o,p#"$h:JOR>R/m1A5lS;dIlsf#Zo:.,k7s/\o)#JW<N%<+omM?)Z=UHiPO9ON9Tc8RJeW4MJ$LE$Dh[1&c(GO=#0j"q8%Vh:D_o+n"n:KrC%d!"DTM9"[b;5UZ7.*Q`:1S@lS%Q'n7bCOtS(CQlY9+"Y2/fCcSK0^kp0T?"o5i#'u]gEY8e!ko7bg-Zi@aoV,%6n@6K$5>r/>C_<Q&4HQ%Rt/@,a`H@r8h7sf07;N*_WZIW:_4OqLk8aI@k4qC=188@g_?43J\md`=f*#)Y"dF,Ma^9VC:SG(C:Vp@%S\u5L_d4pgpl^?aee/-j$[Vo4805%VqSY68hCQf)d9uYXAE#6%'paW6EN^/PU:.F'p5u^dP4N3iWeu@Ce\u>+9_FjV$'r=<E<+lo%Y\K8cjK`6`!!8,eph>8bBkj%:&;/o+ZJ-si>UHd([@"W#"H4CFmFCO]&XM>cqM7m?]t+n4Y7qI4F+@rj?#6fGf0^r6S3o'.LEF)f%D_-feR(V,T.!SGE`.]p)B:tddd:c]:IFq0Y?Bd5C![X'WXWjUZD%58)59AoD(C@FRN9OE@FC?97_$@>W`*I,?=0L*p&Uj)*E1se&%55;BWINg@?Jk#-F$).qi5?m]KAcmH8G[6Hh/:Z>+_%lf#nr7H8?l!4:4@e6j(dDd6CLp!N&d+&iTD@iGd&aH]'AnrE&*J>04)!bI%<Oe%4l6dU5+(a$/ku$[Gb#-?fnOXtc,6KWts$5%SDrXY-<:)t=bY_\U+@]BO"u.N1k?T"gdeOp9[&6B$fh45k:#<B(!1LZu?-gtf%@C+YD3%Msognn5"DdT*$+!U)%FBdHeRS(=OMp)A^MmdVN1,h_8W6,kaP4WD050rts\u2/up4#jL9]kD^%T(km@1;Y#\lDF++4oB<%e%d9<W:ZPrZcbuh9Ls$YLN>qp=Oc$F@oqY5GV.XSNsrJVnd00a\if:6Mci!&b=C`$a#2[)8U*?-QnRZaA-L@)`<Ih`B\V5UJSl$s%?50<=$pE&KRIi:N<_tt^$mUI\';6\lX5c*V_5lX#&@ic0Jc!_9CV<u6_KL`'N"_OGP$Keqd.4Bmg6qKaCO1;0glcp*Cj&HE&Yht5%0kQY-*sI>R!PoZjf;1!C0nB2FFJiVH)EhY5m5/@=<9]r0b9D/C>>u**6u'3)'UrSW6OERT/P,77l,qQPS5gatQ%!(2[km05b:fgO%.R02)W<?kXC>'2"#1`Ri!,8Zs+jWHC2'9u?g.peHK407mA,)\WR-W'1l2GlHPMG_Vs2eI(3lk_m,E\:;Z&_ApY/FUa\(q$edNYLC%4:d)qNT.lgo;iqm<\s9,cV!0]@\8[_--BmaFsD26^!^kLJ^%YJLPV#M?ZQGsM0<C,9pWg6eLe/8SVJGqP4(b;Pc&b1&Qt[7nd&8N%:KCrJrJ3#nLlbGQ+-r*(=s:Mo601r-)QATfqR^f9l\8,'dYLu%'F1N1@oA'I1HuHE<(L$iCb'85jcu^oWdPQAR=F,Zit\>BZD=u-%+#3g=;V5Z2fCF>9#2iW<)%NBZCVKh7G@*5n-05nh43ND+4n>W(0$!O($M%k-D_$5crBX&0oo8Ea#LkQ*S:!K["55CJ=B=4n/C-rU%inlGj_^kJHCWotMiqPCG1<&&c_9$eKP,=H=b&*ubnb)Ge='SC[qb$TOaE4[#+/MQJokOE=X[6LL?]lF:0?<NR86`FuJ2E=$5HB!o%2oaH"DHX,PMX*Gk&#RN!jW9"38$G7&hNqO$#O4M)BQ87LMg^O=rK-80603)pa0nr`+EpZ$Afl44VI6COJ1-\.AES7m4Xm%3=uh*b%Ter,i<t24u?RjU%YbTbQ&5aJ+#Xc'j,oX&)%Be$DX%)=1cBh+2f`SgPj()_%#p>t_&(5Ne7p]kT@EnClLnKIFgKEjsD#co3RUpEH%h#N9&ALh8<$5g*6Q7Y?B>B+di4HYe/(+rW>n(tR>G'<hPGmB>5FXuED);d($#G2%d]RS;_/Zi&HK7t!nE-o9@BrF\`?eaYRg=A]M%'hsro75lUG:mNWBki!F58Ui%Kr7F!060Iee._YCm%UH'dYa0s^;<I]JX]1seQIZ;M72O\_>:tiOAR<hX]Etc%<bBW\-Ea`D"UDr0%\sn+n,ok.7gC^TlnZB':+dX+R]%FSs^9[6LVaYC,$]F`Ym(MR_h+Y.-H3N)VYt]t0e?&un9Ep+_2?o+7`ee(sf__a7qq=hGF]GK=%WMuj7hJpOpA$9f%^JIJ'%b9)ESuU)M!n9D*["k\k%'SGR;D$9'TSaX#XgJBT)r%N(SCE[7Pg/`,YfG4:J%&UUe_U,,C->+ph!4W"%U-U:U'!9+(=/2<M`*TF6]L9qs?9Vt@S8qmX^L4!@%(,Z*k!Fjb>0:,'#BFXT=e4IMdYta%2?:@<E*$mG&(FHZEC&>M`bHZdg\]?b%l;FZ9l'Gm82T9!<Mj`+6heJWD/cB1dDL#>_2aZI2A)R73:(mc)eD&HdST!%nAXc`A6UL0^#!H_3%DS,fZJ+6W.Sms#s-iV-TTu%$%<a'Ze)M/rumbQl,#!oP%I=Tl@Ah=[bU(3773=V[eZe!mOn\J6^g0S(`^A8OrFmF[/O0(72Kq4iFcq^Ed?hY8PG.Q;oh,`SfZnf2X%dr;M=T5;fiJY>h6_l8gJE5)S_E1l?-G^Nk<)S4:pda8jTM:f-j^!WQemSmd;ZB`I>)*W@)fZ$C`]t9uC?Z")pJ_I^T)S<$CTsp>p%bqiC5Mq9[9O70D\?3d=X6EcdpD,e$JF'uSfSmL\]`?oH:\_pT4B+;ZMC-J$1*dT`m,a&E[ASY@X*TUD<?NhfbhE0G7Hf\DlTT<bj%BWP5+VJb`IPPj(#^U;l.-9cdTktc1/)fRf_\M7@tI*487(7Hr:$!M-@3K@e)-/^NE</"hl/ln7F2-bt)\<UWfbEn-:*<(aq^92n[%oQp@RBm]OPkgaZq%UF2]SS/hfq/19;W\`j(-MJgAXu_2Q@&Q:MFO_7NKl"T.F6KV[kQZe<P=&EB5t=,8531'jB@'LMPs49UQ$d\O%.U0-h*4kDD3[_hJV]<;5k;XQok8_(u%(`n;b*k>4/K@Rq7inUs$2!Mc]`me<Fnn-Ba$sCOYH1fLWa;$XMai-B&q?#Wn?(.A+$,"D%;N.eJY!CC`gO>_tBYRO0.Y$/r4\q\Rj30(>VUdm.bocR(34$)Db>Q060tnB[/+g\S\Y_>)h&8FYH[P4rIAFd196U25SL3'f93LE;%nDC\4^@Fj6mS[98<CNemZDNhM3K$h9afqi'2I!'"[.a>2/A@n0Ftp54T]h$-_0V^0p24@Wg-L]tU>^ZslJ/Uqo%lA@"B4,'$:r5j%PMOqY6#(Xj1"i[-=&hiKlbVXf>qeh2`3_EiE%E"H,1p!l/(\X\7B,D?)9//2LsrbT2L/#b]N3YND/8d8Y%9&Z7`'80A8:`2rmaPI%6qb1QD%Dh1&^,(T3&<@VG8ph3rqibW^6]6D2durcg2HB@/F..AC0FBsl7n@'%DoW-4MJ0srX6%"BQ][*I(<A*@i\c$(Uie\M[Bl?%[WqHXRdqND[]+tGH$jlJAe43_#bpI_QnB=n=TuW%pH*&i3^opVWKpCYBWMZC^9\\mP;C\0+BuY`\sfl^V%DA*=<Sma3<-1L4gVMF%</o]e<?"S?8WWI=FZ4[CeniWt/&>JuCSFNLOm1aFp3le8D<Bm,rkIaS?.[``+B,JLekN#'Q`FR7mDZtf)^"E9=`K[,/);OLXs.MS%m0_*&<9/o!<19,"+&gtKmJV5"fo5+_AieZ,aCUQDr*uic(E?8`I6QLc--`ef@onsa49'-ZouM;gB'W,4cnfEWEc:2^09"I@h+!*'%(gS^Vcb%WG^-<+X88>93j#7@kSPjm;hE3qrN7=-<Zn#A+e&l05m[[BG,QCk7DHudq;:25+*gqSQ%f*CdO%a,>?"Y4Hp.97H4]f1>%b'R[kbOfO1mu_nE>e?caVQ8a>d4].(f5Y"oUXX2<oZ8<[4(l'pn"RKc#);9$ZlE7T"OYJ`?9BuZ=^W.O/JNHA1ph:a%*VgdBkUdt%A9)[#b0TD(,D4GXej=Jf:X==8;0#FRM-S+hSb_bWbX5[g*NDSA(R8Q9WO41_ks_f"Ya)b@=s6m\)]Ep)2<oo*e8jiicpi@"Rc3>0%?9ij?qH-DS_SAub%YZe/2Lj6H^i.bRc.:%<CBai_MB9]mWKffudVkPGS[aI9\cP]HP]b/s,kY(tW*[/i0$B%9WErs!HoSbnV_+dK%kBo7Ea./*u*WY&nq/DlL<4g8-.mp7E48mEZlTQQ$PC0mKfn+XoLEgZK.3l"Qq/GOpCsIk&aO"t:@>fNCDX*=*Se"><^En!)?hnZH%/+XWup%.-W7=@nEf^#,l-oh1(.QCs8co!Ze9KqbL'59>#6=Vl,O_lng1B"mA@TAhs"@?dr()!o6)kG^IW2rG2<j9#LO/5NDD^q%I%HC8$j:+s"Go*A>gY&!D9X+bfDiLLMIBG2/q!n=r#_ZH\Y=+.6Xbc2.^[,rkj\)E[FTugH]!ZUHR)]meB1o'APj*6GWf%l(7<f5R^%PJ(m%C*gV$];aUpg?HPA0%\+BS^(74Q;%es<J4ZDQ'fZ9OsME*0u[r*?^lGJHLS*1Du]ZsOm5/L;adIGN)]h&/^(Co7]QJNkXS,-%l1<(:8N6#l;YU$NOh0/BN7>O)AYebe.3iu=IMq?m0!45%)<drrBFVmX@2kMsJ]:rrh-u/O6ecdQ$<J5alW5R+nL6K?E7K\iQ`4r#%RDOAJKkib[I7],;]@'E.CYr51WGmMcn"`X*=/g/(LkmZ^iL1M!o%`N-1;_jKKL_#(<CB;;c`:i\.:gi8R]%]PXQ,3d>56)dJ#uHh%_ck`/ENN>@%7uN;rmi,%\!g>tF^E9VX8peZ3?4KfBjmoC(VQbq3+TW;mu4#';jo9Y?3@e"o&8cieEt<:_9"?#X*?l+dGWNDF;:u8%?cJ]Jn0[nUps3`gbl,fEjN>b're"9eVCrsk_Jl3lr)53Om/FgCE\G_]B.*r0eP'/<FZ/uAQu;k<RI&LlE]GK@d>9mVo4*]>7PA*7%hH_53bcj2(>*\IJV^fUPa1G,!5<:JTm(YPEDj=aT;0AMadO44QL$R`)r4:*?U2I]+n));-44[lHgHj#D_XtRBb-:Kg;X[obg#@F-%4#cH'<SgkiL>>4YMnKmih'Pq3[/;?/#5bH$/n(M1_es=<Uub_I+*QfP>CL\`p%PH3\M_&ojn&*X0>kTPf^dXPRi5(_*Bi66[XBcS%naC.6s*`k:m&%G^am^,<*?Ui>FS'Ei,*0,D0?n0O8].s6qgsXHBs?tJ[s8F+ZoLHp\5ENLb1BUlRn*'YA?CR?WRP]]FcTO^I%skN%!Yr3YbZ2?GjN92YrOtk+be)AH;dS3o8*\>t?L_ln\Z3.UD7j7s[DDP/kn:Om9p&`7rXud<j"%f?`JqXnJb^&@CQ"Z7G,a8<Kq2t"%#t+YD/N41:ZX7>!gnQW$%X7:`S$&iJPl9+`Cq?oW\lLb>Fe;B0VJV[T`S"`Z?.mT1BQ_(ql0?5<Hd/FgQ20'R2I0H<>rQ*Ul>4$e%irdo0^Y*_2;:,9cVTZ0=aec&>UY&R)?)?/aDqT5D\TDDffA<gtR^##l59jV5R8)iEV/7hj.GD5.Cq?pJRpo-%n(DeoU,B\9qiOTS%Q:k;XVppK<\h_7]<]9AM2I5#4),G08Zg$3$0\)5#]$;P5h.5!Be1LQd9in2*G!BIO7<UbbZ&Z0T.^;-bbGHf5V/(QZ?DlIuAIWUD%ZW9eBO\Jn`Z`E!:FCgA4;Mh-gCqA3mjF1^iPtg__:q]<#T2!pXn+S]/Y&#kN<G6^)VCRRTAJ1lLCq>"\_EsUSAYeGt5kY*7XH>FA%2lfS18_qctM0-4Z*=*WdGKa]@N39VFm-aMT^?r"`5#l&poQX_K)181WI=1GMX/hGjL1;*,*U1m4[7o"e<Df[R.^uk\]f()69]p>D%<F,PUl2$gbD<@h"##M7=<mdo+G4);%R=rCOD$SrZ(7BH+kga1j*l=/AG4E_$DQn<9gsn_YomG#TK8=2hd9T7e`;,R3m^ft]X5e!`%b4\KW7<dR`.HR_ClPcDNd5?-MWs$*")$;a7YIWu_VMVIZ\T9Q\gV]Yp]&p/-?+@#2hk6H"=.kti'`do3,'mZV/kpdHk)._d]!j^*%!12bIc[6_u6dfI>n*Ug(%;Xfl;Gla2cG?(qpm=>`p7@PX<=(];^E^-$L^_`@Hd!jX^"+SV8"+>J3^%Au$oJMUK=Cd.o=cHHl6@2S%)XAI`lGH?Zf=D`K:b^XQIki+dl6Q*6e7`L-=&H1q&`0eD2]QurWl^R/FEC=<=RgR?\mVkMHP4BQ,i!O*=?AELE#8>gg<Y2J$4'@/%rN82rZA+*hrG!k,RW"X.L"q<@W*8rV3'g,5+W0$49P%li`f/NbbuBJm>.ad&ZCguVfMro4%lY=h>h-Dh[b_IJ%p-1,l"[R!RjoM(%RJBsMaADboU"q>R]>ZiSG5G,_J6HYbi_.\`mFu?'[8n_W("T3m.`;&@XOko"mNTM0;M)!c>eK1`$*9Q9E,aEir6"^lg^VcjL-==2%f5tqRiJtN&[pe6M],i^L43/eL^+$8KbH(Gn]DgTMf?T\bHW+6h2r$D+VY#n\qMeM2E0n0eXZqZMVpBRE`A+rc@sacI3E<V.rGlH9%mkru(d#I;\m9_`jWHRFa<0rHL3A_GYdtbkFCo'PrQJ@\V^7C:B<0^!IBW%RW>\?W%G[4Vj7^;R_p>c&4,UT2C-EP5[e_5a3Wl(-6%AIA2%eOX2=)=@-<Yd4*Za7oPD$36P^Zb:D!l@Q:6Z"gVYS_l1e@o:#-8m'7ioo7H:Jnr,?c5+b)c>m0p96E4'T_2h1F'P(*&#P4E%Y!m"n$cOfX^U-rLcQ7DCm]lTE[m"-m\?pbY]T#*U5KC0ffk=6OC7nUfldGcB%?7BR%Wg"+lQ4@n$3?Z[.[i58>k("hRb'^RW'LQW%lLh_Ync1[2%)Qeh+%j8fWZS)e%?>AOqNRe2BmlTX-]]oE%uu-GN:<_USD1Mq*.$*2="tdZYPqkiB2#s2q:qssf(j:,LM>)*choYE%,;9)RjY9iIHe:g6?LD(+aG1_8]Q*A<2"QcHrpnX+UA+*ORSQYie[*;uP44J]5.WopZ:lkiX1,flIpbKE]SGmn^ZaodX44N)HoU\Y%hunOWmG9(T:JI=G^#!UkKGXV+J%[dif.%*QAH"Tub3%1BIX3S1lE,KlfP0m'kf(p!oTuo$7o><:B2:$us44lOQ63eiq"a&@bE!-^%HP,XW0oP#o:KAb]D@RIb$+K%2I@bnN'[3J5VU[>Lo)4Ki3\<OFs(\e"F!d)dMDHuJY?X"5Nk.gHP`6&h:Q?3NcBdT+`F%KjPalro%^e*BW+,4\@d@_iDBb.\?h:72f's`=XFT//cC0b1/k$[!?'^H+TEOaH*13MuR=[!8'\ZDJoRLWPL0M`cOJY9E@ViajW>$"j@D=9]g%T9V=^,sRYO2*"JPe(ZLoXU:n)Jf_#W<27Vh2.^dY^hM?cP1Qo9;MEPF^YA%NM1W5uR(P#.X6tAZ-._CuA2,sQ@it&P5rt@`JZfs1%4'Ja*[iT3u!$=ltms/RN&(=`#BM<TMp1r4LO(!K@*P8jV?0g$i"F)U*Y_@X9Z(pt=VTY-^V4;p7J^^WG-+D-e`EI7n`\K\fXZpBi%U$_fV52""mFe->NmG5UGE7_ZHE%OS1iu;@+/;@N0nke2@1,33gF.">'Z/51XRC\5c8b&,'%VnHl38^I>Z7:uqIBXHcJ9g$G:H;Gr%>qAn$V8n9KAR2=8NTX4@F7R&j[<ero8lt9#^85l,%LlBE`)Cl0Y#hOcY[u3J@r:Wk/o@Vq1>$o4>BDpi=#"%7;e,39GrfW?:#rUd%)/Bnrm%e!TO0*&r.:'HkG1\\XcpXtHblXtRLSR?P[B]eujoDj<`p71:f$+5sj%jQ`"^!]rX]`."-LIp@%\Rm$=Vk4kF`RQ1f@PEd%@,2ef)h7*%$a=LY?tVB<[l<T;fZ5(D!P4^+oqm"61eS=]mm"ILcd[`L/m-KtV0li\\GfjXfAqY_:G1b8]&eEf.:69u\M'<?)(TF-%L-!`*V0l:NeG=A<?`Q;Ira*b!:/e/S:K>!4A.5k;%Ba]S?aZ/';&cO1Hi7-(;81Sa+17g3?GCs>L8qu>Y:eP;[sS'iem6P4Cq@71%YBiG;+)KR'qW4$BkuPRengg3uorH*6ZpkOLG->71<f48u52>I*5'M%J?a#l&p!ARk-<F";qGlRD7.U(uY90YS[W(DQi4#f#f<>/_%+MHRrkH7gk41B9aCAGPleJktS^TrcErEA;.`jIe:m_+(og95k(?gIS>41j+JkH)$op\NF>5h5bFI^snbh<NSq$G,k9^J9'U]6jM!%>EK'D?LQpTGN?0HO0@"Q=Omh,V(_T>9iU!7Q^=#ohs4?lX.QL[eDn5keY%L02]6acY@#gZI_*L@l,UJd!k9kteISKf?h,6fDtWEA%/$8^@c@Treot>gNrG&XV]@h&h]meLH5eHpgHHCNT=t+dV]"X6/&,013[_::r?8fi8e%L2nj?5?Ul;sq3h=\I1\Z[jGl;q#;WgeA6%HH8_E=-iLq;h:r5gT^@QI\!,;Wp]QGn34SC[pdC\Ibio%f1GOG`I3-ICr<?>U*$8=X8%R3<Sm#m=[en4p\ImjdS=>K1>/DX]mdAq%dX&LVc^hl6>Q(!Glasg]YM'8!?+$Z<Hi7-iK0@dnqpA/#DcY]kpj0hMAbY`f>go_6<^6*o)iLooHi9J5;OuP+?/FmKmFQ)UKr2b7%rMj=JqtjtVrQ9D#FfV-5kGkG,rMn+cb-U<L]mag2XC!t`'t=%)g6Gt!ldmk;YcE-LWY@gZnhdD%h;%<t]!1m/5:?K-1N]0LQ-5.F%GIS*HKNYmsf<75E;mn=7h!<Rt?^),V5.e8[]md@u8Nkts=.Knlcf4<j?GDXU3?6FggM[mp^,D<#?3]+Za0"!Y_eZ\u]-=+^?AWIl%Y[n6l?kaXFIE<h]5)#s$[=V%eg%AdE$si&)4fW>O]!,T)8JlLqAj6.^2k/+p(]\X72Nk&UiMY5>V7f0fICeH/N\?afmpE&jq;(KE%UB<l96aq%h3&9Nr%?CJeoPm^PI!Rk/HTe\l1&pP<ou-:LY7Y^Gh4=8jdact+g@t%ThYQ<^Njg#^*I?Iq?dHEpisuUfe*KWhI6(\:%nok&'?$K^GDLZq=[f(^4Qb,10@9rRBc;qUHn#s14muNHVms&p=eiOc,)=gPbNlLMUhbB*c5:h8EmN;E<Dr*_'4<?]!\6JgWd+cYU%B6O:PqdDZ,)19'.1o0-Yduhfa0>;i44TG!GIX5j5"ip'9L.4p%bp:V"^H%pTpq6</AH(WEAMdgo!Co%#^TC8MgV\MK8LE"Bm;6V-%rqH0OU%c=ZmZ>"eZL-K7d]q]].EpG_Fmq,t"O]+#8HrZ0'6A4n1Sp:(dfI?,p.jJ)I]OUT`9_d=)XeI6(?W<<c[0HaqMW*1mN7V*%$d'd'ae>=S?;45CD3W@@:?(R(TBZ6.DguD^p7e4aRpD1oTD;Q46b*PZUe\//FZX_U1*n_2rdF/?n&F-Af4Rjmh:j"kSN;1Z.CO0a%T38g)o>BM9o^EI:(ei^IhR<4hYL6+LH^R<<i[Q'U?73*\M`6-p*u;?Zp5UJ#-AS2D7Q34a_>_+C[WXcV\-4tj+@M4L,t]".[ng=(%M19>*r:YYoBbnSE`eaS-'^tP'7UH^5Wj=ETH,"T1:ZARAr9JBuJ\O,0CXWrt?hQF_2rF8EQb0)FU#k10e%Rb(+,mA)WjgXBXYH`K%PNh,lle1[AHi1d7qhOQqF8L_ApCBdaV>Z&BhS9\OnN36u58WF.n,7'388*7sl`\;aRQnOQcgo!>bEL3n:1#WgP!<b@0KF.nk3gt,%H*1J4JIMMK"Fo.qkuYR&3s`TMGb)6j9Lg;RenDe<@Ja:^&_!EJ99<KnfKScmiK<l`=BKI(E0B_VY&D$0Y$\%bO$G\Sdr.HVBmBOH%`5MS3\JP%m$2?dG`g]0ET!BG$Oft:j*(OA6<i/[UL1btlNpNpnXTj9\F+H2NPh@-af9,ihjJ^g.ToZ\+F^$D4DkPaW)OZ)h+t\hg%8Ns#nqV(7tbKh].(S'.cUY>Hr<BdI"iRQTRnVbrhX+)Q\EZ3S]T@-d^;dQc9pJX%?P;'-//c<1A9nkM&[.!g'gRD^Be"L^*q!#+0%24nb9=KAc,/O*MDe,V/geIJuG`VKBrfUq<8Y7<_kkpYT#1Jl'!kIENQ(Y\]&d@`Z]]CP%M^EFZAeP/FZNF#5!1,(P3Gr55)q,ars%Id&n=OZ7rG2C'>sAjG$6`oeK-[5\&ohln1cB3':?o)*Y1odK`[$9TY"?`<<_&/@8\^;iH(efX<Sq"SE;Hu+6ir\F0EmFo\:Tp1RP%4ad/=HZ.I_6<L;W&b#[HmfiUbbfQI.'jrd]/6fYFdtQQsHhVXs"Q]p1c)6s?GeVC/D%'1"/UT15S+b(bCPR2O?6+uf:kVQL3(b,b%7+eD!IcU,Ci\qC`Er$?+U8IQBMSefV;4&#n,soF$s'0$1bf6#AF8dobO+)e4%fSAjD6VJr%t:F18!,f'Aio5/F.:XnpE(?o&+P!e%AqKt8+NIO?PkgP/UqYS5X?QVl(VUN71msEFluIR<%5@fs_P*Mahn6k3bV'W2O.qe^[<2BFFtG@K6,SVqCb22`/RFMY(O7trL:m$l%QS&Kf8piFQlarnuXP2"pnF!n[XqBWrrsWkdhDL,IDnLH\^%,e'Y6XI-pPeT`,kh);U4n,I->qT(Is9+H\1TR<K7-gCDD$mI);=fL%jPAu0TT)akX0H@#E5H5*K11-lP&7#=pSL^Z5-LrLnVteE+hVl+\s5cJ!u&CG-\E!J&F2(,AJi=*n'?>FNkI"_L0UJMk,)9bRV;B9%j;>-h@8ArlY;8!Mc9OnY;s3\,f#-rW[pXTC7<SO8F4>5X"3q2JVm@Kq2u9()c-:I?o(?G5T3T*5a"N3_Aa0t?`:1kWE?P#Ae\NW6%?0!$6o.Ll63uH[fW^_JECj90Z5@J5Oli$JE0V1X$433.GdC8\co-[%8`UMuM/`R]9Wf:l0>YrI"hBoC/TGN*]Y'Y)iFrE1oC[]I)%RYGF'Wq@fjU[do_^G.RZ?MKc<qo*jIFV\WJ\Tl)#5IuJM*/raJ&,+&^%*J8c27>c*ZZnJ&>)g5.fqc6P*^d=r\$Y.er>L&bKDY%3%UFfcW%TmFiDIXX5[V*3f=Gsu`n5IC%Xa/ee8KH;T@DKhrEFU:is.Mf7X@_mOGrV@;SnLL-]9SH6`R*uZ4FBAUO',9mEsnV1-8rV5%2Y'T?Rbp7L7rQu(j8HZ;fZhs<6+]`P]PssfiNMN@%]<hGT=O]!'-E^5GfhnK0t`VT>auI+7"kb')"m>3emsK@EcPXkIqk).b#"uf%'b6JM:T.QXhAa/K)f9sSSB[o2c-Y8(M0#0aI/*Ed(B4+6#?\2?J++EQX9!AI3=[GS_pUO/TWnshAoDk*l*]P;\[W^I]]LCt;P8]o%ASGu(g;%*!HuD.IZV(KVI'tauD?T7Nf]^32Fn*U]RP>ht^LF6B4o(M^$'slR\)-cSbNI:mSp0r&;DSW7p\IQ1@E-V?!UkY*P"B?J%$6#H<s6LF>\Po/MI\\D0(rALcFXI4de!/M94:1EiSBegkVEc50qaobp/*8Sc/=YMRCJ4e)5pPFgrP?7tX(D_,QOXK5HpGb]k(MM8%]RCL5IN$EW@5)pc*4C7!?blsOj^Vm7^=%n(.[qQ66@E0n)/F!H>IKjT]'9AtLNFK>lVb?OZ\Qi8<3GrQr;*T<=6%3-]/#t4Yun/H%a3u,j>AT5+o3gmFICOZ<4,i]r:(n#Ys8M0Wn9;*J+)p]#O\b_tV29hoX9ih*mD6@1gqbqm^B`ZO)9Z+>;?gsi)ioEYm?u!I+$8pY%J]FnuHfVFb[ls?8_;B"TgTlBha3O,-Zg$)A@Jjk'Pn&jTcG\730-!9'8]RYH2EqjTI5j3%,PfP4<nYE&MlEeiS-Qf&,d@TO3k23-%f]IQqe\piRO2JId3s0,sgL33-YM0<8qo)lhIIX&f<2t^l=W[i<^ARig2K3j%YZ1TiXud;0QiB,3_n])i07NT8<+f8C]h6JSgW.Uc%TtI`pqq':4LBa=Sh-\K84O;3UoALLr^Q6'MJ%b^O0DFe_II>_ALYT*5*co([539h*r?BjYlf%$;?cR1-\Xn0thFNTBTVhTrAi+X8%NMD9h!L>m&>ran?mr!Jko'QF'@g>"k+@i8Rpbb&(-N,tbPtZTpJ)eQ,jSQ2R;>eW;R[9>cg!s;:Y,7G1(ql\M1hLm-HMrH!<&BnT%:VG(VG09JA@t.-!^UkB,"D&*"-5Le"3Xb8$"/G.5[`).i$0oO4_s>e0rTr.<Z\R4fl)3S*h=AY_6lH8N"%,>eIhB@ug>AB&$AO&U%/EuK,=.bgCY,88in"9-2YB+@;PE<S=>8FU,;u`B'pr2ap0_pg4Y7E0@p78t5*&fUmO]S0pa\cI"1#lJf26Ksb]iFOAb+RcLp=JbF%VYQA'J!1`o!'V,m&*1p%IehSNQCiG5*X9B?XDh;%oNrengqO]=%4A''rG=+NV;[QXL.8)IZ$^F+X4/)8R<\`'Mhej"h:[,orqafn%e_TXI`[<q\^0HMe#)D(XC(qPHjh\4^Vb-pd0No\3a_+t_lHcfc^H_(&H>iN'^17=H@p_G0Ed6eah_SRgf-.RCd_<jY9k-TR_8hr;%_=`>80KJSYa'+47XF&Pk\QQW8q=/n*nabd(9pSuZW].5F;#Ka'i>"j^-f-=#.r>r#F_MTi1`Q60;g4/VQN(UJ$'D!HV9ml]da"2'%q(I4C*lFpiL0g8g(rALSEEqVE>Q^j?F$ZpgSSG`@@/BWoq[NSlkJW%1O:cg%mH8^h*?W"#LHTa9l`8%Tb/NXM7Q$e:gN/Z_rI3HS%R9Z^A\6^27;L`pY@VfgDg_qc8Qp2f7o+pK_h"u*`B?bdE[_%RNS!s=>s6@#dk0GX8Rt/1X5AGSB[OFEFH-i<ZPS#;.;1X*E5Y-C?%h!0E_S_am,G7+=0nt<2`;r6WrOn*s[mP]U(1C6::.f'Il1:f8Q*kE1hPLMMHSjt(la_->9Ioof6n&P.L'(l'7AR](aG0W>,hOdkZ%2d8*'jPA\Do^@F-%DDPuie1cL'M&.D%+G%cG5#)OX5f1p7=X@*(T<P2o8g+Lg[f`2AO"S[Ws_RHptb+/4T1sl&HN_0/$/!V^M,c&%P??L_jHg8:0hdi7&!d'dflp+Rf(iB[dI6N?#;b8p%pspAS3BS(B"-%jL>j;%:Ra!1VhT.FEjL4&&M8p<0Np1/45<t;.pk65EPPKc%27je_5uR:fHDh;Hj3M:Q#J$Xr%OP3aZFd*i8LD,"\6Y1lrhR<A#i"P*Rb<)8bWH27',9q*)q.9JO"J#9[6&L;oWcFI0/(qlIm*\H%dH^\2(O4)nRSr^?a6-f,-jG;K@rL53N+GfbT%r*d`5`"&A:G?JrYLckbiMuX9_L'Nj:lg[,^)dmY'\<daTHV$C^Mk1@BpH>/g?(Q%RYRgsQs^SaEMUO.k6Euf$(;m&Dh9dD8J8mr(E"ZTZ7t"(pesOY+ipoTSBgb9s(\RE`@jfHO?33L%T6^7U$3*J>Dn<_)+1C0K)=Ze%a;Q:GcG'24S&b8]EY;7GdJ]/5*;<KB:]FN>^4^o`\qn`QWp"SeQcV=d.EaP-a>#fr:^UC9K7WL=:2LnB3+\bnAi%eGT3kpU_tW1?%aJlRMJ"mTm3ISjp%^\@4NZ$W53t:uJctA1nqD7'%r-eJFS<3XRP^T=]'9)^7*'G]D57!sr*KVdAX*@YJnE[]/i4Hl1]_CgJ6&b[`%!Q*//l2\fXp$g)[2DEipN+-]@pi9k3Xj1d#_'H*0C@#nM=cMh4D2a?AaNfWl5'?$c^tu[?h)R0?s3$0JXD*a=j%o[F4u0.\=WBJ&%E1aTQCNkIl<FMq\NJq$a.!M_YTGl[XK63SD#d9:*QMW)b(oPjdS*3_Xl'F3L>8]OKQcW55_7<sjQ/C8tb_:^6NPUco/d&.Z."%ha%<i-?S#i.dVd0mS4)eLW73<YV?P86A8+0KEs%Xs"XpM,<jO-PEU:S1](7PDLPh`iaslKI]eE&NWG<7>2$TYFeq3I(u[Y*q[F`805g%"S%KRgMG*FO[]TJ[-)GI'nJ-C'"mp;XmhIaQebeOWpl!kYOG9A(@tlejQkc=T5L"2*W?_SDgls85l_S"oc:[M<TW2E8a@=Ra5>=n%P1HOd#IP8oDkltWphq2j3O=4Sa@%iAo>.@c3ck7+CFN9VnD;RtWabS,b7Sr\'5U-9OZ#]2mY?;7!ffYhd9J\t#CGOm(oUdLCO0u<%oaU>U-8G.pA?@&hGe`o@0<Qq/_&LLT*]h&=nCN0H.6*tYeu+#r(n/FP%ueEEU,l_#VEp5&LW=KRO(X6'b`g"jeIuQ>pkA)?nln<U%!#t7qg#2)Dao:5^bHL)]A&#2oo>n'QOs)`o#:ut5gp"!ad;6,:?@m4eArNO94S3NMg+eB:qY'LbN-T0]5CYg2&7X.>6.*2Q/StIV%hVEK6*ugW.L5:Xt/Zmnk)NU_fV:F/E&1gYOUWpPW"uG>,#@fd.M,94\eRZO?.`^BSp+FD*\sHod^J/amh\^YGF*mXoj8V&YD!&WF%TB+YQo\LOK>o26IjOiQ=(i1b?^adV$1!G,U9,/1!=-u]0TTj<>q\ueA<6AU(NP%_DGqPhcDfb#4g"ZdFdG_-O4Zn'NP?5m.FaSYI%L4XHB=t)hp'%F5e==N:S'N3)hjBT>$V<l_BfU_!?bj]Io4-?O-c[46e7#nYZ[.\<YSfUB(6e-?mIj>q6D/*d/p;cGd5>7?ufpUBY%K/JFe2I:6E\lL2TF*2&:R]h\%L/<&+FUeg[gR\;J3fQY7h!RR[F+:8d(sA5[]0aB4bjK!te#I'#cXmS\o!jgSm;SM7.BO[$!Pib,%E%3JW+TsQTZgpNM9m*1jB&Q[h/"hU@D;cWO,&TU<[Ur9AkAAIf+:8XGe]QA"/BFV!kj?K9Gk^t.Hfkq*bM+-P7h6F'IBR5M1`gGV%mPHq7\oag[fhXVPg@ikFH`>??PF^#i,gkc:-BE)WN%7_r"\0=hO"5a040f2?fA>9I\:W*\:`3.+*5N]U$7&l2_hmX8B;`rPq80"!%oe*rnd]]NpNA)W3#Qs7Ig)._lJ%dqWJS&Kr=Y>;C^U?Q'>+A!NV8MgJPDZYdra+"E3p9m#mp-A<$%YVsp"(9m55^:4I*LM^T"EpQ%KO#1JlYOfV#L9kVd$4$!_<d&[j=Us05DIWrGL<$frj`@;DK5pagsNcar\?\(8><q&C3n<SO_=sHh9M58X$jj(9OsSV\U+SpAlHGt%Q"[7tOW;7U_W[+h'P9g=_a!3Uc\,'SjTX.tnLRgk$e"*F'3)lKf4oGICI=(eCi-dnD0Fum/(WRjgRS9AiVarM)i5;FT2E@MV+t&-%2YH&N,.^W/6uJNN@6jRjbFE6/CMT*"<9Zf7_!932Z8)7P#=u5p+1"`ZYJ8Ree-:Z=$kRNVW"%6rU@mk>UXa;G7-hgGVI+fm*H`lb%'qArF-S0(dL9lL*d[tA54dB?De#II*R_/DJNR(5GF0^PbM=uCtnVLs`ob'UP6u'"S`QU_5\Ok)3$G[BY[;]_E9Zj>/C_;(3`sjpU%\W0?!\We,S[A!0>UgO@U^H$b,*V<Ikh!84>fuUe+\\.V`Y1D`D3\H#sVRUOol@A0V^uO6<X`hiO3uXOj47AHt:YmZR4;U[3&k]))%PB#mtl28`oipop-(IPN:A,KI58[\<,6jS2k>:WbAo]OQiL.X2F/G6GP`Y5de1#!,]kGcW[-X+hK["4sA.s%GY=`cS^54\V`E82DG%)B>5nHT4!.E]I"KKgp=1G##E9?"g=#<BJTS2E3EDelABL^'j=SIQMcN:XP#BG.NB8NtJd?W7TGToSc3(eDTs+GaOIAju?+o@mm"@%qjK/(<o5!3hJg3Yd`"heULu3n/faAl'_N]#F(?%D_.e,i.4+<@lPoKUXCIu;!`nL?$>eMb<NCBtQ0VYILc%asFKE/-o=1V9#>\Gm%CN1o7I9oY=p1]J=XXq3)GY#iU*H]XZM[iX"bY9GK'EI,lTQ15#_X(`f_W;fZRN^R2jR$<*:9jdUJ:G;nZ1Sk3q<m9==K1707\f\r%8=PbT/)MBRGB%[2'(>c#WD4ReL,I8u$?5a!!djJ7%Ldc46(P[%Rg2md@KDF=O'EX\,[V;8"2/Prj7NK9-qEdrB?]C?*Sf:()0RB[%,O8`?9GrjV%)NH@PephPoi?NjoKYOQS[:o1<$>tbXZkkmjHW^[ffQni*5.`*T,+RNC'ZWLQ*he;]a-F"pf^)hr2lst#W&paraT@p%0Jkce[.:XlQlR0@GA1^l=WFjLfh!k]k0f9S1:$Xi75cZ]Z:;6"-<PtBV<l`Bb>d&U7+TrZJ:XE*&V6*iJ@K?14Q+9Jb]HuM!,^eC%&V49JR[I6N,dR7Ch7?otNE41BB7rW.L89>V1)_%#f!mR,8eaY/%"ZV0@S!V+/?L.[C_q6$\0-IC\GZ7/UJoOC0/p(2=^4j7;g5bO%*^Qj=dH'J?gmg_L)>WUtre`bNLn]>;QVI<Y[;e49\,Pb%r`M6W:HhM1c@4T^>H$L:F.ru;B\`U^bQt8r&ri@ki)pRmF8Z84C`<t'%2PEZ*gA>:@c%#LL$6@d7h0.`2\f$^%o,\r;nlQCY2mV6TmCo#l?JHQm]mW'0I<eDJ_.NSt`UM%%[=cd=Bb5g6#<(_VZeRY]_fgf"%0Y-0,@6GDN/F/R)S\5=H[B]@:Xfg!/pBtf^mHq2=5j]tMeTo?4!-jB$`;srD:?S>Odg;sB(SIA!h6a=_-N::M<[gBd$.Q9\==G1+%.`(4MV/030kDd;P]EZ\t<m!0LN.)s&m&Mdsg@kdmLpqbEMV+:8gK@MXs8:52H+:I["sS"[it\TkW,/<"k5=<+lAm$taMu1l3)aI=%q?90@52Fi+alfk&p]'-m0t0P>O-Rcpk%[MspjZ8"bZ"fDk16d4%k<^hhVZIjTD^^6aGdJ_[E-#\X:cE$mbh8ZhLAR_bh1"=.u3eq%'%oP9(Ah3j%!^"I,5^gYOl;6j/[GDZ&fK`Lh:c695p`h<rn+4Mhc1l<]l-Z#\$oN--n8V69YBo7A;%"N(npKY0@(g^Yp-0-i,H>T%%O]j!&&W!0J6hgjQ7k_a;/)HXN<Z76q,Uo3]`(Q!=0]n+-8YZD]^`rsiX2`h@WFtk.app`aMr>FqiNg"lP:Rc.[V0[r]'r(TCd"s%XLL%6'&B*kQGueLa^)Yi`0N"J7=LW["VG"oSemu8U&)(V4(<,Vl!G,qZ*//JXc8aC402Jg4\Q%"9H?Qb=>3a)#)5gfZ&P_?XDIIQ%D0oc$#:7U7nZ3Yls-XsbFlGWDj4&Q:^%6>oH2mmCpWqa+cR&m/#Gr:rI=M"bipYV"jlP[Ks6"C`n+kGWjmD*7R:k!,T9_DpPAoXS%r9qTN4H=3)&f2P`QEPE]#D+\"=+6t2<uWf9?Ce7sn.+T=?AXfVci5[o]3u<XLX;DP*1TuDT*@eE*[^F/"-[[sZ[_glE6V`s^&TtX%GS!9teU7RHptV@]3_N4<#)6<*AP@$T_?,!E=;c$pE9Pa-_Oc1m?e;(aG=0?47jW^<2^CbjomAU'quj%mjo3D\Ml5+en*<(4dC\Lu%kHCd*kMEkCI^kbN94(qP=P\>+O(Q.Ehp/E4J(ak1\.K1APsgp-rJ@Ql@I^#<*=7A4^!4hU]4Xlh+g1E;!L;e7Gq+ODGk5AW#63bF%P(>n3Qp;9==[44UQCq7+YN2[6?^D`&inCaC;g@_e5P"-mm\<\A_5IFk'Jah1E4>borh6Rf`bEo<<ugMnW866:^,^]<)-kfYOKs1l%^0/cQ5M1G=Cd1jhcgEpM!/TmGT+a2n+'E3G^Po_S*YrfTY-@Ms=1F5S:6TCB\-JP4O50*ta'EF\4":>Y'A,#s'hm#6I@bJ?=4^`c%ZZP$u$-Mo9O)9at[YbY,jo<F0Lb5U2NO:b_<7H[=5An5NG,Q]OiQ1ieo^_bAf8C/GhN<;^^-<XOB$#@<Uodr83!3MjLb5[o9c7_Y%jl8,-g@qIumIr^VOMaoKShEUc*gr+>nL&1'$;;+@csg/@YMA.-3A(/1X)+QOR=Fe`eOS-;Ds>SLm<%u2jm&Zj%=^\^bLahC<j+^s%X\Pa'7q/!T)rC`qfZk8EF!Di9@bHh-iN`,:WG$W!m%Nft7N)6%gumPn%$27c%9i2Ga0h*a#KnV2ak5>$lJ!tKBIYs7GBl([+bquJ%bIP.s#MRV+*d#5fCJ2P]]JbG+>)5[\LB"8]F`6O%(QasC/!Qb[Eq=/Lrp]X+b1#U1p[Er>$Z#"MSVuUuDdI8(s*K$tSN2C_iAAu6%kPE@dA8F)/;+IjfQ;pF7/.L%UkUtnRYO2bGnl%ejUI4RDkWZ2Jd"iN+$PmiMaY3C_#f^p47.=\&lYMmB)"?SLosa)6Va(qef]a%-%3`.)$Vi3kub0815;Hn6l/^l_p@kda_'TT/ZS%l$e/:-n*d]i^s,/[`k(:V"9Psm1]fBm;"Mr&_14JV:N"%0M6P@T^4kc$nNqu$C,%_ZfYCjE`0#\1),41iAf8fjhk7l>hN;PHh$;K@T&fD+LPEJqMV8#!!.,kCS?:jT\A9\TC\fYe&V_$c22+i*^]<_1A;:^(_Qg/r>3f%ksrS+l>hMZ>d#4Q#HQ#Wp/#3I=)bCT,*+=\e76>2l>hM_(-QI`3*>!%=jb-)$4c2:BIYs^1Y-W`_.oReQR1q2i*^WB*1*M;Y3\ft%_<S#D$I\TJE3Qq/@$a",<,f'_*p]]]@'5'XEeBqS=F%a!Nd.YkJqMK:H+?3lHJ":1K67Q;p/Z.:]%g]<U5*Rn%b<%SfS>'2eV2go%'KrNtE3Qq/TIkKBA&6"HZ`q%)@Jte1e`?uc:ZMum%X(qGYg\2Ve`@"I/:,rJE3Nhdfi>l)>Q[^^#!4Ja=C,rCIPp3kMe2iT_GG0k%e*._*Y6d6U[g/gs%KZ`Cpp&VYriqG6nM)N3P?J/M#DVMM[a[s#PG(W,/mHI"S='EE?&Xfha<,$6SZ>"VO(RP8&$I@O+P(`qCm;9'%>p%Yq[ca%2q)^nOb/F*2=Om&J$-+*thZi+%RoWJHMC`R=Km<'[:L\p.OP(Wt=d\ToncT+K3R%2*F"4MYT>oQ=r35!2pFI2h_hT6`%[<:V1EBX)>h__AM52S9N1\n=2`pVr@bt4,Ri5B=?hD`"QPnbrpEI`'kdq.p?n"SPPGJ+WnbfTFZGjB8;oA].DL2$`a-N5#IhmX*1%cT6,R]'F^O4mBmH9hb"la119:@+gqCl1Fcf'E5AKUIg49;H=K;ImZHjd[pCG9l/8]l)o1KLm[^LOD`2fbY5QenZ,UMKJbK1AZm)c%qAED]A8'#(VAFF-2EHgDe,:!SP)@`e'rO11SBHnQLXY<NKRPS7S"E`r]pUQ=3W4F)WJMs0.(;._f:.ccPoi@(T*L*WcRnJg'$'nk%,(e8(&*`'16c0ZU\WfPV4804'?pSH)_9T`HP18<EJ$="_TZH1hr.CPe#>NoPBE#^Sn)34*R3.e"fsp;Da/cZcDA[G&BF$#Y/g$_R%n:C(Rl14$+g[3Ji\\'$RT:,_)n3?h0:7q>3H)AFiIL2.JI5Wdj[(*cV^@QgJh9+BVmG!2cj6=P[a-GQFO2(_OT&0LnZPb%U^YRc&%>^87!/GJr+ZVfqMG76.??cOjPH49a7*q5aQ_Z0*)msukM`8Vg8r-lFsG^cSYkX`V_68+5[#9?(5TIZ!YNe/,JQmSD"(&\\W5BsVd%3oKNNTZR4b?f&R/It71+TD@?M\'GQ!Hd=>6F#sJQUqC>=M<@%6)+`i/D>FkE97OB7n/m-F-U$`?FV)=Sq'senr=Jfd0(^et@?BIZ%;%fiFqr^Iug.55BT2!:%Jo;s^!MUniZoAfsWo7`\INh3EOAm&SHnPeoVGdHI'MaJI5?m7SiW##%a'KBKfP;MmL/*>^W/2T^f:[u!%&LAU6mADH'e2%rEBa@8PdlpIu1<oq"U?krp>2U,;RT!)5Lm@\u<BnLlL0?M;01cR$9&N.2RnfC&bU8L>BKs?4Gqnq[LG;`da(N,@%G!&Ph9M8fW@!^7UdYcpW@1mS$.W%R-mnD4lJuR.(,>#P4euI]J.WA`QZm<Gr[8r8()^d--"K)I8!ur"1%;%-V2Gk[n)N4j_?c-5,%ijM4]ULp7;$,bHd;eVUj?E26i#+i#T'W84JSsG%FTMdH(fr%%J/P41q_J5sja1^H0E%8bMERA8L6GE)U+9B4#\-!NtKH?QWUYgag%LWnrRS$VC7('Lo$5oodBK1PTBb)'+uTTl-q$*B^O21NW(6XY\fpD^o81&$Hi,]*ZV\@SmjQ=6ua%]%E?a.D\e_,'0e`r5khoXhl!%4.#,[mk6:H8A)>*oB>?(s#RjmI51G3HM@+l_E'kDhZ(=gq/#]qpWO%.qKR>`oD3K>B)1oomH+<0s1*cS[?4]B%]4G&:Tp6/hYV`k%phQt;&+'4B]"NVYQr!M>D?&;]dbhga+'?8VH[bY&Im71]p^q]aWnf']/q<p!p"7_I]H6q4p[Beb\(/P8nNYQbR+?FU07H,KZu%Jr%E2O`&:RUY8D:M3J4*m:kV4UJ#hEEh\]6X;Nnb;;@a/@CEqpSb]RT]77p@&$(q<?K[G43?5rTVQ/O"f0Rq)FpH2bn9EXtT8$S_dV;%[r/.)joI\`XrQcf9"b>VJ;\u771=&n38!1SNa;]i,WkqK0BOX_*OsGUDlo7u2S]9!=nI2TdJoJ#s*p>'Z)SF+55aC5n*RG(oLKm;%0,Y-,lnu)pVP`'LCa#3]?lp+7[[#$kh`l$Fj&u5NB*`:dqgDJfFHcHZQi?1#^/r@0HQ!_;)i4t`;!X>m75Ke5#_,Z7==F7g8o]r=%W3!u^fLOX.3\o_\%rMMXb^f7$K0$$[RW<++>%%c'=etnF:<\n?']ismMa8]q-(AQ[fP-'U7"/rcB`Jq(q#F9?V,9gD;5#pEJh7[k%OeHJ/"4;4X1+i,arM?tj0EM@6:nrPI%N@)^TcqDEX.aeNR1_i]Q\.a=W$q\A#-/%GgjCGD,=Bp@jc=(/cHP%COhfTYeI)KPN+cTM%BHD>e&e1]fMKp]LeDn%:7L3V7R7^Ska?6Gb3&*6sUT&r(0EJ/6?6d67Vmk&%95u+!0ReCq&=,=J[3<A%I\)k@&Ah7M(+RNafHKB5%IUZ!)YQ<K)k)R?;8.->E&;2fT+OZH5j.>7%o?tS(r$40V%LkBC?7iCRK%tETZGd,7VgU7jLmFo%58M8c$8Y;1o0h(r`Ul(@2,"Ar%8d52MQUu`DLL@6Tk?'\6d,*<i\f"MGnpZr=#D?dNC&SUG2:,ed(/:94_c'/FC(MZ/I;&d!/i5EP.mo3mfHK4c5$E;D^"__#'_jkA%32#^A.8k^TUkiXqLl%.$mND?_OH^YY`c7ZN>+ih`04.1+gNpJ&Mp3g47o[Xc'!,ln^%$d9FT@.S\#<fUe1c^]o:uURQJYhg)KL09%7N^mSK3mp?d\%(q!H]Lu!>h@E2*sN[l"$$U\`LlJnAZs!Z?%^PgPKZd^A(Q%IDDom)#973?AB%?i7sea'fI?."OTOHI8<ClO`uTs%qe9_e\FLk#X$BB:\U8oW'*CA"A)G?40C^8SMu4t\1p)>KOtBC<Q7a=F)%(_Q`(=&`-B[aY1jU+32R/m(&jum[0.j&P&a8uprcSS7%n3.9oH/&&q(B#s\2EHhB8RX(M*d<ud=]-)Ha>4O,]H_PAd`rAGP,Ii?o@lTc0C!2\p7SlUd^_#$kUfGloUG^`<$.Ri,:fJJ"iMV+%*Q=d3])Y92RbBc3mKP.gOcM5^-N(=@Yuj[$'kS^,MqX[]flOBJJW@7N^h6gfV+_7[RBQZe:$uG+A.\6j(POu78Fm]7HX=j)`q,"s%%&SsG$^No"QK-^:O5U/bc?B.<<,"%H\+2jC[o99lOa_tqOh>"_@29Ca0l9BEBI"`^gamT;WJ:A&)FYfE'[T`?\;;ecFR&u[7.lFO%OUbL__=@h[,hnIB'[VBDH/f'#P;%sb0]rlW!QUS:,Lg1)QV,V[8i55n4s#8s"98fJ2m:Tlm21ODe!"`UM09Y(1`Bd%:nC;mkrB`'%SnudWO!176@S8A6*X8u.NC8^.Se3T(lA-V7c@?[`dW;6U/+@OR4Vg!uE]q1.QmUdF0cD!W5#j#[X&NVCW$)dFq`JLV"C];Z7!TA/%(ro8"bHqMHo@"s0dCZ>^KgF\.d.@$4AY_'-U+"t!BfU3bR](nO6cpe(;UAZ;679?899V&p[tSQE#?s%^()b(B+F`&nWUND?`;/L;%1h%ER7n),hd!X4hBfFHs,[P/F4dP.gMcs)$3"[@@/1D[/8s?uCMs$4+#.+@n`lo^$XRR/<B2$P9j9>A>)B"e;gUVAG2F?F#KdQtm%]/9P)3"[S>6:Z)00oIKF;+aS@UJntc]o_F.$^*Ws4Tug?gka1"!As2-!Whj&[%5^n_B<<V67n\aNoQ4tG%@t!kbW23%A8!FOd_jH%Zs98:7\2N9+&LG)A#bTaK#]H(D@H*P#RZNcY`>d:(ddc/-O.d+58iElA\H\+8BHEC<u@CIBY7e(:&Y!RWJ$:.^Q)9&BM#4+Ko]0h%f"`euT<R1R/3dV]_9cRAGgdM+(QZ<RZF_VY8B0VNA!A"1`978+@T7]0#3n<#)>&)A:#m-h*82N=BG=:sYju$Mb^uD8*X>87(+9b#%*(S_L*"/=-@"*GKcoGNbl%%Z0N3ECG2TU^/L)?T;cLt>Vne4`D6XsU=2kVleOV($Bq8hcoP5):B@:D>bR-E%\FC&Ji54FseVbS))%q'Y-Z.T"P;WD,R*d?ALD87qPu9pJeJokcfEK7IYjZ[7-J3gj]c5Is1Kf$Y9ikdSQY^o,CNNX4g(%Zksd'Lm'f7sJK6YXud7&(r/C%BPHh<^a1jrBKD+%1Y5KSO]J`@X@GS8E?!te%m]`]aRrd</]OHglaNOr6&%gWr^#21OVURs<D9%h,%=@SK,nf87U`,\3@IEa=(pJA%EFp&A=J>C&M'XIfMS]A"0k#I905447o#-<T7T#MIYn>9n5GQAFTGN"@Tj^]d#%-o<O:<N,'_/YT(pdfZ*KR_n'QkbsLb\4HQ7A4H%_bQuDK)qKs9M-NcO!)5*AeVJ(q;'+3Uo6CDr$kq5kcF;GnHKnRQ$XP1R-8*<&cuYnh]/da$U`1F#hfur@&ektUEm5tSHbhdq.@\[%/h>]GT(Wf7-\41U/CWg":_Qu3bFVB=eK><9B"ZcW6MWAYDnri$oSV@3r'Wf&P?5be'M,GO;YHI<Vu^(cgn<XUo0#H6G\2"iQ(WuU%k&b/+EePj0B#?;na;(GjH'B59'"8*B]i7Zr0.)qak*@#(&P:],=4!m\FR$)s&Z@2Oq:sAkAq!(6N1n?MK)0$/)C6K*%a:W\0qElq%[-!nZHm_h@fQT=o8?c3>LJU?N(]#P^N5Q3:G6HX[j4ik$RRJ+)a+QrK2\+*kT7ep0RYRVs[t%U<n7$j.I7bt5&;O+:N-'.'Rq^)W%;5A@68Pi3WLt*V+Ob&gCXKcFqJs]?@fg_+4g3/?Hc(AFRN^cIo@iCr;/:iF1@BV!C&fPTi;9At#D$*r[P)BHC)j+YRe_-:KMOs!d%/Er/-K=89EZ#d9+<;,^<RKV]a^_Tdu2.rf6A+856M+-qCm+E!:Pg+AlopX9]&c6<1F5gp;Kd=B"j%2n.aup"U?t!(m!oqC%W9^A:%*K<`G4&[SWdSKXL<ZaXY"r$>!"]gj4&#`nfqOj`TS;9K48k<bh^e=c)C`k5K1NWj<+Ya4.N3:Zl8W$JaLW>e%HQ"5;'qYW*S)7!>%P\"O&prd250mADek4-jHDZiCoLkCDB9:&-A._dQ7r*Z8oY`6W&Us\ZX>*PmHYG(*4-D@#aU&]MPNKfaRT7fl>c&:1;`JNb,o/r-i%li[GpW)GU!`5#&C5;=E8L-I;j1B,<rr.:`%n:Rg=j2O]Md/_@E/m[U8&Bgb<6/iMOSe%-G;.=\aSG,=n'%h:!L1lgNGXed3Kn;Jo%e[#mJX97Q=9_tPI`bgr1k[jgYC).T&43G'\Ja+\N#UGE"K$_l-OMWc/lSCi-#VCLdV\b#\B,8A)4W9e;^"=ke9QY#].&2&g---\+%faHH*Dkrt[bKaITl+k4sL+%Q(7icS#Jc\)I."R@pTMN?D[*[+CTOS]`q'TU3S#qN!C)%[+W1+b2+WiDO%6Mg`-]KMk"Z.q43HCgD%3JoXTlAUOHR.AF/5gCXJZ0$k7:<iV%@mJ"^)T3@d\4CBPN)&pofX0/!Y[g^I3P$F@9Jl,`7n)/6SI!t=._@QOZkAg\;it]XHYdRj%\-^1o#41=UNCAe9%K(U8"pZ))R2-^3)SX?YWGQRX`K8b1clkK!TFY5_p/<\h=B!B;Q#$h('ktC,=WPfMF*bGh<NH\_n"=:QPPEFL%KW5/G4D@`+?)*=L2_'kCdo`p/E-7XdhOGt\r&QFP3oiJA(X2->b65P9)E0HA-X7J]8J"o,^ISn?E!U0M!u`5PR5[,U/7jW$WU2e_%,p9Hi&;_kNj$Jp)#Vc0pli]H'[5i;Z$@2oiNK,CWhuQQk`\%e@jW2,s*?-@\T>U:ZR_m(7J^u'/U]ID"*.3]>hhe3CdmlAi1#bQ=%CBR*W6^=6Unc.7C0@2tGkYO8rH97%gAks$@R,;L[8>eA=!#E;9>WNJ)0ZLXY7r0AA4Q=%;Etm[)D<<$/4,ZlLCu&3?U#e3M=^[tV%'GHGr[(o)Cq<a+Z):oGHFD/Z"b-Z*>5K5ZG0;=-?2-OY4h&E"ShDZI1c-#U7oeUH;G!_C$X&S2Q"FVIL9,e_]KP4aao2eJdTXW;i%%%2h%H`.P4Sh^b^*M2g]:7.=ObUf2*n]Y`aSHi^%)j4\0_:-NYY-?FiN["b,ZC<NVlBo:D:I_V0Wt6.!(V)jMk=g]OP0lo)FR;Tr%BoW`,NQk(kKqpa1bokdnNS[\^:P&V8UeH\5dOPCk"ag0U7?n"S#C&?PA_]7192go/p/JhS"I=h@>g?g43&.Ur-3Y/U@/4bPJ6ars%@)H.2V"*fpJI5O8-tRQ-U2u8C#Y0PDSnk-U&L1gq]/tQ]_O-llXS`3):`L;_#so\k(C0XV@eVV$&$WD8iXDsmAiE^=+,rQ+nD72P%&j%pVD&rD#mR^fY0[\+U.eK.NJID9m9>&42D(u""Q^SqQfs^FIkKY\L=i.<pN<VYjrY-$odNBb3Lf$E"OU`s_`(EM<#\1rJ#!J+9%db#CSRX>lel?IR!Mc^90(AedL0HC\Bo$6s;R-4Rf!YQAoW&=H%4<kDWJs(p#`n5N-E#5Db33ei(gki`eb#q@u&(&0QO>AoU2$?Q1%c:GU]@+.QTk@"65O&Z=b;W3j>U,+'%jV6((-lArSAM:ta'Wj7aIE9\\4CLQ`\29rnXC]"7j`hBa@S_<qmSl6J/1*u1X=D"6P.$7,%$I/A_Y]IX\-U<<-MG>'P4nDXI7D=_Nn0I-YAiH4)m!_(-"*#T_`qeb1"1V9$/SioK3mhIfYlc?DK%nOG"Q^DfaGWDZ/UO8K&[S7#%r=T,7OsQ!dR6a\V8"i=eN<Oq2585JhBN/hZV^-G",),tTc9J;T#pIT"764a?(*A%F7n.,D$WEZl?o%V='K-h60h(>9jueB(H3P,%%>c&1Zmcu90E@nsd$Uf#KM=EG2M_Z#YJhII.C`Q0gEX:%d)6lg\`Pa4n\.1WEQ,q\c-khr0J[XL,77fu-D5iam1eV4#&eQ4g7VPI?%$k(X*/>mVA!@[XW3ia>1Wj%=S3aop@kXg2V\h]@\_bqY^6`AXU9BsAgO\0NkD*s;qR(ZmrgmoUU:L:u*7hQK,,"+4;(8#?afY%iM%?n0Q4!sAq<kd?gX#QsBEF6#iIiP<<_+WbM:c:R:JVRQf7L_#>P!]@72_h9!rN+s_$-VHhVR)M@IM@mN@,>:te,pfAjBWQNTo1hg2%@$62e6`J+1"K8EqU\C&'5U8dU%lr"FP<:ETF!E>.9r<2rb,.1J4OBg>(b$"o5a6BsZ-@iuUEjcI"3h3P(K<[V(<*7gYOalV<9J,i%&9jt\!8'17R[=\ID&smS/J4AJZ->XpM^481B%oF<ZaP-K-/YDIK0.!W,>Hr:QC[4Yo`B$ZZTs+1d"B,JE>#Kh@J<KPN:"f/)jc#0%kAlS0r#BrIr^hh=8oB_n>R@&BGpQm(FGQlp<'"P0\@B-`O.Ek>)1t`k/.jHN(oWnn$8IGm,l*nBXc-A*BF-@?LE/-bNiQD7C[NSR%;GSF=-C>dI:+3>O#poa/[SRtS-3Hsi@VH.P:_'ubE)hFs;N_PP#7,/^7@C[nBV<Na4[&m5LI<S'XpPe]KP"JSUKObBW8d[+/lI+m%=X5u-&ej8')WQZX]IoY6L]HBKM,bE"6kuLA=Yf*Z@ROHMLSno!k/A<L_`Z>YN0OUS0F2,XO-F3P0n1Mm,q26@5U]o3aY(RZ[+]FB%gl+GSLm;UK--Ubi+i#"'o5W1"dFK\`7F2Na!Hp;3<_KgU68Q_:*kGaMD5KcP&'[NBCFgWQL1Wo411+->&f(PKA9M'gAu(lhR?7s'%]$O,+2?L>&(n)?,AnYcjPX.+I:$KX9-W:-Cae5%=)[lTg1m=TG&bhfhR>C2]68S-s9>qOPcqG'Mnhrik1%lDU<XB"d#QlV[E!sq/%aA\lPWkd7\'P?_-ZIhiM%Kf"u>AtoXPa'_$,CZp(cD4G3<+dJ&2e`>+@f5'R/A?_E(rhpeJH/km-43WsE)0L7&IIS-IY9FV3LU+a%3n.tlYXJT$1H6&_XT]5Dd@$dn94e4"1C:r7k2D_Q!-hu:>BhJiU^l$+_!k%Q,^FV]<Ab>eD8Rt?@4o>O.GS*WB-NPZ\I8l&+AM?!%fNt6n"o3(`eeiDbR@&pGM1NS69VB52Gnh0fRF,8aVF.c\9M0n.=c$d9-3^05i0bEEM?C9f(nMUjc1&q*'?:SF'9dpubAYXB)Rnq8%%*sl3)*AR$8.hGMJ+nW9=:>ngR:0sO$:^`;4HPa,qP'934;524Wh_i\cc!@D_D@>',%"6=8<_#0UD-LXKkHROU%@bIPdXH)C((>r%*L[)VFJotHM(Q_e*hGr-[L&O^n)WGq":NG)n]T44%aM;O3m'oMQ#k/[pe8%3S+)gM/AXB>a:@.D:lJ(K]5S!i8\M?O%8OMB,#LYN%0bZD(1F[2fCM31*'IkTj1P+,1cNHuG"]`8gpe9c&1_=#b!J01&RE&qubsWp8h5A=lcn;V7$t5*SDutVc6?Qs:&h6@E!^X56&o&CH%6C6"mTRfdFJS(*BA)%eR/&@a/MB;E2'8+DsV<I*'`.MkHOr-69`3_;?-:T"tP`MqUbT`2i2CjV]V?_B8)a2,B7\*E4EE%L:fdcfn%,D:>X^q_P@Df2;+Gi6P!M*Q)Xn[M7Zej('NKnjNF=L<,ZW^/f=H#KG]"O>I)a>5iTR'Mtam[A2n*L`1El;2=-.OfM>Lb=<3N*U^G%F&9-R-Ld2[T]2dCU4+$l),,;;#8%J#L(m"59Jb"K#TdNmbhf'RPggL.#;nt%50J(,kV.*lYch1:C;uuc$E?I9;G_F6:-jkZ?Rge0%E!g>RkSse!=K=4^D+`1nRAHPX9cJN%VO#584K77A/d4+-0g.1VWX>Q;QdeosJf7S;N56[3ElG!pGW#^?882J+mkt>,8$aYC))Y&Q%c-\KS27E1MZ4p:):$+^''NCaj=Rn^;"Z9$YRH/083t8_@Qq7'ZmR](?:i'W,`3)JJk+L^;q+>I/,BIp89/]g:P]\0lCH0.-5,=>o%@<56cWce8L7,A=)ZJl-79tFrefYY3k67Q?,BJV@]dh*HIbj[EQH:matC^qqP43n]r3'W63A!,T;=c+.R$:BS<DhmOma?PJ%X@/TG%#47%pgD@?19gM2kT1UIk"VnrSW;qo<"Vpd7+%\YaUnD2T57drPVkD$HoX9q-kc>9=d;BsSVk?*<fbDs&bAIZ%f#K<F(!"1O;O`8q%U\;XXBi@hW@-k5kMt+20@8NJA;`!<^3:FfeO"oBkjo"`fZOL_?X+;\JH,Qo?$rgaD$Phb;<+I"VdS2_*ea*GWZaa)`7cG8W9gNpS%eu#)u1O(9/W)*EiTUu0I!U5^NY2$Y2;u'DF2H7t9`:G2r)_ai0I@`.H'ZEWtW#QQnpaI9/ikIF7n'mPKEdPTu^49R\K.t8H\TlHq%3K<._,SXtpS1-p;'n7E&)7Z/FR)p"#PhDZo9/uQsJ8u1r4:Nn2LW3stDhg77)4=c'ZoI2B@\!!,`DIU1@Oh(pMGU:*BoM(J&_8)-%U&^klr3DLV)Bm(t;KU-ePVKUrM@&sI'M._<J#&HXmtiRGi*:86,4X'ens'i8U$.D/nXV)3ciMBa"UMr]("\;59[<HuqLVXfT(E.m%O2BN8Y8!N^8l!3Y^R\1:M[N`3>%Hth3^luE"ho5DTm-3I58$2bLLFiTfT[CK9&*oJ+sCFNjT7V<YWbFsWb<4^7fZ9(66hPr]/)jO%5L8_`9M`aW#Rq'H(uC)qL1.=8$"=J\TAS_'TGFecLa_Pi-NHj\Lj!qTKOB-qT1OWt=Sp&brR=;?\AcfEg[;NWOJDB[`/G2rs2\kY%)Z.u>)JY9R]1@!BSLFJ\D">8:0f)+@m#S-XK:8PTmauRo2C6V19HG0^m%pjSQq`:03T?P4GmtFbel^AM*!K,W&RtQT,RI\b>`#D\%CuXR[-AN&"KkMh8^XB1MMj.8NV?&a8DK8.,\&RO$TT;m5,8RSp#F+;D,r'2DYZl3!C!.LW7g[FH264ilLc/(C=66.3+68]^e9B]\%%'E>3jMd`$XY9u;>eHm[^]C`srK%;9L_E!KF*&1Q)B06@3=Fh78je[I"Wp;KTA9m;+:^rPag(9'-l$pQMfTd;aub7RF*38f[kCr3%")([3f?m$m$$12(+Mn3A5Q_>H,uR<eRmY"-8Y"1WR#]fQYI'r6ZVUmeo\f8`ED+/5Z=)+X)?<MASXbP#D*bg<_Hn7eYHAA4eCI]C%F[h&J.qpJA;cMI*:$'Ak1TQDK4=G>M9G!)W;A:T!gZE$XQlu4,%.Aq1,S^hkAC'P"7aP'tQSU,%-VTF"kTXY&IG0Utm#P(7gL,fT%K5-LY.:tJ0$nqqn;k-<T'o[*+WI6^(DV020,M>[l]J#7!p!b/4b:uTp^\D2;$&]sk.2JoR6us#KEf(E7_4/IW_*la?>W4VQ`da.`%:=[Pj!d[E_P)tI/&epYoMWJu<4>E,'3,F-7W6.J[g6W>4)]WQG!t<XL(cRFRc08N&N@mY"@q$LT_,_^2$7'8FcNtl:WC/ehX99H1%Ki)a=OJWEnf9p!AEaag[P?D4cM:Ne$Oab1\a6)L13__Ji@\ihnAWn?o1_g=a0Fhcc&lj^=d\e#+7$Gj*!:(]&7@Igf-b[d]G/Uf.%r3haT;8=nnqQpQT3E^2e<O$'W@VF&/S>-\K?$Y1_,Gp<PX#pe%$LSciZ8*t]#t::knijY<M<5bM+5,0f%0mB-_!%SV8OQrm$R6<8%MDt`p1cQZR8P\"@GnD!kBH0+&F,H(mJ^0HG!\>@3,.GP/j2NhC#o>U_qp%.AhX!hdaal`AA*&i/BjBa$c#;02;@@drk:hf95m9cA%EL*@'?L4%-68bf<L.3Asq#k+L7W_(B)T=:`P)@_a6`8g@#_'p(Y,1"n/t?VQ2@GZ&PA)/LnA&G2@<No)-Hrb';cM%!pF%l7YS;-Y%V)tZ=25gmQ^-gqI'2ODZ-S`@rOjBE9?AaGE;ML'5r#j.c6t#-CKMO2N(I@.Pa$g3j@0\.Ia_rPuj9rm4TgjQuEWq(\EoNQaX%lF@%lJ0,M-Ym;7WI?XgnWZ?pjepsmJ,2b^W`oe>([_)=UrEjj"qko;7oUhDFe'cRCu?Ne:d1f8;&Ke:0mEtFoiPur.c!uf<'n1uN<&3Z%?'stLUd[`j7B;!'k[D-._ek\_eN?*#U1:VWN6>?ICt'H*6Gp87-)m!OPF,GonCnNYl5X!g)<HV1cDZjC,N<t^Ytb^.64ql#S4((F%-;d-/c7nfL<=NZH;0^ZN\rJTgU!WRO08`a.8]6N4r#Kjk"IM_p8X`//@UJYlH,^.*+*0n#./j(LB1e9mNS_YTH4o>3oYg7:j@Y;o%+O0Y/re^so>amR4*7k<DQl)917];9X[6UMFqsm"4lL:Uu,Gne:;2.,OT/Er%HqketLD!]?6&lcq@Kft/4U\PAUWH34,WeQq&#=5h%$c+IVD9j$IKsJa>]k1GVKM:4I;$@MT?)0pjZTa`oeh7^+oJ0ai_;ZV<HWfKD(n3+sq=Nmm+A7p,SL5I)Yt:(X[&kgq:W>;X-#56T%RN/p6D$12;hPg'EA4SToLI,KWcA<H`H6S8iB'QdtE[@;ndWHu33Q93@VT$8;k,Gckob!2#O:s2Z8pET>"1n[t;P7`!8p%&$1M2`g%EN>$ARjIOo^fp+mU:LQ._CQ7nN)@]cLuRJ*e`EVI<Fd!0AVdtA3&3dY2%j9="DQmD5[l-=EoY/-P%7!`#/Tp3,McU*$IEOlOCnBc%oL>M",],mVB,-sUALj*O68WfrRO?!PMAB''SH@&V;ar(s4=p&GSuOg"$@=$[=EEDP`Y44Ij)_(=NBBdqr0+)7$e4".!@'2)cUfB"%W?>L!(,;7+X[=;0T&Ta&2UiBW5K109`PC(sn]BGG)bZ*OPEq_e4$md<bkD`)5`s3M-Ka$p\REO1QZF3AS1JGi0Zi\Um*"UNYr/&^%O/W6J<Ql73%;Z4FG",29O5FOc1BkJ9M1fcV5[5!aQC%PP.]OE'K3ct.pbj9]Up5q51jU$l1iZKB;VT&9kT`$-PDW2'at-)C[*=L8%,FM`)6).@*)>VGi?E&aC^%O01gENbrVCNJooVF67)Pk4q8LRN$&<n5M&_C'@f[GF/`i:.$MTc#2Mg=[>9?@B(Ou>(H&>2m0B]?+O%/Z=i2^8)R!.cScb;T_e(8?'--WkMH6/h?f%h$DDUj;]j'qLilD<4;,q;m2V3V_eQIE2kXR-F+LiKJu@=o+p;E=ZaUh)MZH4BTqu@%E_Q=!QNWbC)0GAfMQW:D(2ln/Go2(*0#9#0Yp(*-U!W"?XINd_ao!D)HFZqX8;"UKjXUZ34;<43@'-6n@/<D:Zj9#b52DKi84Yo)%gf^EW-Cp=h`oKY,1mPjW4!jYAdU9Pj_qVM9a4<jP*El=daaTTP-)Vp7"FBCeTGg_%26#GIoP2Od&^[bCYW&4$%PX/]oQDG/H?)f=%''%Z:-NY).aDkaD$!7TRLcP*!jZo8srIgIZB31*_i>?j0WS%\g\KtB_"$*5s1U%bKL6X7TV(KmRo*cdq-";7gn60W_k8E?Jk*"Oa%MP3JG9u7n<(DdKTFXbkV=nP>Y/?6sjA0\GEe.YN8&`4aWl.i&*2i2W)Hd\7deBYP.>$"tE*2EFtL%%erfEh=A(djMh91-J+2;p<*%CfQ2=H<)8SqeqK3/SI_Tb_9"-l[h,Trj.^G/E3S&iXs[]elkWW0P20!B/%=a&FUQt>P(460d4pWLmL+i1pkJ1@U7L]Um=_J87KKL%JLs*_*B"FF!V>["81pl,?'N\>Zk[)/JJR8Z;qMpMJs^&,0G:GVgJUH@BsB&W'/6AJ=IK\+!?ECZ%*45[`c@m-)0SJD`;,<#7^b:K%nO:ou9c8TtbCX.M=dr"$MF2[*$RR/"Rh(<McC[!rc`H3RRb5,uDp1+s",D&:BYYk$-<LhHKaIlID0ls\V_+jC`#NV[OlBCL1*@L2%H'+'j:_X&#7(,Bh'56Y.$1cDVWHDT7bW$@r3??0q0eI`-,.e:\/k&Z-JBA@fbX<gW>n+EFmqo,NFlIA-6;>I`;IrmI^m#.:bF4:E%J5eH#XPOM^"f'M9hEVns5:G_)(n34*I&8hj[UN@92c)J)KV-d6W2)a*A_`:%J8=B1eHStn\I=7g2NZ?:#C?)S)G,qsWst3!Y$JGd%.MO5(9Gk0g(-;eBC4iKj-^[%Wp^uLq;l!N45a>6Dq*WP/d?HI?kA>AfAnhE[("n5*eHQ]GNXBM'M@K_faOCD.*C9%l#Xh<aLI1H=%)IXWIT1^1n6Md5s.QJn*%>[bg:Q/9lON+0'<>om7X#)e8ht^#`_:ktIi4$DP.WhaK:sH[1Q`$Vbaf,--dXX,^cX(s=j%Ke*MKK-Y%,?d>kHuN#\6*^<hdXZpU0Xn,>i-A^HYtPh(P9Y6A]KbC8Y;'F"T7EWr]=q86E"rTLe_5[.<Z'3T*",ED_N</MKu'HdK`S7%-"8:-%_LQ>i^0IOG'a@(-"C_YB_LOi/=Ki)_.4Op\6@`*F^m'gTMPdVp@#(<;$Reo;'`,$=-iI<`:0CpH6/gqu"\M#'b/t*I@hEF#>Fm+i%WeAZW^4:Pap58\JV#pI<I0$lPbE9^=!chd#W'IC:7&e[ecL_9F->T(hIDI'eqLV)BqLY[r)<UPpg9+<^a6F$Z>s[ZG"al(;,$&&a%4rHC@`De.^_^Gr=+lasZpp5!tf7k]f'WWrbq9M<`bo2Rm-;N!EXN#e+bL?TBNQ,Asn9%J>0Ro&h)?Y#\$M1htU`JV'lO;kO&Y?Hm%"$)CY,c<HVRE9=mX"uS.7OPOuVdc=!>qo0N1Dl0$HfSk92aqJ=RDuaWPR%spaU[?O`e5LT*)aUh+D%^jX9]D9,:2#ojG*qCKGh)h%?8]&`YeES]q.2quAh,-UiCSAkP&K'%4-c$P#PF!S=@ep68GbKR#t*o@pR)^AilX"_AjAcSa4Mk?f)\IIo;#!:OjFT_Oi@kg27;h-%k(i<-8L[jL5:eE'ecP&H:TP3l3AL4p1n@*V8g7#^BV)I6$(:'m)0=k3"t[Cc0QSQPS?B]mi%.>qgJA+u:Ns[.[cgOm!Ob%q1G)f]%p[CQ.Jc1Hg)+r.`_YAGkTlEq:4;&kK^`c)@;GE@GV%bRY307[tN=Ll(cF9<RgmBTp?g"C#UJ$^r:,7B6.%EMC$,$H':c-XHfE]hk%A\fA#fa;\'8,Sb#BQZa9O5fGZ$.WflZ+]o7.m9b,SeRV%XlTSMMORO2+ZZPEQl3d)BeC-&R6pX+'f\g^5>`[<8nP*U[hWDSCHS'n%f88pk6=`l,ad7!N6ledVJ#bc.G%KY1Z&&eM,RqRI912Z*ij4&*/[;rkH:6tpVKf49NB-e@Bs?O.dnN+sUrcnZOjT;9a%-B#8<@PQ%GSQ*_4#V*=fY*\I;IC2YN.@X)4,bD2o3'-n%$89cK)SGRd411Gm)_L\$C.;/"Wa9bCmTpc)BV_`BPim1pTaDXU4`m[Hfr`g!^uS%%6GsF,`"-mEfAe8DITXeLA;M$VJ]/g;K9>5JP`1\mY_*]09:<l4MWIF0/2"mf9NWp-j[-+$a,<tf8HfO2?Z?822NM\M[Ee4-OtS1\%GS0<[.fJWf%lm53ZSFH)KTH"pYcMRc/??^D4sQAj2hhYQY8o+?UcLHW7:M5Z*=!1o/$eb>a`SG&coNo-AWRO'pY)Hhk'd_f2kr-9%,>iVO+?#dBE;3uh;G;KB_j(O>ZS4LsMN!q-#\&RW/K;(Dk[c4I)s3b$`88<7WL>6`i8Bd:<j'69P)uGIPU'XK/<l>FOq!NuAV8:,%;Z4SA(SrmF&UubP;E!81O3^sp^e/$Zq$IMc#uakPFLhS4oBIYmV9jBr:9be(%94Ba@':n8AhK+p,"?BN4UIoV7M^NPiQ@_6XEWTA%_^9IrU93n%I?M;")*.o2bEd@[kRc`hM[hI-_MhiA1j#uhSjqaHc?"/:^3s:_1?9n]%bFa%4(J[N-lGc\N.\B9fatKR3h$QP9[BT\%Gqs>R6:m)Y+`cJK99s_KjT8BTTnG3_@Cn^76)s59cr@$IP,c_Y8+sp/%_f-3c>WpY@(q@Y(oX*KJZ;DLm<+O@N/i0PllT\a&Z0n3%eY#F4+%m&hiQB)*G;JY]f[A'M\ZK9!4;`uVm;/<F`b4*ZL+!C5%#m2UL=+8cimKAu-)6Y'aQL+TW1HR51#Lr/^P@%TT6k*r(arTU%PDY)o^+0O:Za&A,N(RutAqZtN$l;N-R8<N7CORt&/5Jn;;S4jQ+a10:O;]&qT(:@ijI*Wa;usg672j\h?I#eUH'";"QW/h9Q;h5L%LMOe\^*aJ@Z[#Gc@hm^.!Z>;Z]:0ATkN:S[&eL-K9eOs/]ZbOX-A=oLX:W((;>N+!5+1%S$>#`8C$:6*UoFVs-*4&Ui]>LCOI:+'%VCidH!'pIfK3L,Q2#Ib`;$oac`pDMHcuJ-1>;l)?g=r[,gt]>P1GZcd@tFkrG!edij+BI:UB`,]>G^D8P)+_9R2r9?V$F1H1Rfc:%!!\=efCLhiR#=l5e<ikdd<?eFA'\]`;]cHH#.J(ZaqRu7h;I%M`50<,H`)Ds6F27DF+\TJ'VEV/hiT,L;ef=)QkPSVD4(bgn@Z]D%Q&$#fV)O=Y:1S`pihJj0I$hJXNb!2T:1IpEBUq\WYUP-S1d@)$OqJT=P6NcKB<6V?[b&PKXtl-;ak[:V<N>F`MkO+I0fRP-[kgL4%f^Fa3oV=q[LTteT=tUCB(VA&(RH9fZDJ$e<40f+Q#"NB(A%##Y(%g.pK#A'n@g^L*/T[dc>%iq^NB0imJKM?ic"5+h:[8F3lLZf8%RT*\Ac4W#eFpFPu=1bN@YHW+1:EEZs2asb:dqIXJW#VFXo10OTo51$nV"/ebidrcr6^j0)rhc'sp,s?&;eGt"Z=h(KMQ]Iu?J:M2%Rm8N&[.Uh@0#.gL2$O/!]be&SON.9$gt<Cfe6[=o"k2[P!X0qH-Ncr'M^>c-HWo@$30r'Y?.>7MBAm4].jC.Dl>eDL6c6uuba:bo%GX,Z.jBE8D'1%L5dNi36>(MDK@L%7qf3]^N@9@kaR%;5@0LT-9'F,Z2MY%VD6mW/_1>9ThVSTcN<FCY>dG-3UA==UIgG[KM]Sihe%;M"bPZNQ,Ac-@O[Qkl<"%+]ui1s*cDCjgHe-coEqfM@.,^e85_aQc,r,Yf^9R>"$mpEI2YMHMrNs#FCKK1`jNMi@)LDeIRMP$4hR%0B&jrnLpAK&5/ZN1=[)#W_NF8Wg&Ze`s!(hZdY"j*B4bi)kjt?/UIu)S(gl1B8l;E`3Q#X^+1=8XBK*nJo9`3?7/^P)efB"c#BIL%PpDU8Z8)X1)#S-KD:@JpWV[Yj3$5,oZ%\]&K)Cj:n!e=O&s%=kKpWq)=@=>[.fZ<&T:lTnaN.6^0X<)/V"3Uc<1uecAflif(Gh6+%V'RGm:N*jE1VgdQI&),p-%1E:&mVu#^[+TF<.jR-'%^kakQ'E@kB%XhD5-C?P4XR9QIlMabjf\F9Bjo#9a"W3g-ML;<6>Y<":rM_%jm%nIkDHUDj6R["=r<1jO9ZF(i*pRW26p8%Z(>n.ZlE(fk;Wif&a3I#_D#+<a@cifOI52=HSC8>Z:&(k8Ao`.&^<XeW+N'")s2C&%`#M+4^q`k\DS@JZU!S$c.K`%\T#<&e`1(Oa#X%UP1RU(-LN1JJ?iKgWpU?A,[%3`Hm4&*d!(:N?9;M\af"+LJ)3p7>_0+^a@t[qD%jisd_F[K*:PGh>$iAE1VJeV<=@1Mj]BY<=fOB`6K"p;P34=]X03B.bRB;2gRNul^P7&4[J+H8=_B+[(K&FWK*lD^c;Ji"F6P6*BU%Y=qa_72n*jQl`.s^;3V]cI%6+.XP.%?oT2HZ'8]S+aPDJ'oG2mQCIS&jkamGPa:,dNQ(B2RPMTTS8D"T5cPV'G$RFOQpr^>Obfu0%Z]PKZ-pSTtTN'dEYdO;6>WPNt$\)<^?ko1>%40:%A'L[QKIWRt5QKS;d@KFHQ`PVtP&.Rt(`9AJ.NU]4cskrgCO'P#m?m+U&Rg^B%N$CeM2jgieI[Y%*(hQGDl!tJF<gJu6J;^'3H\[cq,I^Fr7dpS+iDCm$g+F-m7)e93^6/S!ENKVT"7=nOP_%f]eC`j)P\fSZ,Xs*<%JKfS'"]BZf&K)H@2V'q:jC"!-k)2$4EMOlRGi*-'4DcVsB:2)h2<_+hPBc,B;,DKk(CK44&D7bs/DVAHU0!%Rr<?u!%O,"#A43Ek%)p+A(7$[,1Qn&7_:#I`\?c2$SSB[B4;iZc6K3$-`XAne*/[7R5c[+lP/SRa62@YC.mr4<8c%%WeM^Xip[V:=UZ*>OKK&]7R!o]A"%du$cT?5`&[NUrfK69Nn']1oUKVVD:B0SQ%U3Te.iSsAeI-TkWO]rphgp=lD+j'L*cSKiu2!8Z_7jPkb+\LpcS.1N(E/r>6IZrT)o%-$*N?27,UZj2=EUTB;1c]L"WD3cOe3e%Tnn?M:1]*H'Z*HdlZ"p7-LAkp.#H[PrO%?sFTZH[3E',(L0@aO`k\$'#QK&/:L?.jPG:%>_7l)A>_ISa?o<UP,m>I\tK^-E\`C&fqG?:PU,.37R'JHaqfl85c'Va^a+4dEN<%.K<_B",$0T?c5c'l]cEkG*fCG(r1p5:X"ML+%&;!Fq6\jmrP=mab>)da&gX)R,5E_POR'STJ-T%;N:?V5\%"lcK7"k\BEOcB/5kgGYP@3>p8\RL$:-&(1%(:&c(t]Zs2@u3e=Xg+<%B'=B"arVnk-H*t[*CqU74jO3X(apb]kT];NL7gl2!iOQpn1o2G8$aS<$q4]a5ga].Hs]1A,#qOh[>E3@9nF>c(CJC864_^eH([F!%g-s4!I&EbDkn/PO=Ke^s:Q0+_hGI<+&uec\Q=F%(&$fq@"uM.C1j(4Z.2hiN4f<^4*7iVn,#VshXHFJqJh4N=O[,%h^n]W;['+QU%$4Ugf-5<2+>NQl<M8n/9@uJK#[ielm46GnXDn-!FCGuYH6O>@>f,Z^!,d>DLr+%AXIuD]B>3=Xu4B&4]@ss%r_FhiDNAOK4!fdp:%:#H5,/UaL=lK%m^X>eQqB*Gj;s3gUY]96^HQ.Qo65NI_&M,9?3IZ^5CUCk;X&Hmp-JdR)p:rsJ=BsL7%8BpYmjm-@s*[a(N];i/&%&BM/;3:>b>[r&H_Ao"7"So$`36pYgt4rmL%CO#N#$B76^s15LETBF-R&^JFRZD)X9Eq7F=Il'9Z8(9X3O6[$lO(6@>"k'71;0KMc%]SQ0CE[u9;.OfNk:U\:MF]oB^+^4f)+0A\>FWEbX^p\%7,U@Pb!jPq*Nn0Sj(3M*#Z0/\kA?_U:/UK8Kh<XF9O!mVU7q1SDVtONg%\t2c$d-#!"PMf4d&J)3_#$Z!.TY*^cZ#<=:_eF.C5kROJ,A=""_nQn.)s,k32'.eY[S);7Nr?Sgl'I'I5MM.ia%(><gP3%1etmch%TTe;A8sSXV=9B%<.YWAVYlk$J2@]Q`iD3e[imY;b!SpcTq&r3)nNLDYOu^e=Yc`AYret]$D/]Ds5$PO"`8QbZai+Y(P-jma(1)A1%5,c#F%tCgecZ_>Ip'[J7+)#'(2)JPdO#<At$AS6!+b(:*A31%k<!S11Kd\Lcm?^W+roDmBI(o;-H/3tCqO>m%?D7e<bS1/[MtnfJ%hK"Um$aJ=2D"DT_pr,q"oAPnVT=k&Z+0PPMITZIB@O.8W8qF0h7,)%g]1,]/ePuunCJ@00RQ8/:(bqCJ`6l=MXVN#.LqrU(,TRmY%SR\giQ[Xi3g/k=lTh0X>4l,ld=NBZ=_;0K,YRpqHP'`(A*nJ5o?`f*c"pP._!6VR`k+JuKg&jR@e0#ic>\fK"%fW>`pn2r[9P2Do%F4H%lI=D)^CGJcZ:j2F_X4&^14\rKo!'_,"L7r5eW*X?>Pek(;>;U"/n0Nu!],?SV5jmpMgA(%Lg.m])As<^k"[E"G`HJfc`VR*f%FMtK^_lnW1o=Y(j2dLc&":u7An,VqRS&VW#N/+jf%"]P5[:<eHKFb3cCASW@Q+roj\nm^Eb$_QS=C3f-L0L,3gRXDA?p(q;Me7V&%Ofp^#,jVaH?5D-Gg!;kn1<PA-JBjfeGkg1W<]G!GG?Z@_Lb<#]eA3JhEH_&19BmjW[2d;XSQF+F!]PJXhOR(aIQFbS;&mJ7[f<5A%\\`[\MVD[G"5>i@5oDdk#2FXEH!X)_"G1Khlr[$GPg<*7_"&g[7?LZ26f?&GkNJ+b/F`fCV^RfYV\5l.(RltI)gnqoqY'`sU"Xkl%A<tfi.*A2r9BK9pkrlG]q+5.q`J?-`-5nOTXEu^B@J\D\bsBU0Re,l`KFceq*A"'r_m`K:XKt'>Eh-(pj"ET4QYSfg3M$$=(JDF*%bI)3Y[0)?$IWFKihlbLZnSkZ$D>;L;IJ\$Om8+%AbiQ2mNHj&*$5:J"/Fh)=6fR0H6`WleIUct?0^ZMJ<b>8B@$-u_FY)b*1h,#/%F4J8EF1m6Sq'72fL:'5!g1b>(>MOE3(?OXn-^9^P"JX0%-XC=Q/&Ac!;+(h-pm&60d;-7%-IGHs5\Z'hY8B4@V`8dTDG.nsF4hj9%<:RpHrK8E%kNAcN^_"cBJj]bJcrX@Eg)*lE4Iug"Pg8(Ba[W/l0:tF325UU_c>MD(EaQ&M(BQKO6fMAa!3S$`ibLb*3\`D,7QK2`%1X]FHVq%#<.>Y-`$Pe/<ZEXYC^g#:@q>b<Tg8,'B!;3ocPH5Q$>7(>rK60V0$RT"r@?_K1#t^-e/tt,I:)!PkWFH'EQlD#_4J/oS%Nn5gRPj<JM16O`!08OX'9#5l@k<,Br@f0t"PsEaM&,^6#EddOb7X&#G\%_.l/<@2X`:QPaE+;/ddd"%s)?UrFq7o_g337QB9?!l1%P4FJ_mE4,(8PpR(;c]mh\"gu)8I0mE)3SnJLO]Ej*8rSIRIRV958Bea?BHrj"fKt#45M,hj/#Du^+Q$/dEmQ3X.8:np=LNiC[@nh%00\d6&%hG"`&Ktc4Q<(Ag0N-m3BEc[T"*!C#V^QnRo#GY0/u1k^Aj#E*;>Se`%gT:s.Z,RVd:^rG.ZDj$0S;foCsRlXaBQ3BHT&t%=<f.-:Nhm0fKG+Xm\FD,fU^`TV/Li6=aEfCmaA:W-#-uoH]([$VQ(e%D/.B].X`>P,^kq8HEahW#%1UX%HB&5r?22FXXoP0X_)=/%f8rb<Aree3(4(IDQAtiqY):e)X<)m#Q@O:,>"n;!<idZ6]pLa^Q+"RY+Yt$rhDR7$KiQiqZqda<.DZ4'EDC'hF-MIAMc37BU7EBY%2V3`mZe;aZY]A%dT_J*'5(:K;]/VRNgNp5tRBiRR35YGog_=)D3@g?DHK!o,FaEX^enDBpiiDQM@o@T_Z41$BN08N@S?^0RL8[+\%o!W5G'S?_;Q!rm[41BV-)Sa3:rLkZ@%<eM#Vba3"ksSHH3f9`NZo$DuWB2,^fY,_2&u$5/LPN9tB]Z=Hld^:OKSd57f`o/p4,Ae0%FlE(-X4pWcgHGD,:P@jlj0,o2>?sC^>AHM[W-7Gj#37noco]bL%UZ=SMN!@9foR)Xe=)4S2NYm6cs20qSD1'9-1M`,&g]nHcVTte%&hPX-)J?2+)<f:0pP7*u`ba%d'NEiO/A622a2[uDV[PK&C:OLlG?N-0+D%+M<mW6O(G6'Lb6)LapS"(Nn[>:4(mpS.W21O+7@9?#%8kAhNk)",A[)#f+1SV-LhI&SjV2qP#j\mLC=]1;%XDD7<GE3c=rFMPpN:Z]/M%7s\l9.KB-t_`q,`]cdSK_j0Ut'8q@@5YZ$P\@n%WYtG;Xj^Ya9;h6a[N-7g*&ZZr]jh>:D9b)ps-Fun5?h+7PW\dN>iEmNK5ot9<b1EkLa`k+W=jS9jiTaZ=P"(!F/"$WK2"l0e"tgZ%(bbhu,^OhN>_sWUks+qs?*F11547t2#9U_Bj]DHpci&V+3QKHQ!LRiPI+A(//JK=@eOiO^EYXSL?#8n5J/;]+IYQ#f`+4IcbN%$Z%H26$;&kMn`BF#(8lM-8JgZ-]uj*?]P5C!0nf3eJL*pIlXPtXDHFSTGHbl69&`s3oX5Q"%Oa++*En,Ar/qS3'uDuSuCJ,a^Wqa7.(%q>OHfri<g3li),.me?bNrqHHd]79h=#Q=C(rU(d-l1_P)d=M9-GB9j:j.FB&GW9V`c_Sl-k4eo9dsq<\s4+maGAmN?DuQ6Pn%\mT%pN_5]B7B\a*rl8Tro[)WHN)foKb=kP5*,=EiVZ(rR4*W=&Vo'hMZXQ]iu^?>E0B\hpk/Tir5ZQ:rpbIYVZ6QSVpGClkPsq!:S7Xf%(].Q'*?,J21=dQsNcA_P4";8R\fhptl`l*VHBIFl^iEU4i,dO9\W.o"jMB3,Hc*=T7NlN>L'sc2,9%aqedhr_.Vpe7E8K*!AHIbL%O^D]5JNm;akR9UrfG9b3)(n:,9p]bM[l@G-R'HF'VV?m$LL(mU<>$E/mP7E/Z9<e`;rON#h?qr60;!JV/)eZs<OL3=<tbnci;6sp%PL)VA+[jDTpH!]^!9Oj\:_jsFKqHljPS'gEA=1\DnopMoq.o3K"2&[P,\/BGe[6n0QAfm(Ua=dc^0j=U,l,Fb0\Q`kOT)7r%DXf:%292'6hj?L$^%2!CNrKuh,dY8B%2uW.9U!l6_;8K\*eM;?<q5\UbK!]RjarY!)LCCrSdudcl7qqm76E'KRr.'Xi;l%",$6p/^hG<p%9n\M&2qj;lQ+#^5FeN6VaiQK2l"G5(,6Xa?qF!qJ/9ts,V=C\rA_)oD#3E1b2q*n,+#^&(@bDMj8+I9NiOa5(guS%:L($)i"@aKd%cu"A^&,26a!20P["oP=:MS&t+%dDVBLOZMt)"86T6r+@:(CEA_9S7Id)\Pqn+L=4Ia1nP[Q]Xf..A.eQjl6cZBBuU#kQk5ZqDpAJ%g,;rgF6t;k8,s7TK7u6KZ<oD>/l')%RJcTRJ_2>l(3M2t9ZJCE91W=#\=qR1[C?GHgo?]'k*?XdFR:6!=ar+s>_`-U5bJQn7ZO*[%+s'#T7$[Rb?3[%WXM=N`()!9JlhAt7I!YklquK]I7uGUXJ<9t1N3s`O!/X):pjn*I]!?B`)i60Z-3g29j(e'F"\c+EI7PB7ZQ],.%bPm%j:k3nKmEWjML;5_&i4u]<+75f:*TV:AWjO\W)+OEpfEcj>p0>l;E\>>>if-6mIJEG\j;j'.%hi,iVg\,2W,e^EFXt%".b$#!%R6k\r@O)ZH$^Phr;C85%+'=4\n'Gc&JC3>faG?dc/+Rl?+sDe<)]6PU3@23/MVNfp%\@]*g`tPQQ;4"2nT"_@P(rEOcDS91$^!N7%H?rZPkc>\th)`ifd;<`gDiMdAJlb8r;eH:'EF;VE/oMKYi&45$<NeN#rPI=8\U7*4OaSjDX:Y\@lf"A-nV"6GY[tLcIhMSU&&;[(%4\cqZ%8:VrJ.IuQgRh\AV[j!3cjU0(XWo%^I4*/J;VB$n2lqh_AY$0lK3<[8Z7qLVk)ZB\`?B]?Ql]W&PA_iUi&j[UI*R%PH#Yd9%[?l+]Q3"T"q'(m7\Fa>f?OSN=7Eo^$To._4W:a9Ie(9roWF>.`Y,:uE]HNm%P3"ZmD:se/\iG`>h8X\MlDN-+kBd',&@BF!T58P@%NQ"AeT$=Cn%c&0MIT/Jj5T"<9miJKA*.,[8_4/gkfYanm2n+02Z*3Z\J^+MqIXW\]N(m"Vp,JE6U)U=2XaT.)L"ClU@1Ojm3Qj<'%3@W]rrnQ_\^';`0I"bg$$inXhb6DL/BdAOert0H";R^mTUC3BaYr9=2ZDd6n0ukeE[XuDKi(E_"!$upL8d;GKkio<k7!`NZ*C$sS%D:U2/Mqh7rHO8._%FKe8ap^'+Xg;ui&2*SP(TI1mD2l%`@%-LZNY7\]bOJqNB<M4V2b,%oVS51_8@Lt%Q+2CeV9X#hI';<Z34]<g%?C8%17psS0-u`'9*2.Zk4ZOu;P0]3ZTZL`5*BmF&&@J7-moW)/0nYQ;:<8[mWZ+8og7"$`?5i1-g",1_h0RVG.EAF"P-,6PXl=l:%RYi35@Q2:s4hDEP7>e"1WDg?s9EjFF[&#B)6Wd8g\:>EVSd,i6?49Lp0+b#1r399jFdK&7K&qej"#@qS(%/PiL34-Qiga1_F[5.G%oC/)D)qqqp6I`Yb^uTlGKl@j'VWo>WN,aq1`_5[Mc3f&Ucc=m(p,0?Zq._TjQ6u>em_[rDE?s87<(J=XR-Ao,bOMa$,.L@-HIt9>%WD#iT<L;2p+l3rZk)D]GU08\WBM_>9H-o-HBcF`6L:i(G?9X58^N&XK^76hu-P7MO>bi/Z[u?]\6:qZ&jK1(J7Y&!=B2P>NW6N(;%\+@[E\dCo,=*AOfZ@3spJ!OmQO,gZ?VS<RqX'hL(^g0INSDB5flY)'5liF=2&akTr:Mh]=>GpZ+>76Y'NTQ%4YYNqVkFH6B"jjh&%a)WbXrPub'oI+mSI"toLR3,V`mk-S+P`?jdi@Z\6$H7;?@Qun_l'/iiGZH1rZU.#aLEl]#<M`_t;pTIJX*(YdVOL8fc!L>82</`n%!MGQamP+(rPaQ*hg^k8K5I%YaWqE4lp.a`J-HqsYXi$.?2op1CH'Q$jpuee"'8"E.`S3H/6<BHZ@:`a-87ei<@rm.h.SQ8g>-*FJ%1pa@_2T(OD%hdjIK0:`D**BK$np!ZVU[Ooc//O#HC2b]-l]Q1T,k1`^k_>TenmL5,Y)FBXLnum3O5'.2:RPFX1[D*\\t)Sfg1hp_%og3O@pYW:.kZg3p%Q9@n:0TLb>7aWp3PO<rp*Y41%L=!a3'\"f-*P_GA_UD):0^4K!)`/oWB4>A$:o,H)K9s.KFoICR77ama^dnI%:nT4DD.SLdBmmbpm/-<srp4PfrU$Y)o<1Zc2It?`>[;<I9aUKT0?-_Gms7P;2@.uNSklo8"udDim$Vr\Ed;S<9@V$WNZGPe<Ye&u%7hW-o*m`n-Eh,oo6Y8QF&T(KK)afZVlEiPU4WQ$s[b0)UAG-)Xg;BP!+LnJ<CUU^7Y#WGd3*Q%=c1@8V&9Gn0/T::;k.R9qDK^1E%YPKr]l"'Dl169a)UnS0r'\t=PZgVm(DTa*PNPIHMjs1dT.XZ-`'tH)m"IM)kO-45ZHlF\,)k>T*nl;+=.7ml#*>q'3k\E*&96>JT%VYu97fm%9PcS[[9pfj.9>X/EsTa1i.Zsf_IZV([&ic#)@OjNGFcjOlFnL`r3KK8P6`"bJR#p6bb-H<%e9u%il4=/hspF9p0]Afi$%.O]kaA:,+<Qka#Rk4JF<`621DJi^q$H`S-?WQj'+k3]G--<Y*e&iHgWF><M'9KLtYOfQ8rmK_g+A^<i3.km5Bil?<("K'UJako(E%/;kKfK#=mb'&rN258uRdqI!NbEr`DkRjOpcoOn<c=K>0W`/4)rn9@^T,OGF"$DeF/;ggPW2aH<<]bd<OH0OfbdkDk/TbPVs\(B&$%"T6o"AN)(EVaP$L!+0?1`&$LJ6'B/Y'p6fkA1<Wq@-XDb#qb\SdH(p3D5RiiM',ksYe[ciLe)JcM.)"=%%eA&>i%B'Wo?S7G_Ndc%/"F+)80i.&nKG?WJ0"E):VLj!eU-LJRW1QOqr<6!j5I;4H,6Z2I*7P='BSp4qd=ggNgkjdD1^\p$ccI$kG^4bPF3JU-%^0OL"=i]%Hp7Ge_DHu,a#iW=4U^dumCXU^&?60RA%&o]Lg^U@BI-dFL3tVZQrN*S$t06N<<>0)A)GJ7nT)8FA9?KqNj=^uB6C"I=6!W6T&T'm%=<@?]p)F+@JpnO]-:W/4-U1]0fTAN@TefBA[iDp_,KL>=#ORSGp8JMnE\Z67\;P09K7@TVB-G5+/^HoH7-3Q=/d/Y@7L[7Y8=>>d%/]iUsMKc*m=f5XFD@QS^!*+'6Q5<9'bL'5&N8MR>=gg'VgD&CRd)l4TfFjYr.%R"D8c.#^0oIjH`&Uj5*F`=DoY<.5nTh"8*1qtj%Q@@u,Ria/ICq/Jt"DJ)S'hU3cFU6"GOpeU3S5(T^<CRV8&aSjT[a&[n`ad1^!-l.oILZLsNrG+\nI/V`:kDD90H)r1&ST%9_"&&N%@*AYdS=!u?'0LDF<2btq:07iff=<(3C`jOC2R/rT?[War*\.1.cS1_5RWW<_W<AejcDrEs!Fm&S;Xfo+?ORnL!C"Ds^A85!_lFuK%&T.sBR1HGUBEBl@87PT-p-b",WT)0q5:2Jh1&(q\LZAV0+ctu*>b2/&e9HS3h\(J\E*+(iSDb4'N.HTr2"i%9.',rFDH"JB$:D@o%.5B:G!jER3*<JjOI9GOl"6Y<AZessL"CYbFnUVWsb%0l8">Jj1QeW-,GT9R?rnD5n//u7_hE:_Y'=%pS>JaMPJ\j5\rL>hr9^76F%TZYsd,991UAIIE2JKB&cq$IGS@KUM43Bs1H#pEk$-f41LCol=m(1t]YIQti.=8Wn9H/&YQ%*lV2Kqf<5GcliMgmVfcnUtkFF-?n/%!sqc=1[+!.RB(T@Irjq(!t$'__d-mb#[RN=kLfLk!:+cAS2!Y;2.1jLR@jcF*[(;T(^:3h2mV]OnR\4P1F`a$Bc+;6Y#2'6F%/ib%r&O2K000='85Zr>%\cF)8BP1u5\`UoU4_<*Td-cPeos97FTr#p.MGAYk#:u12n`8EZ8:iH4_ggPQDe8m!Llf)3U1[]icrV.':&;9%Rk?77J[1OEP"agm4\@R1/)s-KhYlgC\*L,D,_CB"c/@%g59%Q:(PfjX$P)sWffgi!U%k&-X\*sH@_u_V;4p=i7!/eC]dR4[,r+Hc%b#,3V=j7$(N%+`anK8u&24p4D.2TPY-FAhF0nbZG8H:gbg<=Gcg2pcOM$u:2EA&BHp;57OMB92^*j*SGOO;;;moJjafZK.;f8?X(%-C3^RldOf[C.*cl?(9N/5V/ut^9&Ap+_hdh$gsg5ibPXh+Dg$O`s%6.G-XjWc\NU5fPJmd*Z0R$N(a\TaJK6.BVAWg\Fuf%\L9oN%#*t6_p:e4K7h8#Z6n7/j>':Tl9ToKa2[Wdnm=T:uZX&54WUX+:<(X(DM5MO^!cf9bCN7RgPXf0O@mBO>/9I5idb[QLh3sD/o-HGG%qZcof[hgM!TKKt-LgeJ]CNmfTgB:t^ra4u#Ue/(X9N<DDP;9BF)&Q#1Mh_m?INL3-3"W+9+%5BNFh2c:;O(o1O0]TF`1._Dd$s<D%%!<?n!4gPaR"CBI2)V]!F.$nLnifH]0YAkCnuLmmO>K*Q]OX9La.HS'?"QG4QjSljnkKa)f'*[#$Ck)8["dllRF-(5!=hJ.i:=f3%]"0U#dL(^lA8n9d4cG.0&6Pa)$sF@h`=[M@pB\+[_e\515hCT$Vn$fQJktJ^mS7]M)!rJT_&^WOE;77Gg!'NG_W\k+p0Zi.)a,SR%gtn#9A7`6+'i(AIhiHXf(+s\A\tYhRXrh&\0nc6mDbV<iLf%icNC<k;]YbjC:s1f:89-H.Ej"jto;Ik+VW<^K',bRtYeq5qUe<BR%Q\DCOEhNcWG(&q+WLF9Rc0e6*X_l?c_cV+6k_p=$=b';krcriu6f)4E^NTWCi.U0X=FBK0pe#&Y'_Q0n.Bt7\-4E4Mg$0Pp,b2k0%>NG=ZXlDR^<%<NXL4\h*Y/-?FZ8N!)Q":rB[HTF_R1.teXDDX&0qfZ.cP8bsRIZDmVQh"KYRHX/rGmbC/R&3k6SZgl1tljJbY=C:%VG*MCocd[_X`30E7X3BP\F2V*+=?GZi.8+dK-2@C4s\^$<=i2V#kC7k48Q6_Hm7`=KY/jsqg]jn$>%JnUDgQYDde8EPrMu6H,2f!%5a,2Lg.el-G9%a\<DF]#&<Baf%-gdq%Zl>_DWBHk)iDP%m/o[-=lI@,,1csn1\nXQ7Ta4@M*i$M&j"e*fT,%BY%'BhAh4lpP/>_:%)dc\$LK4.uQbDlOeZaU+bbiB#4G(#Fego8C-jBckj>_3-[j&(#XJN:]?W+o#f*X^YIP:"E[P6@n#!iYlBB<^<<ql%TUnY_:=gWNm%U54LroW8s\&k>9B$L%o.cETPRg/[gXTfE<_3U[#626RGSnP]^A+e'F*S;Wi<&/[/0-sK*h:)G=#lgUBZn`S'?09>G:KDj(:$YfS+%EJ1(:kpqaaC_!?TVJu9#J;F*,$nFu3C']XZ"4Bc)#fa*?Dl/>Pr`6%:DFhjmh[#iK7DKA#c('7==jU/9LX"8Zh.lni?mI*d[nLXn%:URLhYY_[%HYHI=W.ODo5*pE1E<VH*)Oio8IRV3VH7h6X1FUh&?4GJbNdqAV>,@?6GfuHcqm2lj56sLY*Oj,8F!M;Wd1=%4r053X%A<buqh".(gj--@7rR32%Uf%QRZWb.QM[2"V(c&`P&415c*%H#XG_[Btof!Z8D^YcuST"qJO@M-C4Uo`/T12k<<ctR:#kJ,<+2p[S%ST?T?[s:6<4VQS^K9o>q-+cBTfe$S[P/P$gekBRC=G[k90cq-,);JU4/nGu'VH4fYY[.b8eeSa`dDOTRiT2,XU8D66Ri3eZJ5,mq%.XLRj\92C3=B^q.<]9X\KI1uF'OY.*h)*<?V/<N/riW2no=Ug"lWBr&88i,M8R2a("ITbLfU']&YB9f\;4Ed>NMQ9-Y^(#c+=FH!%l?qhATVCguoW,%Sp@rQ!/o7NhZF#IQ$:*&Z<rpo$h^$M)GM7ci)EIFh<%4s0_n((q5:>$C+e9<A;6?$"N//P*#*CBo>*MmgaiDa7%ndSdVE8lulB^qQTH[Ra3c#5ura%R(b(5:qiY`#1)M@R:Ck8n02@/ScZQIj;3I_4J9>Ojn@9*@$p];:02iElN%Yeb?>]P1#kJ*I<U%];rk+)iDo*R%U^ZgCC(:25`b,Q0I^.Q=<c6$Dju!)B[t[$6,74Ab%!Wndr4&9i2)ZT^'LT$!UE%8uRdd(FF0$7YgB#<79u`5[g+[%]<HZKZ5W.?/6.taRlV[2b=d[6]JU5!_A&Nd7)FQ-VtBm<^O'pQioY8YInikg1]H5-@Pkr*rP>qSF0o4S1c:V*SQkQN$lCnmE<oHS%SV6YB+j,.CG=a"K6CK`u]OqR&$JF9Di[5q(d'95P""D&(VNp+_OiDC'i/b:WlNpi0jCG#X4i?;L0*L;PBa4.]h2Pc;7&k;f)Rb4*%@:Lf^WF9uI/oB_:Mhn;(nlWYJBJ`!X;2K4d\AJ!KWTL$8&K>/Y,M?%AHr(N!%[fp)C&e`sWP=4IJ2pSh2YL2$W6J*U<R3.n^<m*q%Q"Y[T-b:GsV:N?=&P\qG+>jpZGn=NZ*jCPq^pIE-SU,:XW:4b1h4g5iOjj]7c7f^A^\=ku"rMV[<!eJ#A=%A;!f(>k2@cAAaLVtq%D:1:cS'^a2e(dRlZ`73VP(;VL*AhhQ175&Y;I9mlT`EbMF&@7qif=*YpYsYC)"1ZKZpgNH\V`((I1BIqb:B]1&#*#X[NGf?HQ$Z%%B%5*nB#[G68@`9lhU%0f9h1919:#hR@:=S&QZK5TOZ,7:TZ9'O>s$\.RZ9PBS9\,3d3ronj[HR,Hc-@FhEj0K-de0sB?s3_iB.U*%l!D9?fFNlh5+;b5%UnYEc(^jRA2+]tL<m5H^.#KHf2T%9'_q(S`WP".B,6'60H4$-%eN^<g8^^I2]g!,O#]s'XHJ=QT8ZbiO*/Ub%bhr2LqqNn5-HlWRTmGE3_GXkhC+D_fh32%J8ode%0diMarn>T1+'a.P,o"`3mW"EbOU5H/.q]5N(r!9=p-I/2>L=G;kmXg"oD-LQ%\'JjJHS;["Y,<o8e^0u\<S!rO,HREQkjH8;&k8_"[cY.O+`oh"ABcV'Cc&LG[5!h@KZad5Um:BUN:1:,c'6UeOf>RmK[Z[9O)M2f%n`OOhWCWiD'uBqF,h6cm]0^c`r5EhS<0;6p\=SQVO*=_cVqkH4*^iCX1PMN08NJstNNJp-*;n/75HIMa7X.Cf]j>NX9C(iQ]ftED%r=0EXp#JRar9nAI"d[ZA<n^a9E(8fnl]`ubW"uhH4[Ik">$96rLpfgVq'#%H_hq@EF<CN^UC`;1Wp;Ml>k(e"_T3Plc)!%Kj"XS8%CJ]+J3jK;"neIgP>nulFd<BQFVYrNEe-J=K*M'I;CtD"s8nYnT,P))?\S305784'g6=LN;2DprJKoRu1>9HE\q&`Ne*>?K!!i3b:%$E[_cl#EB\;*B)=:t9Xg3&V$Wi.UTqhUK;RCWdID$8iuY"dn?*N0.M34-^q*Q>I*YHBd,4C1%/CdZXJYql[M+,\'dPU.<Iir>ia*%Yp>KLdp59')L(-]h*#M1_^m#i,%9feE(2jaBEAi15<5T;P"/1bLiAV;Tq*b#L&a&mklt#afV7oTRWC\/ffaU(dOMEpUrLlN8L-6i%n)^5Q#de7L=1T4E@,JE:WkZRq=[QD=Smtr.2i/9uQ@]b789)1,K`jbu[YfA9)l#=bc]J2UCo_d;,kVP0'9Djs8*r-\-%8Q_Vp.<o%Aab(l3/<]lK]lYrl"#>)!2$krCt4p1N'<J'_T`QJ8#)c&](T=,>&5^cTP,9!UH1/7=RiX14Yg60fs+Sne>Qaglbfq57VbQ$_sm(R%Eb,Cmf0$=-8+D8DT.W=\Oseb#m10!4Y!&6H=do.P>^Uo0R:S98UMt$:T-LHGq#\#[A"7)"ottLlS+rY$C2K^!Lag`U7GCWbA/Ah+%3ls;9'@*NBL^B2p`kXP%dna[m5R&G(-2Xqp2:cYSh;O[slLpnXHunc1[n#'`dh(!%2KH/J4;!_kZCqqF7DUX":Sd]dXq"G#]B>&t%$1N0J^N2<[\0[rh_#D^E)HBZtY`Ylq7A(%Hh4*ET8N@/8<c!+_lD`#N+2A5j2(oDdi=K`NI)lZ'3.Fq%mEdkQS[h.IStSQ:1j0$B%,^K+&*R<js(sA*dBdIs;N9I$*Q_I"n;"*5S,IBd4]@qjsndhmD9JHb0J]B0F%\<c)q)Bi1(8h$X%p.DDLJd/qQhkBgA!2uWA;\kK%!FK$en$[C+-a9UT"?*ZQ^t.`O@4OGL?peij(Nj^/5k)>L:BE@QM&bIOH'E?D[-3>,1cB2\`N`PLD@VKa0KMSo0R:kTc;o"+Cpmmr%!1PYfZmsUCS&`n&cTA/%DCW'*6]sNc594981KpMu^9n](DH+")(2rF%bCLlQ2gn>S$pSbWdr?)<+`0Nm(`VnW&9@U.UirKE_U^`t%5`%b27Y%[n&q!SUJggG-NZs,-CSlPU1('dd7jd+TdYM4HgY,Zk%Tp:eYZeQWT8G!N(:3#eU'#6*i`0cfnk`W<T)IaZG`:u*dYVoE%!,2,.8i>QgLPq727*s`Z$$REAjV@Uf(]M4/d]\C"kq$$VIZ"AfiN'%oYQPnG3oI!oSW-ss/5mc,1NJ\im,u1t,8;#0`kr<ec%Mhg%0$PN1C"X*]i,BYbn[*?s[!*"!NYX^.Mb<#H;mQU"eZ#TbJdi]l$r`g`3+FlK-1u.,RHG(FTV>I!q02RN'T3<AiuE&UcV(%bD##\(%g9EMRGW7<)K)rC44pS;n%oS8/klQ#oVQ!LL<"nmKYV(6%Z38LOQgjj_/dj=JlB#*%B[QFPS-k5&-3B?30>+CfeqK&t33.H&$f>-4%O7oZiprgFtq*4fF^\l:<s6f[/?\$#YDh%cts69-)X8i%nYJ9u#huCU_rlaihqt"1mc+j1SJ,ZqPn+-9-n@cU7rP/9ZhuC`HqYU<e%T76g$L\8F^oQ.-Bs(X;M*i[,?BS-i&8B,K,+s:Ni<A"h,E$ueq60O98gqqigIH9&Fk1s%\1_6j"g=&HQ5@1TA;lNXpb[VlUA"rab%#j',B=R,(]Rsb,*HdTQ-Js*'A<_O3W2<h-XGS]bV=k\0.-DWiMmFj!Q_(JO5f=pIl@s)iCXX;28bkV[fnXU)435oZRcP%\&haH8N%8'I4k.ctmGWH-H1AuWi,rhp(W<T4&H6VSni7;laWpLd^QkAX)^ra\I,qY*Ymd<5.4:B)F?H[$I^)B5m+kl#aLEcW+E`Lg!Og$%GU%qZWJsS0^$r(0GE^.<E<aOJ<qg?D6RiF%r,'qq&&AV0[,HLpe?.m7$YA[dM9sLN1*(gWHZ[MlZhbWdY#;oUaKtn>D0>3FUtt%NA?u%6=SO-Ed/mo'Q#WIF.EqdV7"92>!>/RU-f_E2be),gZ[kN`)C:4WQ/Ht;\Z?I5HJjuM(kQ&PcU:2,An9oI984Nc'+m,)\eg!,-lBX%H^LT25acE.IAp+\#.a,u^TNZ>jHlPcgT!>]0h'Fc6q=8/6-S.9Xh33:#^;OA8'/6$V$`flY@3un$*.@]mT!)MD5:L8XVl)Y_&(5E%jD!>U$<4jMk3J6PJ$:@p6*],`h\9]R^'nY3A1Oa3D_@'SWHQ"F7_e!<3Gp5[1>9p[Pr5gQD-M32[7ug`5Ik<0-qF-^bo^2:B=pZB%,q)#8oDeCE3+JFH/H.>Gs1ttd?epW)2eIEl[n]]ZH^$pOD/1PjLa)d3CiS4So8#0MH-oefHuL!a4EgYujgDuQgkii-oDlZ8QOgl$%]m+A)m5:t>/L;'&*/b=0@$TjlZ"OC2*"(tGm)MYe2Ea*/KmI7cAr4l`Oo_/OSqg$eBQsLj`cesZIaq:MiBT92=;W+-*<O=1_2LT$%K&ks_X).\d7b0<DS-obIT.QkXE3&=Lf+r0k/bT0@fblDCi"7"gr%?t&?Gl54#oc\j@DpRCb]5iMNh&[=i;hj3E&8`+cR#UF3gr%G%2sU'L!a%d<+!"),i8J'TYR?IB\mS<(lNrC^S5RDD<\pY*I!i4HQ$\Yd(I*d'lF40?nB]G\T=AF4U;;hi-PI6,Ws4j[S5&(hFRhF5%TXCEChEmcbKmOC=S(i+O&IAt[U1kk,M[A%9jX%A42%Z@DD:t.Ta!QRs"Gs)pE1%.i>WTNO$7;l\=s!.<p7fYRZp71T@\M:4Cg1A$%7NseG`V)_.ENJm36+lMq)k5o%3s*_X>Lp;/GDh7k0tZ"p[`/;XjXT>]Eb*XfRBSOOFDq#<dXiVgF\O&MDE-X2aT-?bP'nfYo,Il7%8S/di`BjuXZM-%+naXK%rbAES;Ii8U<#?d\lGZ`h'QD=%`sdEC;WXTsK/!-lmi_^P_YlYsVkU6BVjia.n!Kl;,]FTL7VqB(&dY(!%4A8H79n+dX(K.&Q-1]B^N#]!qZR>t.15`a$le:isl/lNte/>]"(U^6C1=+[4Fl'^L^CG$Z`\&4hf?@mCk`1PS4_Ak*+9'[]@Q=q'%+8*0!ebt?kGFD%5$M%]UY:l#Z+@UQXJ>oi<R;LpL^`;<)5Q!kJEc<lOGBgT24[jH8PjFk$ifo_"h/N%.FF!qk.]G9AM8PPr0s&RZ%!\!:hSH-8klE5W6_2tn/8GFoM1VDJILiji,Wj%lbO1BMO!#S2PlP,PWn\!7#fDs-9DrYac!>Mn&WZ^&h5D%e1?I["9=bTB)3WCAE%/-07$/5o@j>+6:7Do:89kJd-`Mkd?Ek4-QFB>jBCQ![GOO<7d\Hf0JBkLn3\['KF+9MI0P&5G\,&2)?J/R'/?h!Qj/3@rBIq&^E]%-^r)hT1-Q,'V`X28W;g>99]&r02"Z*#-Ct$$>X=1le3nC&9rfdI'-Va"kFI?PUZM39)Pehp/%$4[c%N4Pj>__5k!Se^n*u3pb$?U%i]&i#/]nX?`Og^`Q+/nlWE/VE*FDY,MN1/cg_GQA=IU:j&IfH:F/b\JAn8RuYe)_^.6&sdo>+E:#8s]U`"*2lNpQ-u?U&i>^Y6iA%'s4:TU.qE80QD/4W^49^5h8Sgjlpup!Hq]D$%WAm.?NGb&^Pp9&V*&m#jf''K*ggqPs*H@-WkBE<.@Ku"t;.p]\'s^Q)L,GqFTW>%XZuj)LX"HECUOtY]p(=>8kIO$:&RH)]<]#.38)Kn$$.WV]duhI'o.dIZs/!'(8FE'*2YWjcK5=8W$b"FdcmbI#*'!#B?J6[]AQp*%P9O[A6E!d;)=a"h7[/lf1:21]ik-mt03f]/SCO!JRL8;`6nm1=7"q2ZEbjn%dTejo90oEV>B^5$25hml#R8450BWsBXM"MCW*HU-%?<3-r86lX0@T/MK_=.lfTHMD9Mo:iNgT&.6?1^MB_,&=VCoE9FQ+[)i-`=uk<h"Fh-;#RkF\5^_U:/Jj@8)AWcXPS<LNSb)"KdI^%]gLMM,4S%@,+UkHrrP_G-aQOqhmg(\rZn1<g-um4b#[CWD'bUOM\*[n:8H:38*%>+%W[pl?EH)ElXspInkZKLAQosnaL8,:(O]Mh%WN,[2\,2&ohQcLc[eVI^.k2"DlEO>kV41)Y-LPN1<#i?Kk3uYNk@%km@FS"l%Q[8lJ7shY3X(a+L`<s;SFgT%$_X(g*Xuj%8+W\A%pZ)^a@R,YGo<UqRS%$%QXi%o/>ikP7+t:C/Rni]\9@Vk[bQbi<-2Bu6)gmrf+kCt_@V=[m7O'$!SdeG>X4khW2KeM!c!`-RVHD6^%(GQqT^TMIXH5t</;,C@,Eu"A),0O,;`$&ABp'=rs6n">/k"i;3fetk[U70XLIs[>4J`9,]-[0*"/Z$q)r"iSF!Xh&3j?s#*<UVnF%Nejij?"\J5BI6f%P^h-Ym12>j`l:hd's6,lniOH8YK>g*mI`/.`3mqZ<?<B\+fd4f2mA.cD\WrqL`g(HQ"`BFWQA+I%>unV$J?JM%jh[XDMS-A+N$(\KCO#U:qt09^jbJpAG2/8?-%!aJ"aNZ4TAU81CRU7$*2g3K=-WqCb3u"fM`n]me]Yq?.L+5'EDM1@-GOrV%=X]D%6_0fTCJhTu[U]N8dAqQ$[$%,K/08[*-Mq7?L<g2#CfU)]Dn>K'ma!2n!&+AJiAkFqb6M':<M;E(arZthB1iVsLumLfgIHQ:Ak>[>%QlQFsq,J%+Z.lQf5F<uUJo!ej.n,iO:PrpYjajd93`?^-GkRjYFE6"FOg;!D7&i6Z!TlaH=-ca!4VOe*GGI;(CS4em3dYuP4*:%N%H2smTs4Tqk="`D^:!7ak/&G`UfdkP'iu6EVAM.Isf,,$-h!(JAMnG$D6X3NAbimH;dF:mE'=o[.6BQ`OXcY*RPN!RoA6:.MNbKlj%^[OM)<OTI4ctY7j&5LZT#0ePDC[pdL1_H'B"N>.d+'"YH7Ou24g'5'[0aZDKPG:QQmAY?#9G_'.0["k^c0=:s+:D#0()*bj(TTZ%%Nk^\?@]!YX9j2eoq@[7iHG8Mp@4apK"KCYF\*M/0)>H/rLka"-!Aee/0!gAF7);9F/A=!IOlg)KP9Rp[7a^lCn6uAsc?tnGKL19L%S-aNgWtE/C$SR.dWeTCHb4`kscW!eQh^g+;!J$hu*DL-IRSWiLN)U,k_5'!_"pqFH\RI$$+V11J;4knC_PL=5U^F_(&.mig9]G>2%C,PqZe&@+_AEd@/H"5Vs#RJ"f2@IWsku]Ui:<1L7PL'i`m8!4CQ?<faMrcQG16Q9nNbVSpSeq_UefgrW6LUdo689<.fqo<Dm`ULB%a%lGd8jT^OdjD$JQ0IjK(J2A2MQCJMeQCNKXgY<lc0<dmpRBBBDLT./$?*;ibRZIoYHg%m?_H_Br-Jk2HP!NqKS$?ACKuBl_QY<l%$E'$k:Ak!u\)@k+_4VSi-4c9m10ks?gkM8!#&oPA7F)L`?!D6I^j!cW]<_!%rV<<arE@SA>u$s%HTp@bcAce5@H6j_1HhiU3?K?E%q:)Ag8KhFh1s%$L7Z'MR7:Gd4hFlm5O&'pL1LC+@Bo?cAIC`O#T5ctUQ3dJth6h?13&o2rh#'e#R-j=%`^%4+S`QS#Fas*rKm>>k%`hiZEY&^O%DUn['FL]84?9>_>B=IQ=o+?`/rG7G-qKt"#>3qg?^'Dr[N`qD6l45FH!'JV"8ip43Ai,mKp#.8&Adt;pjK_2b+`+-"%a7#LH"5dusO[@s?.ZLZuVVj<e"oQf^>@\G<1nZX'PSgh^5(7h='_+a73m*VkB#84;Vp*HG"+AX>DNrYfhoTOh`:',MUn.:G[4b`M%7%HH3R:g<]%iS]DF64k1q3^jI(R1U"-j"M,Z0)4r8H!7Cp-?qGA$J,-NI9@VYVm.IDYQ\ig($#K,#trA3\E<36qC@R1Hdp)Juf&1%E.FKjb:6Z#G#mYX=g9>@HtK=]%1ULRm+@c1?)^R+>I2O+l%54rIS,ps9O945Ws?Hq404iP$c7sZ+s(SBDabCoB./Y5)A[PHKZad:%YImHP:hJ!RQW>_Ab`DTGVhLCWB\a*n>Z^/.#aBef1Z-u1*7c[s45o:,HACJ.&`T]8WGYbBf`;O44@3'tRVo!rf`IRpRutn5p-i?6%i[VNg0U3Y:-5YrN<r4<7n%&)K_1Tcj*&-t$HH'/%;LHE`pM`qdWSUf8^M)q0],Xui$\:Q>IZ4oSQui$.Ce]`i_FKN4@na2,:BYnC%CT_%b'J1?Z*B?S")e090k*hU>72t4T;VE_J^m?Ak>OU:&4u=<(ZG,X$\nbjQ<m/rdDq&&#eV?U<[hjI+3c`El?$k"8)q.Ht'@3n7%bhGgtW>MR/d/+G](.bD!dQeIX923p;a/@FaJY9T1-]$7EU/T0Cp@.T"l%)Mb12KC=L+KhWR"<MAopKs2-/4_R"cse)$mDciZ^M,2%OCAiBAa*VbI^N\1iS#$N^$:fN64'8e?/]J5]9Z*iU?Ml(,o/-.API6`=raW<2H)`pkjf=_:rg-_T7!-K,1tLCU*<F`7%YkeU&E'0%diWTc(kB;Tft#*d!fj-)Gn*rQ]7tT%/:Vg5'[r1AVr>p`I*j+#iN\/=@%BL!!Ph6#UJo0n)+>=+5Ab[$GG):co4%S@n(`&e5CZQ_%$a;3o@@4WD2/I;/!7>F7?"3oKT[G\0CZ0G5s/#+-Om_%=R)XL%\!uZJQmeuXV^c`M(^jP5dClQ(dK,*s?QM\J65l'>qA)^ClPR6f%9i2C:OX2Oi"h?d/JooU>YGCA[!QRSfc/"$OOtt4h<aja86\\n8o@UCgrWK%.HH1Wn#+:DjJE3@[C1L>pDBm2M2O.#P[Z/1*aEllV%prpCX\3U@i>g!Fi&og"$CA3P-Uu;6G:s]%+9(ES6Z0n_GQN;7h9&,$s:o3O4mE$$kR50q*-I&#eX1]cBW57Z1\VjJtMJP7;A`'R.%D%@:m++K*YkY]-*cOir27>j.%7b]_8_D[L:-hSo$+OG.!(CNmL=`hJ_*g8_DZt7\o\p<d>RJX#'diaIEBJS[<jkPT2DZV7g0<s-o%L%4^NSSE&*5S.UoS2DfcoPk`AcU<KN[T":c.cGBP3`%37U9i'T(',8m?th*1IO*)`?HaUAJW&cN&t#h2o$[i-LnY`iCI=eFM&U1=%2;)s?eDNS9Vpj[.E;m3U17%noWreQanU0E8C>m(%F:j9t\cc2^+OW0o:Zb3F<@!l)B.OsEVE5c!0c5f0R=grXQB3m]LEEIb;.HK*%.rn.^Xn[*,&r/U4UgP%B(ncQ>\KUY^^Ua$oLO0ZWNm,%r`;Ap"qVnkDl%u!;@Yd]e14eh'5:J]SiZVL;&f99m$FkKop)mbC8o2":%9QPCfQmLsdYj*6QIoq8*PnYAcX9"u.Bo3nG=KZCr@^AQ>3hUlfCfJ8g(';ZSH8@R)@:S6?&OC*r8/6L]'Dl<9-W%=5j8%u\C1k$R%LKceu:psm@^/p!<J/;5h95jk_1@_2U$,mEX_E(#A/hmZ3[]=4\Y-,'iDZ#6Hak^eG/2hL!A8**Y\I+H15IYEP(D5>chi%WHEuB11%lku(+ET/,aN`$BKh!N294m=?E\#9G^_t9-V[lA+&s&d&B`J<53CH&$qV[/WiptE6peeCRuNtrPAhCUY"ZP<[X&p(0jb7(CS4o0Jj%RU3;pg_g;Ja217iM%#^t_FUGP@g.SW2K!O+)Kks#a0"(H=?heK<t%ILeub&n(ph^5GiCJJ)9%PHfTqpS#<BHl\[):^AF[Y8d>"(I%+8s;"ZY5Qi[@&7#m'jmt-,tJWA]^!>3W_(IRB$,j7Z#=<dG+q(3'J`nKcnfH/Y<SuSj=FZ=n\=ToZiTZ?ToO;^=.<8-7"V1'Z4jF%=P.)QW*iag&Os(SJb]VZi>pd+@\r;A^hgsJ'#:4$q*F0,?X[6kLOE_)D6_N(9oGs9i0.JkeDitN7@RT]bteEBa2sD4n9-tn@;AaX%5GJA6P.2;]nO+V*9J]O=U;C/F>diH%[40W2>8"5]l%s.'/u7]R8rSuRZIKrcIiCf0LTPfGOSsLrj:0RQK$p?Ef+k9n70)28U^Q69%HplCAUap%ZfYCbA!ksUW*Ba%53Dp@Rj09b,b;BS#0fl>TqdEVd:gW73m;m!"PiV_Pc_YLLUmM^oYlFL\IK'FY23:J*[0.egJsg[F%LC$Il3X5p(a-CjqN#$F;M'$\Di_HSJNcoL6c:4./@n?XL3nW(ARG6o&goiS%&c)6dLj43fTJce5PJ^t,Ai0H&8[41dgX%BPST$5]%@ZQu]76]]-6rBD4V1NYZ)"IZ+48$%7"bN";p0T\7W[0St0/R[q[]-$BQCRm??0f"&mqgbhB]7?PIWMB<Q'P?Jmh,eSDcRs_o<M3M%Ab9q^VTK6I3L,?t_*[DXRlC''2=R[&#l5Zc\rp)i(!6`J.@I+q@A89r8]F;eXP)F>om3&`;_Fp6"r\#Y^HfVG:3hV/Xl-#sgi'mI%]2sHj2!u.l#0GDtUCn76%QVoS8HYq8luM^8hgXU7dYQ'm%)A(.!1p@0!\?hcgoj"4X(3bCUQ;E^@^2q'R*m\0.ls[c7*Kq(%"@C`%m&@1;Ye=.pkebusf$".F?36+sSfZ)9H#Ak$?H+j3!enCa"Gdj-.'Sm,iA-#%n&q7*!_AMPc3I;SX20r4<5bPGgSK?cO*Ym%A?[e>%!pe4W`ArL$2_q70P[X]JO*YK2pb@?J-rclELWD%c@s+AtQO/n2nH3?Ak6),ub:KNsdf9`(8gaI[XW5JE:THNHq&6OUAH<Y>2,psA%"@8/'K;nUn:C7WW4#F;ZF/\CZmss^DGu+862"/4=VCK*r*Omi4oI=A+T`I6=J%SaH)bIW[Rh@SlCs&W:lmu-qC@OharDD'^k_12=%ZoV.TAb?pP=39uBDVWOlXbV5sCLD/j*^*7D_Gh6jB1iHam)^p9jJ1-rNoO'*\ED`:M$srnHTXG=2KqSmbd?bRpLh!9<sZB9.#kY-%MUGgC_d1*S-%8rb_+GT^"/W!\H^27a$.DkJJAY')Jn\W9U:%bS<HV/1/G:]%94\s8oID+CfQ'j[p:tAlqUb&C#(Lbn>j0m@F0(cj%!Ec-G&l9mXZFiZnP=;?HoZ8Zo/A\R[ms#OF9=%Fqrn*DL4d92W!8tLC.M4re(`^B0r;cIt!eD+=5[h4"KZ1?0gLaU!Gr<g')An`<%aI[DO_BB^.K^Pb/NWs8j'OP5NI'O.H_[g?JTcnRV=<><1VfBlK;$[ZVolPL8%V>7S=.]^qN;`)_`Dpr=na.ZmCP8&F#leEEcoB/m%N<=#kB$pRC(pFef&?a'$cVO*O95VjbDVV13QM8k%PCm`2H9.`sW9sAQN\NAcNU\hPJu;^A?[55'ETO(N7jQ,TO,VTAb)IolR,%I<%EptH"9bB8(/?-GjNJU;Y5f7:hYmuT,P*</5VR>(p<HNd32?4u.I;i"*[:e=^ilZ;%[_7I>b9TOD+.OQ%`OX89DA4`tUfjV)`M4h=%?bA-9,Wi]3gim1b=*_fDn7m.(cUS&jY\H1ZN\Y^E1c-Is3I3@oP,iBgc&6%=<u.E>*6btH20,,"S?o#c(;?ucY]-"_C337^9uTqH%k<"MO#S,tHqU&oZJQC&m4hufpYm)8W!B.aX8_3I$Q1<%/Nl^(=T]46g0s*!f9(_V6+M.IJeEBqa0WH!]NGeBL=LQ'+W^\pla"!P3%9;C7(L'!8QT.caQ3%K"Wg.$4riLF&MXj9e6DA@$FRP&;69!Dl5h(,)CSKGRcf<9Z%9lG$9iI2#3](!pu.YL2lGQ*!][b1`8+H%a"%W(76RKbLT?oT9WuMgFR14E3%p?FE".4SWC0?@tI1Y=B"3enUnCg>0ld^&E&0d!suoEH.YZR00=rbJW1J)bLHE]at,)X/EhljILt3%k%,&Y-/J)^O^Fa.QX:%oc0k^/M6T%857,(U-"-mI"%!CH5cgq=_Bc[S"A*>fi#=uo#[]EHFcT\p_SSL=n$6h?:Ak)`k,#+LBRLoM%f.Am\S2^(/1jQ*M[;7ufg1Jqa91ULA/;ZuXFR!J=TY_nK[iX+E=ilDFq)SjKbXaCRH$r"d5T7OEiXC9'>BLl#P]9gsYeL![;Rc]4%^g&(W94irJ*djb7U!f/#PGl]@^*FBs)'PPO5#:Ntp@NJi:)8DaQ[-,9Eo)nD3W[/dU-pbiYI`5V1HhjhFc.h"aAsc<e6qU,1WP&F%-5DbP?Tat[b9D4uF`]45.1IYQP/L2.:@f_+E1ajoMX','*OCT7oh&.,fKTAmC/au&0<aHWgXl0PlenYRHloQ*+E0EGo[>2:/E5ud%i)"ALl7jG;R2!KQQ`4-C)Mmk%NWj\JU[;O`.`nK%nFunQfer6a'FXngq!!5Q6[CXT+Gh<goi9R4m`4?XU<[=];dq7A+LN_9K"8Fi%[nh5Bs)'G^!epK"ojaF`=3#H\8IY2_k8iq2Ht;;-J)$t%B$rl\d5SJ+]@G8Yp?Ws.`0VeHG.X:C7$I>S^)mES*-1Rlk3'?(G<Sm3%!EAcfX;neWPAqD?@uqjtEhiuf/)+$d2*iSnM(/]!9R;M-ce10ZHO_,b:@X3u4ou,__=.sM8bLfr$7a?ee+der:kZ%OZ<p(r/CEQ'%R>$1iiHD/l$2!e/j(R3,Pomao,D+.k-XjKSA41!cC99J02_Td!TeXb^9&>J`)6UEo2qHY)H!9SN1/Ya.pX+f6rm],&?JitnE,,o'%Jj1B:RmU.]]E>22T%5l`\ChJVE:Qf*Mf,qC'Li4p(`_Sj5lhG[9tpWqY/\rU("^Q)_XHYI3=uhn.]<(+LV#[>>%^0'fgaF_346;=%T87QsrPF>jLJrQ6;`hD,jrAjM4;J-a:gV7k`0i/<4g)ND*r'Pgjn4h>KM0N/kGZIK7IQbG+H(Ha=]6ojO,Nf#e'2q-C8b=+qR.Fl%3B)<tdZqO12Esqn3MK@ii!AFi]mZ:mrZE%(`,a5ocF&UnjBB6rkriDm(4([F-9'==,@*CMW4R3X4-h01L[*FL`J7)\]EkJN.chDq%BSGin'BESMQ^(S1pjUf6*)mWd>_cf(UOK]tG#%2_HcL7GD=K!2=rQ/1E51C@<!Q+l2Clr5K*r2a]t9.FSNIr7)L"S4`tf*%cb&T3%G%[BfqYY[63CHk6?"I1un\^:W$c_NnnpY*Q*U9\Q_&-;VaAaTa2QR%Q(LK3a;P:5_UW?;$)gY]FASm)!$?-_`#GhsIL/(uf5duob%g%732EWMeMBYZt$>cCdd9gYBCJq50CXaPHWDkHIKLR0@1VXa>@N'9Fnj!l9aNLuhtT+ZGYJ3Psc.b,Hl@$+:h84fl$0u/Q0q8Z9T%6+,=B#(S>``t?4'^[k&^H$rUNZr)d-pkW)>0h4FYF>CVF%6p$eD_AIK"K_QMmoE=?>qbgGe)*pO_R<PQ8EbXNOWaH,$RhFZPKG!M%`AF@/q5gFKr62A%H6=l%%M'6UEdAk[#KdX64SAZIULQQ@Jk6"d/o9C:oZ><SIO(mciZ8rTUEgs'8DVtVmel`R&+gg!rpGKq]ssEd%rq7jNUDklHa8!Iq`U2LVXud_LmgX46k)Fl(fp.q:jo!uaXrPqum^c2Jd"A#MD?tiTQ&YsP@N8BtEe`HW8FE#4S^W"4E-_cIpc5Vi%(,-QdAb")lQ8r4"b_,M]H3Z)em-CQfGe6&@Ge7HmQQ;^M_Kj3QTk,WT'qnG<&eGj0,?Wfi8uXjqOX/@^6=#*ChA%fp[G(?5^&6)g%qW`Y#r:Gt=s&EX+RhncKP*a/'-\F]0Sp1AjM)nJa+u?r#gJudf_'h5sK/tL?9$1.APOcp?]kPWp9hn5C7BGC&%dtUuqoJQo<+d5"%p<'!lO2-1k;h?I+nfb-!mBrUMNlQ;oV_l\SoE!Se1H/EkYi;;5NjcK[@0Kgq/P+=r/u!cm+ALuc65n-[DNHGW:U@=r%6[.^=W_32%h?-e6b0[kuQ01S<mqc7))8\l4QY><uPgVkD*Rd"#nf"C+*mA@@nB3c,LHG:n(?PA]e-NjAd<mqH3j.<kiWjb,VAp%tPM8u/MJLUB%d7E!K\BdC8BWm8^Dt>9m]?(0D'?6Ncnh'sV:K?kHg7-ml0"kX-#;s&-H@[5Z;SH0oV(!RdiL,Npq6!K,qj/\2V>jbFO)OTfYCBfs%F[U](p[5>s]56p_K73D*n$7--(ZYC0&F>&=%XSI3fB]m&8HeNtBB-:J>0O1S?a*ETQ%$;c3Ya<);d<4f?o_dIZRbOsr-!.R8qg7.%+K@o2At#s%,Xh=qAUYR:\PGFse's^SY!&%)W]LL-nndcU&-XsGn1uR`M`3_\d:$--G8[A!$)3(E[WP/iJLjf**uaT/7_t]'Kk:8&%?FNoEP)rAU'&3Blo$N%0+^#ugeC_eOs.m(ug0T0jcN)(#kGK]F3%*UN:qs(r=]0CTo\i[FlEg!as78VVJ/(-.Hpne=dDm2r($-s_%LKEu.[)1XLW.,cmLf)6/<5[b^6Z3oRCqt_[Jifp$$+*4O5=W7u>7=ufAMYWeJ;G`?fft%Pha#f^5gDGFo]<@VqT/O;dLO%`!e.nS%<'PiC3Rln#gf+Ws2lLtB315qGr&3j%,6Xhu-+D5)[))P0VJ(;BAF-p<^7Q"t'$f=A=>b!Qkg+e/GB!HhCB*iU*7m%>e6k!IE_XC+%G<C#&f<N-'@VIBmj"bqlBIt!gMrq/sc^;9W?U([*`=<'s_Zk#=p._d`j`l6@1J$T)WM2)?5T;)$qpSPOn)ql4l[ZWNaBq0f/c'Zo%4/[?BgLD,-K$^)1'WmE5.f(Uf((1lHO]5Nd.h??-d(uAn(=9M^c[TKEnZG:Q>0=FU./^MkgRB[i@Ha%uk?V*[[Z'qVbP?6Oooetq%)p-&4)30N4i.<cZcZbJggUE<9]>Ei=!VWBiq]3NtLdGbMTfDn_;QQ5_erMV-D_#ciNm`p_@n(Q9B.d^5.@PQCSUhPR2"PaFUSts<%Ls$Cn_AL&d3"3W@JdJR&R<_lGKc"eCaS%T52qlONm["$&"%&A9_gS]F4GD\TQhG%+aaS8'Ha2K)l7]*s9Y,c'XW2g(e[>AOO/h-2%(&usbV(*q(b=,`Uk#XHWI]MaZ=67&p#2YT22if(n>n9H63A\n(b@;T&f'ID<V%jG1]md2lq%>S^dXH2",.t^ue>Ck@YKJ$kP4;qN%,;mXd;_#L3i8,8r?OE:;c1ShPo8cn)7#EHD(Z2SK+j5L<cC9lQ6]9p]-#Cmb*X;_;rep<AB`LW!;$T$,(bqn<.nmntPq(DWo?FoF%R<%h's1pYj'L&t=r'i*q[7T>%X@VWDMI#5C%;;FA,p:9Jr9Q^HL3[5?a3Ot+275qLd,J/_UaTO/!J>44_mY$18uV[4`9bEAhP;$L%GjkaJgj$7L5M\=c*[pcb/h\e2Y7KSN+2m(#Dn>9+\SVTJ:_'aOi"Z4QbhSFPcMMYCDY0GrT]SA)Dmmd6p;ahS>MZ\uh6\R.f!Y;$%\);S[CPTf5-cA_jrYm`mqca#T1Z`lBYK%/K;=Yk($];>PS^joGf:F,YT'ZiqfjH9@`'K>PHM<W0&41u/[CV'$kKeWGQ27Y1j0$Sc%VB=l#-?.l+I_';1\n`e,C%]"sI^#sofOqfpYg!gkNT1-ljBC/DJflHR;CH!"eq@G\LcBH?GiGR!'W$R*:?og5^"p9:kgmB1m/$2c%IepH<`(N/qgb37i52]q?im*/2%(F,R;!`J#ns`H:(Jhj@Dfk03>];(9O(V?0Z)@ZQm7$J9j`bPeYK\CI^Z7IbQ/Ce"\SK6ql.UB!%ApW9@n$IYO3RBtX_Zd']*LPd11_l0W'0L(lgG%Tn"(XgaAe47E!;\\D$ra#An--2;bM"Os):;0G,\_@PTJrq1B=`W]3d+i$hbV"q%B_Tc[LY%iB]@MP&-Bp).P,G#lChp)ck*d5Iol13195+m59tc[qLA+0PiSnSdqmPW8Y#W:[^Ko[1lem$`d6ISEn+kDMire_HgZP^g%kX56/]+dGNW-B>qp9M>S]\IU]h09.;Of:2T"_P8S9(k^hqXmS^Ch(RmMpcGme&S>`s780l:jfSqjgBa$[aF-QRaLZu@<oQ8GhgRA%r+Lt<.?fS_m%&Z@Ob*%=Z;;=b\,%*"NH#X-rV5V08G&[*mB1a1d6ITPmf2f_])VdfjGL^1L1fU1d1j[M0RH.2ZP9U-<f,_-\lW2*%W18+1&f]Mi3%J;V&mn3abJ4-F*K\.Wkj[O"i7'MKgr5.9L\?LGPe]amR*%[dPB%mEal598j-c>f!]RZ1O<aK2*l&39Ag3:.N)Ws&%Ypu(aoh<bZh+\^:L-Jt>G>TJ4`4uN2]=D'_WNd#hE&s(9$\Cs\1PH!fn&_O3I"BC&-<NaBPb7`Qi)%%N+"=Tuj:OnCD^,sjK)l!F%pSA8\Pd($(:Lr=BC7=&u?Xb(0Z,hhH66-hWC*Y$VmC<#d)pH3+B+Koe@NI,#r<:X8'Vg:YQJ<(hV(*f?A-f1h@M1<&q"E!lU,rSB%.FV6]p;V=u^S'f&P64A^e2Q#er4Mc?0'&&:Vh9)^W@2SJ3h)L+,]QC%Dd\K'1:[338M)>p:k3?lf=2d!^Ta)/M]?8c2jW0XA.o't%7B'n5QIZ2i,B]h6MH&XhVCrQZ3;2-VqB06YNoAPMP_^;;1mYE<!fC@@g+S7+)NWN?U-.b)9^7#i3Cm9UUur)10XY&,a<ctG*"RD%%+f6q7@q:LM?OqaO(!5uD%O"\GcDVTc09A_'iD`n^6<V7ZPI0OB07TjnAHG^BQBVrgc38Msa8kW!?lPNhjnKWH;9lp6Deee".F-[Y%3l"MoIm0!lj"^Hlms>*-8D[Gp<,3<7BWI]0W'_B(6<kBR:l2h^fF_9M:rZ&hLi65/S/u*;nmZ`W704.(,_X"SVV2"h_<)Zi7u:+Z%!9_;/Kn8X-$m49kM+j_d?s."$EOMtN"7@.nKTJ2OWSL7*AN=nmX=bU],emQ9EgS'b=<#@&@9mAGmi]/oh@M!:C]uLb1D9OUF]`Rm%O<kIZ:JnA,3Z#?Th1?0*bfEn^SV3tmWu%Z=0s+R"0d2L(lK;QE0q0O[0>/i-.^D1AZ<6Imh,-.a%GPknf+>Tb3iip,,t[jjfOdQ2%Nh3lCkS.XL%aF>Y!?TG2hac5<Jo3Y(*6WCIKPYsQC`@VcT?Jd8G*5Pp'HogD%N>lkb.ZEcr3XB;dG\J"</23OVbi6+BVF[rp0gr7%baN.H3@YC$+DGFtD&dukQ9j>+'gkQ$<\(#^X`0WE\e4u<(M0TT1bPLZ_s.^9dc!c@(BG$_"P#cA7LnT?gm3I(C$cJR/8=oKk<W9<%OELtkSkE"P;Ultd.50-"e,X8cNHn:HJ%j+;8ZtB0RQ+\DcO+gc=JCqAK(^3s.CF&+Z*!6'JH;I62&XLU8]"mf-%tFmAZ2-D$@rrb%3a>S6%bYAm6oQ`J&c28X([34'\codMS@n$B=:]+_F$HJ2.8J#%?b($hVbTgmj(UcBZ>+;2l=r25M>D/MN7.jG`-Fo'9bVE[R^Ui2%"@V1bGuL@;OZAGn@Nd,`l[U[J"0r@q(mJ=iW\@IKT>m8:?_3OE%*8@c?jKtNL>Op$/ilR;IkZo#i`VQskP'n:lpRRj83;a7dur!;%.X?V:TleYX&P(0RA1P"Or53HsafWs3=kRQkq4(aAj66(,McCm=5bsP@PW>2YFEre>&iML&_R9G?o1JuJL-=rgf2IAR;+Ci2;p/e?%,dB$J#H5uYM=GF^T7,Wp</7p;cE>@%/?=59pK`Ik/Mof-gK8Q(2XuaYHE<s>o6-,XUHT3`%``K?o'(3&AAMri"XnB=0tm":_P7?e%4HG"o!.6n)GW`;q%]@\aTuFp?0(nA#HU1hQbOa=N2A;9DBU`Ts9:UWG>2-Erah;`1h,7595jId@S(T']\EIrX6m5>/knJe0P=gT\%jq1eM`)?`EZb6(nK+OYu'*\&MXYr:eJE%gU+RU$Li(_<U*1NZo6rD'fnV#>P*;M)`/Hn:_?f]9UO*+RZkZ5UHXKrT=*rIoB\#7!s%,78l&Nt?TBJ/=KeX)1KoL138N[ac*EUSCsn!>TP-nRI_+E)?80B$K^LR,k#F(->_MhB:Wb:m]ahA7C\K$-$_qRigHrah#*`;do'J%bS!LP.D%kIc73!e5Dr/1)3?$^9C^LHYC]2D5.gf&9iOAHShYu!95Chf"Yp^b%C/in't1Z_!^Z]R)$.SidjgS>"ZEj2qH7sf<@3&:%@,TJ3719k#"b6r*T@NoEiFhK*G6G#a(*5@[TiY>6T[I#ESd=$GMdVFRV=oo>SRI(u&R&OAZPS_mbNAtAU^2R[mp/[=fl:FHLP$A?%giE\'6a_C7T"V.)<48VD$cu=LVkr<OeVdXC3s)8fo3Kk!M!E=cp=%oJKGb1Kr"%Zm>0(qRo`Pj8/S&6_N%Q2L+/!8##ES'[]c)hi%Y$iSN#I7>Zi0;q,!)t9S$r"p)mU6#,_,B2[@9%uldZP_&EJDCEk#,H*`m,^O+If/L%A\;\cH\jQG/o`$G"68#,Z\4qR/c`6[-!j(%H4'Nq!.ptVe4:+G!-5a:`m8d"Am5>46.Ka>`\F?H=jq&HQS`K+<;M#S0]oZ2O]`\>aE>j37Qst`H8$T'YtFFcd_7DZEm1$#J?S.W%/;p=u\?\kE`.q(:YLH^#b1_(T$@FA9itEZETB_gJ/dnAW<cuY'EKsd<->/F:Mm=U2h7bl.!7+Tr`^:Ta<NG!ml31q"B$Slu[X(ji%#MCc6NSlA^&UCYsguaim\h\$AqZI^^ADUH]1S?k$OeTbPI?F(cV31qEGrDL^gml'l3/3Fu7nFe9(oA&;^sX-Te'`1DJV;jUc7g&q%V?c#Zp_"i%cd2gYGc<KCq..;]">at)*CWB:Ze#qj8Dc^iHlTj\i"HHmJGu$tGCitdl*?'P^_G?^<O^O_1Ott)G#e],JW1YT>Il`j%d1B4^Y'p)^^l5.n?,;4W$nX'mCLeq)&8Knai\&tgh<WWeccg6^C?\T'5(PnOpfBC2EEIqf"",<D4Y1\P`7#'W.bM06\sfSt^?E1e%AUHgd&e%6lT5?q`ncjRNe<mqjd1WHXRX-NW#n8eepuKk0lu#H1kR6>`:C(:B7bl9[lPZ!VQ#qG)0-O]WY<]"X(I`0_eoq4Im+Ea]%.`p.k`_318^f0Rkql_l-f4*"Z68BhG-VK,J_LY9;$[5Xp1:_UM4o(!2AeZ<ARN1NF,:Vf"7ZkO:cA^ZfD^N":)i5ZXF=&Tuo.fi_%+?dMobD('$q,O_%'0stl+Jm:Z<ps<^\Ce5&`]HOrDs#X)Lo=J9l=Bd`MX1m_.g)LA&pa0cMpJ9LBdE@^TKeeK%-Wg2kQ5m=31;Ku%rDJW-B`N90WACh;^B&aul"c@u[`IE%!-31+GePI:OC:;0j%/b)aeISPjMou;cr`hZM>Yr8O**U9I*n')9?L[K--G)eVa/^$RT/BS%F?-#!;V-^;1gL<'8=AB\Q_RL[krPC0c*6o1][mdYD]DW\nG,>'S;NmL5\1\t9K@Cd@%8C7\uC9#O"Ed;b[e[`"m_+<Y=^qdKkM+b%5#PmJ^efXK9VQeQjA%MBi6;.KHu]gpWFYj?@<Ef";<o!INHEa6lRrC7[&s0:']<QP"AAMTJtQd%BeH9ih&MA)rG5I!PCP((U+$p*%G-Q3Qha4>1i>fT-8HupY7&3pJ'U&TGDB8U0lb(MA?tWN.h^@jA/-R2cDQP"V]E.)4<A(e7hCam#j#Y7D:-4>rqa4P+/k9`!-nD4J%LLJ^5SLB?(H]6#OS4Ybf_U/q7Jtkouk,f^J02R[+fN.L/jB3omePZ\rN?0#'8sB_ri7>!beEX1YTK*@-%7>A-DATfUHU@Q_Xf)0+%^]](gW,qtG+(>YT$0sCspo\+nHuf?8e$.22<lEWV,A.%2[)1>S3%_P"59cg]YD2%?USmR<%ZW\DCI=eDl*"t*f77@2Geua<?<mT@%bq`dbC\ZJrF.3T)nPG4mUQQ'DQL*[t-WY"H)0mURQ.TfB,qQ(Kele95Qn1olXStq8'"3:#AJi%YBC7ZpM'KQLB:e1OgQ.$W<.&J\%PtUZbmt_\BbVGG,B9qtpZI.Hj2-m#]XLr]QFW`fL4*'-<#7iN'fQ430-m2GdbDC;+5T@LoklL.Fq@9*J%ND5'.q6`hW[%ciVWBg?%4&TgcA%>2a;]rmBnMli[$NLBPSo8Y\UESrRpR>E&n0&46!!"T&)Oo#Mns1k-UE,-I*"`n+e$*g>P^)]N&a_\0oZ"."AtWhj0G,P6%@K8k4.nElh3YkLAf20iKA"K>gaPBjjr>4sYX-aHU5p@uLc5tdT:\"V@,P<GFM$eWQ#!u=jCbmD_CGLbO.0ceX?9g0^m%`[X`k$@Z%V'N*<ZoTG-jk4[*gG"eeLueZ\]uE_&JebHE$f;V'J6-BjMeo5)DOTm,&8?\DTO9S&2\KY9XO[sZ`3'hM;_X5@O9per/&lUiP\XJB%:T&5&@feGmKR9.hOZZ;Jg"40/egPYeOk-688b#2PetH#:)?cA4e/inq@,V848h8$rO4W,AoAq,V?Ya:$DuSQl(l#\.3P3ARG-'.B%0i)$?<UR0[TnEUK/#d[lFZ;8?@fK%95+s]+8Pk_I![Y#S.D/5J$=-G6)f65kli=uUMk$]RDT[q2W%#a)pc*&((8=142<FI5bf9Ks%j3g6r+GU:iJ=?lH<\t%%`jkU!e&<@KaNsZ->-<TY40WISn[/V3$Qq'>3u9:&P>3-b.I-h_$::J34.&Yk?UC<ETE@b)]2Z"1d]e\T%7d$/eGMKe%j-GUNk]lM&K-3?\=('B7GPN.4qnI:>F%Bi&a->b^#BEOFKfto!N%=[)^K@q*_LJu">2iL-aTnQu'hWptaBO7JegUU@%6't_p*0>aH?>?NM0AFRiig"tU'UW)Nf$A>7;sRoT('89prH>`KLV0&+hCea@<1WpQJ)%q+H?#Y]C]&E$;tlhZ^=Q],M>K`/hI,uo%^qMfuXNYo&]F8-jPis"a2sDaUJK_^9m0)M"F\6'Tl+o&#gQ:i:!Mj:#[a+8?%rrT.X<=(r\/ohF:hksAA4g$Sj/?=B4_DdViilI*%9!3$q@mOp#F%JXkpq/'*[QV0Km"[Cos5<dMQLk7BINMq?CljduU:,^8'.6d[lc%!t?lBOnqHoY/bSmU?XK4)VJe#ks8(/Bpa@%D:%/uW.oigQf))L#oL'$qdH]#Ut:<C0WO.6UVOe7-ZrP3Wba!p[^@T=T>LZGr+,2E*%cl($Ij_qIkbO98FF7RFq&\D4ra3S,t3_rStq%m`C#a;9>M1@CI_`-m\W.(>TfaE6P:1'Xf"uX1WK<[-*6E)#\shI5CR`VC>)EA?S'EMA;P:?-/o-(\7-27,?+hC1JFW#0V_TM@$$6%C:M883.i&lRW=CYiW[upUr;HAQi]5_ce':cZM?>nN-qs^q,j]<@c9?BZDud\Ul0ISSO>NG6^N8shq[##'k%hZZRcLBeF"%,#/@[:%&CAfsq@uU6WlYb-$/Hh5UdCNJb#13/=-F-Xe6+oe)P)RG-VAIn[6uic7"s[rGb([54r)-/;#;uYm,Y0#G3&%W$I@nG*P::?1^PtS%E%V;T5J9#`RI;F9^T3mpqL&:LmpgG<`sM<AgUcAHMuqCVOtE]%g]n92EH?#\cl>pZ7LXW\H10-@Ba(U"E!5\pL2%Z8L*sJ:7s.4=%0qs\g@0rl2!!9T=O.:>$f0Ea"Q9lUV&#<:1LaWCcT]S%H>cXF:85BRW;5,0gZ7+C>)u7#]#osM^-ql5+pQ019U+l`#j.hlBhpCCS%=]*2^e,5ED4i//%%s9R'ZL063"P;0R_<Kf^kZUZona^uAa[8Q8;,:>>L:`gMW`>,k3es^c?%$bJ/J:Ts-2rSc^?@]E3LL>P<2g2e%0$4`ISJ"s)Ft("\2?E^9-oZ;6FRq0J@Y>9.KoT<7J7KIdRYnA0qG0cYZd!;qjh*65FI."<L8Zj;,XG/?hWE\bk.J,7p=k#-YmuBf%j0MbO)/^S.;e$KQeSCB\UPkNb='XIMbY))o7,i"nTb\@^n/$5,Ad5<GZG@2J!9f6#DD-V\T#nWc;P-)>CPQeGd7[1^"q2aE<=X&D%l_Gu!j;+&Jb5!TC'HOW<Tt>Za&6cL.\pMa),qui*jj)S;>4JI`,pKmZ8BtFPM:W,bI'BLe`F>NX86\UJUaPnB<VXl]B6l&LMfCV?%r%n6^r<jRuOu(4%[YOOHc9eot4Z`Y!+53$-\871lD=ja^[M.R?l^2ao-B2k(c_:J9ONsXD1KTV.=(ChO.KMDR[\\ZD4eUW46CUh1%[eh@\09cnBb\!QMVIFqH\t>BA;B#REY<Td\fde3i45*Z50uVkETo$`A\=kigj.CMm)$36"k9m4k$CdPO%Mi;K4hGe@,dFk>Z9#C'%)mrIr6FPnt]#@\"9"]0.aZr7u-Ec9e:4hc6U?Qs4-G=GDdBe/;*ZfO@60Vs]n;Gt2bNMu;8NbtjdlZ$8lL9@Ykd9RZa;uR@/6#L%%q?6gtSIchs.rQCa.f=WA`-;5F64h?el^BsX`);bSd]<3`gW:(_a0a[@2)Holltc6<IsEGP"hH_mU0I2Bl`/>>YG`<Z"l3JZ=9oTY%8,UhZ1k7JQT'26fr$?uuY:2s.gGfp[db0kBLh\c\/BGo3MiSDr>I3:QA8+C?'fVW?:RXJ@MgSH^PPS5i(W<1<8\@Q-G-L=63"s!L%pJN>f6/Cg#'%H7jS(:j2JX+q^I"pa:KZS_@%"Q__8=Ue*4^s(1.T15d4BC,0QUK^;#L&;^fX<+e=LPY[16-A%9Hm]4*-CEZ.*P<4%ntL'?MP5b6+7g%;J`XmL'&VGCRi_FI$&9`QX"Cjo3I+d/QsP/%"23K1,71[_F9B3q6hM),"qC&`<bnbd*Ul%ER1I/o'][C;<bCn.%$gSfMMr-p@#:Ir:l\uK=M,(qlTbskIP3X<-o<`Bo=\2piT13!>,c=Ueqk=;;77J.i!A`QqOQlD]:R,/$51qCn+@'t^Db&oSR*3KG%#bN?2M4<1KaWcG.&Q'.%^XMp7N;[C[QUsO6/R,7a3D\D-XaBc@O*nZn^9jWmMjm3@QJ2%P@OF(*@1\RDo;"Mtm2X1AYS[;GHZ)rA%,*B*]7>e;>>?))3KG/Y!i2*J$K6X=,n.ulBiup0"`]LBh^IC$CdK_3Z3JHYWT"PVgWb.?mbP#.Z]c<f!//d1ej@4uCJVTsUm)$A6%<ImSO\U!fb;+QU.<P[%mqK(B9XNT*h8LPhfN8bTl+Hgk-/PhTnUH#rI2rHR%@1lp(`EPL(4LMEL\d)4+Wq5SBm-=VhOH'OE#R;=E%lRE)>VXfs(TG4jh+r8]A?>T"dj5Yg/PKn)')J`#u'F6S:m[58O@=<_H(M=c#O0Q:=k(/2J6&hUJ4q+c/I#3).9'ajU^u1=9RimkC%K<M-QWoWJt4Ql4A;,%iQ91,Hm4Y8]J<XOS87(5,^N%Tm:I@dc.+4fMFFq8!KDlOfjkWr+LL3-J&8/%2oj_S,'@L#7hfFs0C%)XXB%-b5\'G[;t]7D7u6/kLr(U9poboEK\Hc"U,/K7Kjl\o6$Pe?n8$Cf/BKGeaRj<5CA;2QF>U*C5!VRGqh%LWor]QmL[[#AhG<R1ur0%#braFE;.96h8'5=Wf+nK+EXU`\?4kAb2%=KTLD6.2GaK\0pRONAY-m)Z".U(p6r-e1s.IlQ\2%YS$;<?n+6@UGB:`<=3$hIJgCsj%3DdtETU@\0[-)OS7>l)Q_N9Z2!%<2*T63J\6#KWJXP(oj<&4PGO@D8YRMsY]`m-lIMWdRP6;X\t"U;eA$`/BUb3:.*)Oi*L%L4rR%TILHa1pAA>"_"L0\O$"TjIaf!^?P,:dL1Z*lsFHRHqHP6,Fk$#";o>>hI^lFgZh100NbT4KX<AN"V^RhX@0R"+2h7q/6=!+*kFl(%@l'G(U4_Z("<cJ*[H,er9if4O.4M^SOMO6r3L_q5,(L69$Egj]M9p\9fl@KX3?B)5h8ZNkHA"qu=m2h'p0pj/c9/FneLIFk]I]$h%@5='(X#COH:Rbq$PqiOpM7@u!gZr#^S7>[X:R-tN?2mmdjK@n)FA$DZ+_J6XQ/95g(^ITm2oe2Jgiqt_;&Y/2;>)CL`fi65NJOXs%R&-UUVH=$:9&`jO2*1?McG#6@L<q&g-6H7%$54G+]b<,^#[u]b\R9s8NoVeLe(26[I6<!_s525Z/c&nKX!9,!_A'J*IrOi'4!HB.%6:&2ppdhAWCoD5N_ijeODXD7LGZWh-L3n=!WZL=u3Y7sL)l&&(=-LP*53kCF)$QBNEu]4I9g`*k'd472%BX?uU=+EVi8a.@S@*u9%T+%DsCb<rqn<DKpgE_]]VOLn`cgCW)23\XMqZoC&l&V!5OXQS9pj-_(s$bMrJ"kl43/`n,Y#&R+"b.@6]=%'f<XbHch>pt:m<M4/%crH>6r5Yj:qrXUICsJ$7]7R*=*X$+qNG?&*<jR.Kg*h.CXntV0I9s*X&SNI(e]Xau$pE3QPJ=XSheE1md>VG*i[EoBeVh]0\udr^%FEKKZbg1KWo_(pblc\D9fD=I.I/CV:&C/GJn-hgF2qZ:Z.MXG8d#3n30+["h?*!;gO2j\CoD/;d?gm5@aSI`R>V2","]lfMkZ<^5%FY`[+<tk.7,dODI%6sQKC"(XY=tO1-7OJ65+R?g"!ttk2/&ILTgQ9s4<c0S?e.d.>><E#R\L:iiS!qtObdBZ]lY(H+-uO$"1dTV=%'eZfA7.Rr?BeC>MQ(=O8or)u>d@Q0Z&cJT@4qQ8.CLFc<F_HQ)*aXWd"[]<nj&/HRd%T$A^=#L!M,UMYIq@p]05;N7MBhXjlaX4i%.Y)rRdtrZb^5S\LKVB]f6>&/mX/I-FHr3&XhceTu]4K40/]u[qS[k8>-g[_B<@.43irE4m<s@[onij/(<>'03nnb,j7>F.F6lOZ+%`g9)'&gV'kVr2jY7,((S!=sD*P8'#:@XR+5I8F68C\(*I$n@0hC7KG.lk<&TRdp0-OO4<*@`AM?l7K,KW5*PC.C!#)Lr`^3j'0$T%rc3Wg-i<a3'J:>/r/h4T@/bBY>Q#<R@S*ZkAl;55:ib+Tr$3\bTZJu%TdR\X2(@Fu9%XOgDOtXZU^;7WjuB!P+muEb2Q:e;]?fEI%fq$k<K=(aIJXBC14];VY=k-*YVSiaVWtqt[$((m@KH(cBY?B\F^l11'%TbYA3ongR!kXA<%C-A9,t[I^R0fcqU)s/SA-LU5Pfj@F%I(<9t^iacNh]BjD\hs^6g7)9g@6GC#]2:?*6".*;%<a+&e*\"NQX<=XG6GOu0A=5QNJ]=]&/n;#2ZYRh4b*b_b,5VII3X-NN4?3V%lhF8K+PhDJ+k9'JbWb3M\).&)SU>`,jIiL6*g;Y)I"*@`\j$bp%aGSTm+\uZitq`MAc(a#EHMg4B^VUii>c2Pfa_pABe9q$"qkp!%(1'u^n2#E"$@nT!i7;.+XgDib8#P8#g\Hhd"lG,F?6B'Vf#Ff/"cS2e)#hNa7`'pY)=Nd,#it$`KN0q.]1Eu/\I2&Sc"q^%4nsWU%%*@?8ZtiC5U,O%Pm4PaU+7KmHhZV+]Z-oi99gnZNk&NUhO,&OohPnoc33Lr;e]RP]f3j#Rk*=43N,LEUj#@'u[>QOd!Xc"uFK?o=%I"WQ/8qljc7*1r<pn.TeKREK7/mMfq_W^Qlj+AVMPkmZH!/Enum4$sC%K&!-e?bQ[6*->XK"06\qZO_VLT['FPK2Z3=@>;2f9jo_%/6#_2.ulg@X2:pE1nQ4hH(A7(NnC-'g6M0@@[)/-k28DH@>Zf,otguiS[j+!LlbGjB%]aoN0+gIm@/7g?%a=U.m(iUGJS@CS4Xu7%O/&`5-lW!I7)K*WAUc]:!+kR/V^-(i4jeXtFYH7sdX:=+PRfUC36[kj?#`4,`AJ>@eg3HR8[!A1edp^C@8-g+WhEb9&H'Q%56NN.%dG!GQOUY4A&`]ICJ-u1'5"8.PJ(VRRViV7%HKdH\_MeSBJt?GY6u0JbP)VFm"PaU]iV4M&4k"7hQ`!eP"Hr[@3p[!G1#R`>-f_-D%Hr")+b\l6"Y/J&Be'qn[0XG\[/ao@4$U$8Zd&e`uKG!FPTIo>_2K0qBQrG;LCLU#O9o8[`G$5LE&:T"4W5"LOqBh8YMk+U8H9.p:%lp60os0m.t4doYZnJC89aGi,1[<:Y@#tZ?bV$%/SWE,s.ap*]C,BqUmJ'X%/F,)[gLpD6uWV>MdmgeNP0nO!?72&9]eco^!Ch<uS%Up*,GAAFj5,0Zht9q;eJ:XY`6X=)g(Gp59Ol4%aM]e$07D*dZ,J#:<6Y6,rF===4U"@KBX,H&)&i$du((XH4DPZeeK9b>spW!\?W%ojOiX'CT[rbC!6FmpCtbh*O%B?bRH>H&)X[68ZH7B^.TeoWX\>,qX,`!jYasZDd1S)C<b!XM7f4qa)puRajB:LM>qUITSQn_]nrM%#L+H][aT[!Ie\3pm4#F8(]h6rptI_Ol)*>bX@h3LK^F,2W3Er*!9A&L-Tpf7oLr$*o>3u$N#H7lpk5$+/<9#4.*L;EGfVQT=[ZtW%T>o!LFHKufq,(Bpl?Jt)GK<TE0n>HD4/!g5bo8`Bf#^%M#S&_=;GB^daR+G8`s4#ZK#5Xl-^ErdEVpYU;9]qB&eN,-`,NCeYD&"[%-DMSG%4]B@X;PMn_k/uuDujnbRW*($4h#38%OY7N>R[Q&0.`M$POp1gKI/0ebRL==Wt6Y5FO-n@B_jGu.uetk&8SUOZ5_lpOXd'?%>Cs6lPQ(t=RDK:TdVRmSWUC2;OnI\CeZo,^aaq*ZF8J9n>=Cpdjd:$!PL"k@bVB!e!Fk*S?nu4frLo),/_TG75ZeL6)F1TA+&RRR%Y].-^&pt_3YjiXLhoonm+aj_-N/Ynm(C+c).,08gq!*+Hk`1^u]P*V>_?+@P*C`mELoQk?cP>93(e]/PeXd"c.1>)X$>B4Jc,QE]%]Znifm%`\V8A5AQ(=X5_3Z1s#q+QhWqKjq<B=)/YdmW[KqdRd"KKL[qf"A2%2K?tV<-1%[!$OM&!dbS<g3$3s<H>5W'T%[K)%AbX%;`N>kWV6>9q!6iW'bk_U@,!286SJFLon.pc-)#^3"fBeu-iTc7#NQ0ABV'CBfrR3(e,m22&Yl#qW7f6=4!Qdc1JQEe+s%8';b?Gt%grW/k86N7?\LV4*.1Wa(fjr-hUf%6MRXMeXZNSecag%;s1Ra>W1efCnN_9%5ecCS;A-QKm/YT*YL>t[DNU,n=g3]=9-A5&B0K'M_%m"J!dL!2@?okE:FI'Q2VoLbPCa`akeCu3.3f3,4^;#:j:;0l9@-\7cFCkj=VdNEUp&-st,315JWDAtaG+)?`Ab#E(QLj]>RA>rSm%TLOfj`P`?HBPoSZ:n>K4k\[Qm"KjH5IUql/qi@rb"jL2!0iKHc:`dU]!(GX%0t^21j1uA6LFJBM-a,RiMB_WT4r?#843psal+dDE%b#[=YC3VY,o5B420mD*=A5^IRU]*%DGn71^k1CXRS-V"ncpc">J8Z@ki(Sa;[[e7,3L<8EpV@?+8OZQS1dR@;W]k;;p:?_k+Ke/^%Mg`lnm'fMn/e!n3*+H@R]*9-UCd2[LnBsOsfU62r##H;kRiGG1]fs^$b'X(&ACQGLSP.d0@G)6T+iV2,dWf$K-EJccJ]Kq07f]e-%%IX0jIOf%b3D?-U132_pfD8r+P%fLs7;Dm2UH&f$_VNjq44NO=!s"]DrV/3-RI_rA=KQT<=hC(.QUBU6/1uo<a<KC[/3/Us-tRNd%Ol!sp,:>!3<+n5lOoIP`qq(a"kbc\KjNF=TYoE=ar18u6jZm>FY]g?[=ocs,j;%Y@@1'!BYRNb"<C"D?]9I1F1E7ik4-LrBL)JoF%D_Fo/b]_-mg:OE+l_fYk)j&6"rX7njVK%)-%T8QU,E0Ys3XPR\:m^Ig+aiX27NCX/Y.-5hGM.aYi4rD;dun&QXfOY;&[Arl8\N>;%JA;^n?Q@!T=7?X)ddCP6P<f%d@u`p!^0U+IICb1UY3Xj@oR)cah06>t&`6=`?>PB*(rRD:j,f0!\gfK\b>Z]`N%P\LBO6\@?%ul&%NXNi/ge$KVckJ(m1e1P++_3?ZNd3T\4\%bWW!M!B)LL^X.bJ(=)\l/ga)07A0lF]4('?H21$g[m",+2m#5(=J&Z?,Yi^Y])G;%KU%k^\\4KNLfZS*JLLle)5ifKgiA,H;:pMS3f`P<c;2>lq5F[UC9O3uXg:gUMMt[_&10Vjj/uqaPuqWl^[?YF%CZ4+<;q<P[f83a+")%+\c5^,nkTTf]WF06bl$.4\*RihSS4++mfKb1Vn.jJHMXn8*qRFg(bmc#jLL`J0?N\b`=AC5bd\fG"L\nUTT3Uma<I#?3C$],,?6V%j"X/0bYmIi-;kHu/Lebd$,^mXb"^k$MdiNeMldkX]:3OaZ7!nQiL??'1)XK7!s>4fh1[[NmF@T_P8qO%aGj4<fYro&V,tp@^G!ko%(JR$FI$tK`=u8&hU%+V$74>O+LlUK==`>p1_fK+`(S45k;b]cf-QVOP]pmW!-:\>PYt=O$FI4Dsl8Vl9Hr*]/CS*ckCO`THC@u2N%<!L)f4,g_(!dc)r^9NE)XO[A.VF-!9pSo8m8-@Noj<\dlDH$(FSEVDVq>YUMNNr-/l[3_J05`<O^bJS>D.iLh-KB^]ECGM*R8L!*%.X-Z$1<oC6Y!-1:aRYET-6q<*/<?A$M[saOi01X"NsaZ+gf31;+8k1p5.R4cs-2[M`Z:$lClkIjYUdg\!HUbB-auGd1^tc7L`=ds%jF6.p[AHKeD9e'_4`-ajF+/>l+8k%=s#9-$DI,PqiAZDfmH^YJfa#=d!qI@3=pEG6H:E.c&fN8k_^?ei+nKMZ<(Ou"V4i4$j\afW%1;D0=8N='#^)/=fp6d,pP+0FpGmU6tK@fsM22<U.NT?tQ/5bO8*1qdaN+RaPQRBi>rT.f9g4LJkF&[U9%&A=!:*PQ+hfK_(1?T"g%1o`2_noAqAR7h`)=T\)Q<;W$nR/fcQ(2g>'"V)1gG@#(hRu<".HGEhO,PH-fcOEhD(<:b-pYA$r=4:sB>gpf,IW]+lSDC5I/0<A/%;VV>@&5N^_YR>%Y3>_#`Eb@2*$>kI>1Q)DM3DcO)jt-tL9U$^r-=K:XXqUX7@;^l6;U5o2<XGL*dL$qbHtNh'4?;(*^A,res7,2"%5\[L_>9rehi->]iMW*4nbr4>r!e,a53O2`hYOAD?kbQ/Y9V><0)^E"*=Y-`<(h+JWI>NoC1r(\tHM\Q8Ehj2Jk*AK`fhY4PSn5>p%=?NZcB0L0oDBL11^O!Xc3=rV3;YJ4nW,sk3[TQ/2b)Q^%iaDJ^C%r67d;[P4"pO>p)N6eH5oVO@+H!C:72AK3B,k=(G6AEZj*Ene%6-72Q".GGahtdGs*!n#D"cF@nGi@oB7SoZ\,9]QfMl(hI]6>,)>/t6u%*Y.gVHTK?DmP_5]MDK)2YPfaY%HGT*e8SEeD3H;TXBMs%_351UZpKh[Ze:Uf&>2+9jjRA\^af]D/o\sT,+QK%hX'bBP[^N>+O"3sKo"e4ZK4s<f%J=mHd/=RIc^ngdD0`YY@5?71tW#G7E%Qc%*.b,VjcJ)iK*3c"i69WL0[Vtq5qhujd+=8)gj+/3V/Kj+a3JO-T;([JdJ1ljD-[aoTtQ/C$kS"3,L>.R793)rH1Kq&DQ]6p(Gj]F%,?]9LZ8ZGRCiQe\!:g=1fi14I^]g;NlCd"AV-%f,1[?`P`Nqr!Z4dBfpFnoQq(8/HBP_UD^S_4n.?S;c`CnA$L3ZQi53+D9a\JDo%`(I7#VR.mX<qMX*Sg2F"QK%6f#>5On0@JhQI^Af<bBab,6u\_]kW,*%&4X%t6\CSEoai9#;Y8PWqC(.V"kD'[$^X9E#VJ?;7%[AT%[j::#a5JRM0Lck^&'!?HGVJnaKIbWbT`(MG1SC.6)Os73-dN1#g%:%7)f_2lC:"%@)qE2t`P<$+?ktNRh;7rf2BJ4<3X0"YD_-U@%k';ZZ"#j*;`jPU2.<ZA3o<)]:g_7%jM;2<%oGAj<V/Bc+2Yf[F%M5BFpuc.>pIb3UC.P"]KB^!nWIDF^I7p\Id^us(DgC9=FR_Mt%bg4!LYeG)VYs8UmceRbs6WRDAqO7ZdUYs6($pg3\GR,nM"8*mR5n,OG+jX_Hnt$G?b+.:Bpr5IR?s[ZITR(8<B(VRsK+u,5@*/kC%9S_<BhUsLKKk56$C;e."H:L'Td>0i<X?Zj1Rb6A'4tp<!LnEnc1OJV"Lh/OS?"!KE4;Dk?"(I78LZRWJR(YN5;<A@NX.>/5]dAOt%O3i!P5XD"F4$l0u\.Un5f>b$bAeD=9[7UZ<ClCXufQefW3so5?*u!2kAE]hk\\$2X&)UKh&q?BK'bY>eE/2/C#XN^U"bjp<P7A^T%?(+;nW,3T<Al:4r%VrTm<J`-l@#+u)n-&JEZ,hKdRdABL/8rcO!N<9UKo;IS=8+deau"c"CjiQlHH?`)N(+b<C?W,)anNglB`Qo'%[K.Km7$8G#/-VZd'LW_1'pNg;C&k:X'H:d%NO6Lle+P`X*oCKQ^ueP'JNZA39L348<JdKD=`g4I6%PQR]ZCe'e2aes.G.\jrhB.T%1Ak`C'f:\C&L"L,^Si*^o,pdiT)=i#eNOFk7Q'Z\M7.+i$2=Z8H`>S;p]Je9U;sWnbg(RRTMFZU:&F;tr'8a1@A(W656qUJ!q*o]%9/Rs9nV_Y;?3H]!TaeCU5S8O&78n*<)q<9/h;V!6ZFRa8`C!q:8(s.hG\$m^Y/2a:VAdB$:=t6e8Q;22>\?g<WYN:lSQS].Bu9*t%/GG4g-+L[7M<#^')mT2uD)>0mfW4Rt4AgS.C7`$4;MV5]1ih-s;i's0GSR3<+2[#lLJ&b1;?N&r'krVqWmTGK=PN/5_D.M6@`b4u%o"^Y9/`"R<#t%FDU1".&Q?f6DBer9fYt>BTVeZ&SLMH6/=t0Z/:eM`NY&<Y$Of8'8>.#]$0IFnd/:s6$je9"bg8b2^)hR=+gmd6B%h?DjM83@3fUB5H+?1;HXGXhHb[l?r844.^q(F]bBc(HU8:DReOdt8I%BbP\hY"q[bY!q5i6rLSZgF;`%Qe&cG'$m/Z6Af<kq\`2(%W@t'RCfatf9kVnD:41K\GNJS-cOkbU`7mE#B-tZ^5L4a,N-AUZ#mP4("ti!'[*Ssr0K=2#@F1e8ndoC@<G08r.J#gu@mE*Y&t9#'%):qNT$8GZ()oZ&XpSK)`9=!e$$d]2SPg5nBl6bWEDrh*?&\UK)=V)tai!Q9U7Nc3R#BVt?q>YWc#M>PH*rM]jD'q>U;5V\1_=eil%pm-++m&/(ooC@Kh8k4o\c,ZKs,c_!QPsk\*cm$U2TV5S"=pQ"\B.F#Le&`i?ZBZ]A/W;fqCaH4e`K+'2P*G]%5r2dQOMIIPSM30@%OFTXT:/gp1_FmELS1NHq>U@L^M8m8MQ%U!U2!;>QAK[1'1I$VUX5\!I'$a`.03U=lVd(O@do'(QZ3d""^Ll\JbHDpaEh=%_at@q=%gYHe]%M^Q\lleGih_F<hcbl8>UHA8gBh_RFi!+'T1nP+ZlkFkn0pMBT5&`agB,AeVE!#/\>=b=jfa*IQ[]#U6GH:DY]"Qe5DrT7P%AF81&cmISu(_NIp"L]hnr@]_`\4\b<H8d-EqIF\3)5e9,p2-EP],8\%?FNR<0#<"oXOZ%n-K5T#ce7`k2,ZkX5uG+r/<R>kPse=0%Ln0Es-/P[o<Zb5cF_#sf#52S!8GbhMg-\<:[Mp78_#%a"r>lD?(8Xt)9-cJA6"K^MIS/]$4o>KT,dUi+Zb*1T$Vi%OitePj)Jn(A%1R:Wfp7JF>lnYU9IBkIao*_m*Hee!F&nC$L1?Ud1[]air]"h6,)i3@,$TCEcY]lqAZcOZ%OgZ4'7-)ZL7A^Y)@.?UF>`)ee:[R?b%&#Z%UntjFAUt8t,D&lR`.(<OppLr^MVOi6$Ja8e34WJt!"-TBo2t=umaPP)$$@&PqPqb.a[uC<.re]02$XN_iK`J'`/'Kd(Pn/2&%c#:e/nOcs(V$-<.U;dP#:Mo@L75G"-e>jZtStoFj:@l:=/@ZSV+GjR:b'jBj/Emu?/Z_=n'g7&K\/'8"1SVh1^3\WUm!9t10Z+jB%A$U.1!'POgrZnAJ3MY[a9HNEKdaFem,HTYe#>kZSIOad%qKo&fk,h6:(&c^d?e\A]d\'tAZpRo5g$=],9XnUQ\(f_7bgCMf&KK8W%rF/Emb)5oPAp&>20\2G1K'O\';7G1.ln'_Z=;DE,7C."_AfH.t"J@:1\#_"/a+Rl;%:VFM+51Qh<;Q*9JlO2KKD%Z8j"th3P"@-T%g[.Cic-0/f".(Z!`mfV%2LTa<L">RoOrLW1hKI.]k%m*9!h8<KD;hScRtS*^aS>f0Z3-[DX,*JO#-ose]h)F/6Lk"*KlUV"3&6`b%PKVV(#\J=uFco;u1'67+]b"(Nl"9F$2;&ImJo&(%!016r?A-P7[jiV8V21AaIRH^>87n#?:hbQ^TOcNE:iF9sB$S?RfOX\I*7U45%c[S/POZaha%?!TPhEa@0WrpV1KigiDp*L'5cI1,i`Ld:'+S/`iHm<<L-:i?i0QAX39piFGqpf/c18dcYil\@7b&CqOq,T:VR<X$u%il\?LdVrdgq*lC71@*q*\2*Z)(9C1HTbY2\%9M\6jVt@]hr?*m/S5Nh4@jBGK1$9R9\;Z\JsBarlO9U,Y"Um3;@HW=fKUs+YVKdN%V(>`:APXm[RGIEh=ICj:1dB>7R&cX@gk(gE@js`'buQR[ad7]'PLo\nJ\30DcC4l5KcH!0L^1:R"`Wpng;,5GmS],Fi$A%uQ,?0t%4NV(,^sfZ3MaTE'T(%jk>DF[XIuB2D?m-7PYR/ma:K*u;+HR/`,hj[njKQr&/4u,9h[4Y=%7:,,3ft.gXF7OdT`i![`tfB]nD&AK%Z$,+PmiQJR2dqI9dc)So.u_oC_eqb[:Db%H.h75AferhAfJ-fGDh:30+=O!p&t(r<iN;7mo,!t2UoHG>4bmLn8r^><aSJr%!!krM%!%\9W6VSk05Zt4L(;Q$GgDUasBM(Fl=/3pkM\k"&/q_S+KSrQNr#Os:K.J1f27)GS&uH(;4f&g*"A"XN)A@+?"HbuDiVP6d.%P;i%P.68p&D6G[m">+\PX=QVmf=HCm/hY5/r\\S]ZE-Rk,.o2a+4"hVU'^<fnEpjhG7$7/dn2)>RfuJJ<e/"]rd=:`n'&q%cP$QRBRZ%%K8R2DZDMBM6K$(lKBMXQcN;GI,?5+6DagZ74O<ISQ@\54ScVn"4)^O($Ti8;<!bXio\C3<n3"ITN!had2_GnkhD.G7Gi#`,(O4dX%WLDajb5bl,H!?r!83334%d/^N''c:+e^ENK%.PoMesn[b"no3LMnB<lE!?CZ,2@8p"+Rhr:enaJB`Og+8jT-nCT/)<l7l!:flUT:%4&[^mdHM@8A^QPs*4ebT``7[6k5i1nCU5''F\*GF?QC2B:!s1@>AXBOZB#'m.YX#H)/:Cf;cH'6#dkO^Q*jDI:n(lo]l%*V#$Eh]%.Rr,-AC^*u9gGruBNp:%H_>4!MCmG"+c<Be)rG./F?60)S8(j*/T@`ShC`WE4is#RO"9<TC5a</beG^THGQfP55;u8>\UX#4#kZ)%$[$DaZR*$ad0Kr>4])cqJI?1c@=pJa?dgT>FYj$IWHV`+6\gnQ'g4A<=u,?afS>WR!Io.j=O'5+51PiO93HtJJbC'iHmU,7"t9GK%*)/u.RcAlKWgcg5]urZ5):Uj[8YOtH,+@G`bW4LT"5U)0:8]N4#1sA/H=*6q`YSRhknq<@b4fLWJcLRag)W_&mIg,=Pe<P7M)%c;%Vr=6!0*+I@<$4h;&n:Wuot+Gk:2m:3('YDpF]m1'*UlHi;D\T5OR\54]X9iS$[?I!!!Kr72D<g(\$#IaE4=ipAK1''hnAB1]=!"=%V!Y4Vm5C)7@d7PfIFNn[4,\u.*QWdN["gjTi$t7Ujp?"7g"$hpl=>SVi9FjU$f>\U(,Gl'pf=.[c6d"n>OCrV6anOlr6s#pp2oa0%h.jnn(V8/b%'^*g?/2<6DRKDC$#[/]@03pL\n_GX9)[i'&`"r)eMnM\e]Cg]n5ejHK==IbmqM8lQ[Jgb[osBj"`LdmTE]>"cOj!k%[jl_-eF9SPl%4@YI&h;=^4>N`!(#?2ZiJ;!dkp^mK([eATRn\h'P,Ka!))NSoHOVOV[9jsTI!Uch2kM<Tq7@$Gt:(i9fm8t8,ej`%b>9dZUE01WKrkq%0Yk?-"EbMiJR[PtW@[4s!Pu?1Isi$I;[$qXV.0WU.G@I0/-/R<7=HkiJbA[&-KEmtYmJ&7h5'uBWm!4ENSJ<J%-4Nh>>Y2900'kM_?jZaemOGc#J=T*c5]qS?TAs\5hJJb3B!-iZ2X13pi6`qURb_L.ACL^o8TE=GT:.Q`P)Zjt2!U=gT$);'Ec-S$%iHY5g3lp/CceT=PL15.+T(V1lHQ2`n[-!,8I/p&H9>n4ZCd)'Gp3W[6$mA@6Oe)0R,GZoDb](o%*9fd\gSIu>@eg4i<aN7;rW5Vp%Z2=ce[[WEaOCf)6"nN0G/\Gu;qur1j#P1MkXaN?bq*7<j`%"m*I"QIp)f'qj&>,kF^0uDXVkJ@LJUH&#4eBDB4u[[T(n^=<cX.N]%Rti8Jca+uV0g8AsQS:V@aZGt/T:6WEN6g*S4C@0]aZ<hO4NgCcE:6nBN)H5s;,]JGLGCf9E(#\525_apX-!#d@HBuQ<263\E/M(A%QOifP[mHMY?QDuCQFFGDI-Z9rr,+pk_8_%PJRai["%L)_"..I'K`_AY)$8dEU*5.=ps@m_,R".T8eAa=D>0877Y_42k55.q8"onT%E!BYK`]@;r2kAfW_dlQSn*RSO'#OR!l\CNfqsBFt^\aoj6cf.3^O5cWJ!^32%mU*;qksJnr6+PYs74uis7#9Nci<d`VgnU<cbI-j%oVYK7q>C*RkF_eLk>-U,r#`to]`.QHk<Bt;nbMiRs8'e9K&l^KGl52Brp]Z3qsls?N1pd~>%AI9_PrivateDataEnd